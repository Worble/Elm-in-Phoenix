{"version":3,"sources":["node_modules/phoenix/priv/static/phoenix.js","node_modules/phoenix_html/priv/static/phoenix_html.js","elm/Main.elm","elm/components/Model.elm","elm/components/Msgs.elm","elm/components/Ports.elm","elm/components/Subscriptions.elm","elm/components/Update.elm","elm/components/View.elm","js/app.js","js/socket.js","vendor/main.js"],"names":[],"mappingsntfile":"../priv/static/js/app.js","sourcesContent":["\nrequire.register(\"phoenix/priv/static/phoenix.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix\");\n  (function() {\n    (function (global, factory) {\ntypeof exports === 'object' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\nfactory(global.Phoenix = global.Phoenix || {});\n}(this, (function (exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Phoenix Channels JavaScript client\n *\n * ## Socket Connection\n *\n * A single connection is established to the server and\n * channels are multiplexed over the connection.\n * Connect to the server using the `Socket` class:\n *\n * ```javascript\n *     let socket = new Socket(\"/socket\", {params: {userToken: \"123\"}})\n *     socket.connect()\n * ```\n *\n * The `Socket` constructor takes the mount point of the socket,\n * the authentication params, as well as options that can be found in\n * the Socket docs, such as configuring the `LongPoll` transport, and\n * heartbeat.\n *\n * ## Channels\n *\n * Channels are isolated, concurrent processes on the server that\n * subscribe to topics and broker events between the client and server.\n * To join a channel, you must provide the topic, and channel params for\n * authorization. Here's an example chat room example where `\"new_msg\"`\n * events are listened for, messages are pushed to the server, and\n * the channel is joined with ok/error/timeout matches:\n *\n * ```javascript\n *     let channel = socket.channel(\"room:123\", {token: roomToken})\n *     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n *     $input.onEnter( e => {\n *       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n *        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n *        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n *        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n *     })\n *     channel.join()\n *       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n *       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n *       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n *```\n *\n * ## Joining\n *\n * Creating a channel with `socket.channel(topic, params)`, binds the params to\n * `channel.params`, which are sent up on `channel.join()`.\n * Subsequent rejoins will send up the modified params for\n * updating authorization params, or passing up last_message_id information.\n * Successful joins receive an \"ok\" status, while unsuccessful joins\n * receive \"error\".\n *\n * ## Duplicate Join Subscriptions\n *\n * While the client may join any number of topics on any number of channels,\n * the client may only hold a single subscription for each unique topic at any\n * given time. When attempting to create a duplicate subscription,\n * the server will close the existing channel, log a warning, and\n * spawn a new channel for the topic. The client will have their\n * `channel.onClose` callbacks fired for the existing channel, and the new\n * channel join will have its receive hooks processed as normal.\n *\n * ## Pushing Messages\n *\n * From the previous example, we can see that pushing messages to the server\n * can be done with `channel.push(eventName, payload)` and we can optionally\n * receive responses from the push. Additionally, we can use\n * `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n *  and take action after some period of waiting. The default timeout is 5000ms.\n *\n *\n * ## Socket Hooks\n *\n * Lifecycle events of the multiplexed connection can be hooked into via\n * `socket.onError()` and `socket.onClose()` events, ie:\n *\n * ```javascript\n *     socket.onError( () => console.log(\"there was an error with the connection!\") )\n *     socket.onClose( () => console.log(\"the connection dropped\") )\n * ```\n *\n *\n * ## Channel Hooks\n *\n * For each joined channel, you can bind to `onError` and `onClose` events\n * to monitor the channel lifecycle, ie:\n *\n * ```javascript\n *     channel.onError( () => console.log(\"there was an error!\") )\n *     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n * ```\n *\n * ### onError hooks\n *\n * `onError` hooks are invoked if the socket connection drops, or the channel\n * crashes on the server. In either case, a channel rejoin is attempted\n * automatically in an exponential backoff manner.\n *\n * ### onClose hooks\n *\n * `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n * closed on the server, or 2). The client explicitly closed, by calling\n * `channel.leave()`\n *\n *\n * ## Presence\n *\n * The `Presence` object provides features for syncing presence information\n * from the server with the client and handling presences joining and leaving.\n *\n * ### Syncing initial state from the server\n *\n * `Presence.syncState` is used to sync the list of presences on the server\n * with the client's state. An optional `onJoin` and `onLeave` callback can\n * be provided to react to changes in the client's local presences across\n * disconnects and reconnects with the server.\n *\n * `Presence.syncDiff` is used to sync a diff of presence join and leave\n * events from the server, as they happen. Like `syncState`, `syncDiff`\n * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n * joining or leaving from a device.\n *\n * ### Listing Presences\n *\n * `Presence.list` is used to return a list of presence information\n * based on the local state of metadata. By default, all presence\n * metadata is returned, but a `listBy` function can be supplied to\n * allow the client to select which metadata to use for a given presence.\n * For example, you may have a user online from different devices with\n * a metadata status of \"online\", but they have set themselves to \"away\"\n * on another device. In this case, the app may choose to use the \"away\"\n * status for what appears on the UI. The example below defines a `listBy`\n * function which prioritizes the first metadata which was registered for\n * each user. This could be the first tab they opened, or the first device\n * they came online from:\n *\n * ```javascript\n *     let state = {}\n *     state = Presence.syncState(state, stateFromServer)\n *     let listBy = (id, {metas: [first, ...rest]}) => {\n *       first.count = rest.length + 1 // count of this user's presences\n *       first.id = id\n *       return first\n *     }\n *     let onlineUsers = Presence.list(state, listBy)\n * ```\n *\n *\n * ### Example Usage\n *```javascript\n *     // detect if user has joined for the 1st time or from another tab/device\n *     let onJoin = (id, current, newPres) => {\n *       if(!current){\n *         console.log(\"user has entered for the first time\", newPres)\n *       } else {\n *         console.log(\"user additional presence\", newPres)\n *       }\n *     }\n *     // detect if user has left from all tabs/devices, or is still present\n *     let onLeave = (id, current, leftPres) => {\n *       if(current.metas.length === 0){\n *         console.log(\"user has left from all devices\", leftPres)\n *       } else {\n *         console.log(\"user left from a device\", leftPres)\n *       }\n *     }\n *     let presences = {} // client's initial empty presence state\n *     // receive initial presence data from server, sent after join\n *     myChannel.on(\"presence_state\", state => {\n *       presences = Presence.syncState(presences, state, onJoin, onLeave)\n *       displayUsers(Presence.list(presences))\n *     })\n *     // receive \"presence_diff\" from server, containing join/leave events\n *     myChannel.on(\"presence_diff\", diff => {\n *       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n *       this.setState({users: Presence.list(room.presences, listBy)})\n *     })\n * ```\n * @module phoenix\n */\n\nvar VSN = \"2.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar WS_CLOSE_NORMAL = 1000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar CHANNEL_LIFECYCLE_EVENTS = [CHANNEL_EVENTS.close, CHANNEL_EVENTS.error, CHANNEL_EVENTS.join, CHANNEL_EVENTS.reply, CHANNEL_EVENTS.leave];\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\n/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\n\nvar Push = function () {\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.reset();\n      this.send();\n    }\n\n    /**\n     *\n     */\n\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref,\n        join_ref: this.channel.joinRef()\n      });\n    }\n\n    /**\n     *\n     * @param {*} status\n     * @param {*} callback\n     */\n\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n    }\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status,\n          response = _ref.response,\n          ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        this.cancelTimeout();\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\n/**\n *\n * @param {string} topic\n * @param {Object} params\n * @param {Socket} socket\n */\n\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic + \" \" + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic + \" (\" + _this2.joinRef() + \")\", _this2.joinPush.timeout);\n      var leavePush = new Push(_this2, CHANNEL_EVENTS.leave, {}, _this2.timeout);\n      leavePush.send();\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.joinPush.reset();\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.timeout;\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    /** Leaves the channel\n     *\n     * Unsubscribes from server events, and\n     * instructs channel to terminate on server\n     *\n     * Triggers onClose() hooks\n     *\n     * To receive leave acknowledgements, use the a `receive`\n     * hook to bind to the server ack, ie:\n     *\n     * ```javascript\n     *     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n     * ```\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\");\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling\n     * before dispatching to the channel callbacks.\n     *\n     * Must return the payload, modified or unmodified\n     */\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic, event, payload, joinRef) {\n      if (this.topic !== topic) {\n        return false;\n      }\n      var isLifecycleEvent = CHANNEL_LIFECYCLE_EVENTS.indexOf(event) >= 0;\n\n      if (joinRef && isLifecycleEvent && joinRef !== this.joinRef()) {\n        this.socket.log(\"channel\", \"dropping outdated message\", { topic: topic, event: event, payload: payload, joinRef: joinRef });\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref, joinRef) {\n      var _this4 = this;\n\n      var handledPayload = this.onMessage(event, payload, ref, joinRef);\n      if (payload && !handledPayload) {\n        throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n      }\n\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref, joinRef || _this4.joinRef());\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Serializer = {\n  encode: function encode(msg, callback) {\n    var payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload];\n    return callback(JSON.stringify(payload));\n  },\n  decode: function decode(rawPayload, callback) {\n    var _JSON$parse = JSON.parse(rawPayload),\n        _JSON$parse2 = _slicedToArray(_JSON$parse, 5),\n        join_ref = _JSON$parse2[0],\n        ref = _JSON$parse2[1],\n        topic = _JSON$parse2[2],\n        event = _JSON$parse2[3],\n        payload = _JSON$parse2[4];\n\n    return callback({ join_ref: join_ref, ref: ref, topic: topic, event: event, payload: payload });\n  }\n};\n\n/** Initializes the Socket\n *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} opts - Optional configuration\n * @param {string} opts.transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback.\n * @param {Function} opts.encode - The function to encode outgoing messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.stringify(payload))\n * ```\n *\n * @param {Function} opts.decode - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} opts.timeout - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} opts.heartbeatIntervalMs - The millisec interval to send a heartbeat message\n * @param {number} opts.reconnectAfterMs - The optional function that returns the millsec reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n *  function(tries){\n *    return [1000, 5000, 10000][tries - 1] || 10000\n *  }\n * ```\n * @param {Function} opts.logger - The optional function for specialized logging, ie:\n * ```javascript\n * logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n * ```\n *\n * @param {number}  opts.longpollerTimeout - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {Object}  opts.params - The optional params to pass when connecting\n *\n *\n*/\n\nvar Socket = exports.Socket = function () {\n  function Socket(endPoint) {\n    var _this5 = this;\n\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.defaultEncoder = Serializer.encode;\n    this.defaultDecoder = Serializer.decode;\n    if (this.transport !== LongPoll) {\n      this.encode = opts.encode || this.defaultEncoder;\n      this.decode = opts.decode || this.defaultDecoder;\n    } else {\n      this.encode = this.defaultEncoder;\n      this.decode = this.defaultDecoder;\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.heartbeatTimer = null;\n    this.pendingHeartbeatRef = null;\n    this.reconnectTimer = new Timer(function () {\n      _this5.disconnect(function () {\n        return _this5.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    /**\n     *\n     * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this6 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this6.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this6.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this6.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this6.onConnClose(event);\n      };\n    }\n\n    /**\n     * Logs the message. Override `this.logger` for specialized logging. noops by default\n     * @param {string} kind\n     * @param {string} msg\n     * @param {Object} data\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this7 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL());\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this7.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this8 = this;\n\n      var topic = data.topic,\n          event = data.event,\n          payload = data.payload,\n          ref = data.ref,\n          join_ref = data.join_ref;\n\n      var callback = function callback() {\n        _this8.encode(data, function (result) {\n          _this8.conn.send(result);\n        });\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + join_ref + \", \" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      if (this.pendingHeartbeatRef) {\n        this.pendingHeartbeatRef = null;\n        this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\");\n        this.conn.close(WS_CLOSE_NORMAL, \"hearbeat timeout\");\n        return;\n      }\n      this.pendingHeartbeatRef = this.makeRef();\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var _this9 = this;\n\n      this.decode(rawMessage.data, function (msg) {\n        var topic = msg.topic,\n            event = msg.event,\n            payload = msg.payload,\n            ref = msg.ref,\n            join_ref = msg.join_ref;\n\n        if (ref && ref === _this9.pendingHeartbeatRef) {\n          _this9.pendingHeartbeatRef = null;\n        }\n\n        _this9.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n        _this9.channels.filter(function (channel) {\n          return channel.isMember(topic, event, payload, join_ref);\n        }).forEach(function (channel) {\n          return channel.trigger(event, payload, ref, join_ref);\n        });\n        _this9.stateChangeCallbacks.message.forEach(function (callback) {\n          return callback(msg);\n        });\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this10 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status,\n              token = resp.token,\n              messages = resp.messages;\n\n          _this10.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this10.onmessage({ data: msg });\n            });\n            _this10.poll();\n            break;\n          case 204:\n            _this10.poll();\n            break;\n          case 410:\n            _this10.readyState = SOCKET_STATES.open;\n            _this10.onopen();\n            _this10.poll();\n            break;\n          case 0:\n          case 500:\n            _this10.onerror();\n            _this10.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this11 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this11.onerror(resp && resp.status);\n          _this11.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var _req = window.XMLHttpRequest ? new window.XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(_req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this12 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this12.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this13 = this;\n\n      req.open(method, endPoint, true);\n      req.timeout = timeout;\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this13.states.complete && callback) {\n          var response = _this13.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      if (!resp || resp === \"\") {\n        return null;\n      }\n\n      try {\n        return JSON.parse(resp);\n      } catch (e) {\n        console && console.log(\"failed to parse JSON response\", resp);\n        return null;\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this14 = this;\n\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        var newRefs = newPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var curRefs = currentPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var joinedMetas = newPresence.metas.filter(function (m) {\n          return curRefs.indexOf(m.phx_ref) < 0;\n        });\n        var leftMetas = currentPresence.metas.filter(function (m) {\n          return newRefs.indexOf(m.phx_ref) < 0;\n        });\n        if (joinedMetas.length > 0) {\n          joins[key] = newPresence;\n          joins[key].metas = joinedMetas;\n        }\n        if (leftMetas.length > 0) {\n          leaves[key] = _this14.clone(currentPresence);\n          leaves[key].metas = leftMetas;\n        }\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins: joins, leaves: leaves }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins,\n        leaves = _ref2.leaves;\n\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n\n\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * ## Examples\n *\n * ```javascript\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n * ```\n * @param {Function} callback\n * @param {Function} timerCalc\n */\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    /**\n     * Cancels any previous scheduleTimeout and schedules callback\n     */\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this15 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this15.tries = _this15.tries + 1;\n        _this15.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n})));\n  })();\n});","\nrequire.register(\"phoenix_html/priv/static/phoenix_html.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix_html\");\n  (function() {\n    \"use strict\";\n\n(function() {\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleLinkClick(link) {\n    var message = link.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n        return;\n    }\n\n    var to = link.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", link.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", link.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\");\n\n    form.method = (link.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"hidden\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n\n    while (element && element.getAttribute) {\n      if(element.getAttribute(\"data-method\")) {\n        handleLinkClick(element);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n})();\n  })();\n});","","","","","","","","\"use strict\";\n\nrequire(\"phoenix_html\");\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _phoenix = require(\"phoenix\");\n\nvar socket = new _phoenix.Socket(\"/socket\", { params: { token: window.userToken } });\n\n// When you connect, you'll often need to authenticate the client.\n// For example, imagine you have an authentication plug, `MyAuth`,\n// which authenticates the session and assigns a `:current_user`.\n// If the current user exists you can assign the user's token in\n// the connection for use in the layout.\n//\n// In your \"lib/web/router.ex\":\n//\n//     pipeline :browser do\n//       ...\n//       plug MyAuth\n//       plug :put_user_token\n//     end\n//\n//     defp put_user_token(conn, _) do\n//       if current_user = conn.assigns[:current_user] do\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\n//         assign(conn, :user_token, token)\n//       else\n//         conn\n//       end\n//     end\n//\n// Now you need to pass this token to JavaScript. You can do so\n// inside a script tag in \"lib/web/templates/layout/app.html.eex\":\n//\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\n//\n// You will need to verify the user token in the \"connect/2\" function\n// in \"lib/web/channels/user_socket.ex\":\n//\n//     def connect(%{\"token\" => token}, socket) do\n//       # max_age: 1209600 is equivalent to two weeks in seconds\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1209600) do\n//         {:ok, user_id} ->\n//           {:ok, assign(socket, :user, user_id)}\n//         {:error, reason} ->\n//           :error\n//       end\n//     end\n//\n// Finally, pass the token on connect as below. Or remove it\n// from connect if you don't care about authentication.\n\n// NOTE: The contents of this file will only be executed if\n// you uncomment its entry in \"assets/js/app.js\".\n\n// To use Phoenix channels, the first step is to import Socket\n// and connect at the socket path in \"lib/web/endpoint.ex\":\nsocket.connect();\n\n// Now that you are connected, you can join channels with a topic:\nvar channel = socket.channel(\"topic:subtopic\", {});\nchannel.join().receive(\"ok\", function (resp) {\n  console.log(\"Joined successfully\", resp);\n}).receive(\"error\", function (resp) {\n  console.log(\"Unable to join\", resp);\n});\n\nexports.default = socket;\n","\r\n(function() {\r\n'use strict';\r\n\r\nfunction F2(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return fun(a,b); }; }\r\n  wrapper.arity = 2;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F3(fun)\r\n{\r\n  function wrapper(a) {\r\n    return function(b) { return function(c) { return fun(a, b, c); }; };\r\n  }\r\n  wrapper.arity = 3;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F4(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return fun(a, b, c, d); }; }; };\r\n  }\r\n  wrapper.arity = 4;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F5(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\r\n  }\r\n  wrapper.arity = 5;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F6(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return fun(a, b, c, d, e, f); }; }; }; }; };\r\n  }\r\n  wrapper.arity = 6;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F7(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\r\n  }\r\n  wrapper.arity = 7;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F8(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return function(g) { return function(h) {\r\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\r\n  }\r\n  wrapper.arity = 8;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F9(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return function(g) { return function(h) { return function(i) {\r\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\r\n  }\r\n  wrapper.arity = 9;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction A2(fun, a, b)\r\n{\r\n  return fun.arity === 2\r\n    ? fun.func(a, b)\r\n    : fun(a)(b);\r\n}\r\nfunction A3(fun, a, b, c)\r\n{\r\n  return fun.arity === 3\r\n    ? fun.func(a, b, c)\r\n    : fun(a)(b)(c);\r\n}\r\nfunction A4(fun, a, b, c, d)\r\n{\r\n  return fun.arity === 4\r\n    ? fun.func(a, b, c, d)\r\n    : fun(a)(b)(c)(d);\r\n}\r\nfunction A5(fun, a, b, c, d, e)\r\n{\r\n  return fun.arity === 5\r\n    ? fun.func(a, b, c, d, e)\r\n    : fun(a)(b)(c)(d)(e);\r\n}\r\nfunction A6(fun, a, b, c, d, e, f)\r\n{\r\n  return fun.arity === 6\r\n    ? fun.func(a, b, c, d, e, f)\r\n    : fun(a)(b)(c)(d)(e)(f);\r\n}\r\nfunction A7(fun, a, b, c, d, e, f, g)\r\n{\r\n  return fun.arity === 7\r\n    ? fun.func(a, b, c, d, e, f, g)\r\n    : fun(a)(b)(c)(d)(e)(f)(g);\r\n}\r\nfunction A8(fun, a, b, c, d, e, f, g, h)\r\n{\r\n  return fun.arity === 8\r\n    ? fun.func(a, b, c, d, e, f, g, h)\r\n    : fun(a)(b)(c)(d)(e)(f)(g)(h);\r\n}\r\nfunction A9(fun, a, b, c, d, e, f, g, h, i)\r\n{\r\n  return fun.arity === 9\r\n    ? fun.func(a, b, c, d, e, f, g, h, i)\r\n    : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\r\n}\r\n\r\n//import Native.List //\r\n\r\nvar _elm_lang$core$Native_Array = function() {\r\n\r\n// A RRB-Tree has two distinct data types.\r\n// Leaf -> \"height\"  is always 0\r\n//         \"table\"   is an array of elements\r\n// Node -> \"height\"  is always greater than 0\r\n//         \"table\"   is an array of child nodes\r\n//         \"lengths\" is an array of accumulated lengths of the child nodes\r\n\r\n// M is the maximal table size. 32 seems fast. E is the allowed increase\r\n// of search steps when concatting to find an index. Lower values will\r\n// decrease balancing, but will increase search steps.\r\nvar M = 32;\r\nvar E = 2;\r\n\r\n// An empty array.\r\nvar empty = {\r\n\tctor: '_Array',\r\n\theight: 0,\r\n\ttable: []\r\n};\r\n\r\n\r\nfunction get(i, array)\r\n{\r\n\tif (i < 0 || i >= length(array))\r\n\t{\r\n\t\tthrow new Error(\r\n\t\t\t'Index ' + i + ' is out of range. Check the length of ' +\r\n\t\t\t'your array first or use getMaybe or getWithDefault.');\r\n\t}\r\n\treturn unsafeGet(i, array);\r\n}\r\n\r\n\r\nfunction unsafeGet(i, array)\r\n{\r\n\tfor (var x = array.height; x > 0; x--)\r\n\t{\r\n\t\tvar slot = i >> (x * 5);\r\n\t\twhile (array.lengths[slot] <= i)\r\n\t\t{\r\n\t\t\tslot++;\r\n\t\t}\r\n\t\tif (slot > 0)\r\n\t\t{\r\n\t\t\ti -= array.lengths[slot - 1];\r\n\t\t}\r\n\t\tarray = array.table[slot];\r\n\t}\r\n\treturn array.table[i];\r\n}\r\n\r\n\r\n// Sets the value at the index i. Only the nodes leading to i will get\r\n// copied and updated.\r\nfunction set(i, item, array)\r\n{\r\n\tif (i < 0 || length(array) <= i)\r\n\t{\r\n\t\treturn array;\r\n\t}\r\n\treturn unsafeSet(i, item, array);\r\n}\r\n\r\n\r\nfunction unsafeSet(i, item, array)\r\n{\r\n\tarray = nodeCopy(array);\r\n\r\n\tif (array.height === 0)\r\n\t{\r\n\t\tarray.table[i] = item;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar slot = getSlot(i, array);\r\n\t\tif (slot > 0)\r\n\t\t{\r\n\t\t\ti -= array.lengths[slot - 1];\r\n\t\t}\r\n\t\tarray.table[slot] = unsafeSet(i, item, array.table[slot]);\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n\r\nfunction initialize(len, f)\r\n{\r\n\tif (len <= 0)\r\n\t{\r\n\t\treturn empty;\r\n\t}\r\n\tvar h = Math.floor( Math.log(len) / Math.log(M) );\r\n\treturn initialize_(f, h, 0, len);\r\n}\r\n\r\nfunction initialize_(f, h, from, to)\r\n{\r\n\tif (h === 0)\r\n\t{\r\n\t\tvar table = new Array((to - from) % (M + 1));\r\n\t\tfor (var i = 0; i < table.length; i++)\r\n\t\t{\r\n\t\t  table[i] = f(from + i);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: table\r\n\t\t};\r\n\t}\r\n\r\n\tvar step = Math.pow(M, h);\r\n\tvar table = new Array(Math.ceil((to - from) / step));\r\n\tvar lengths = new Array(table.length);\r\n\tfor (var i = 0; i < table.length; i++)\r\n\t{\r\n\t\ttable[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\r\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\r\n\t}\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: table,\r\n\t\tlengths: lengths\r\n\t};\r\n}\r\n\r\nfunction fromList(list)\r\n{\r\n\tif (list.ctor === '[]')\r\n\t{\r\n\t\treturn empty;\r\n\t}\r\n\r\n\t// Allocate M sized blocks (table) and write list elements to it.\r\n\tvar table = new Array(M);\r\n\tvar nodes = [];\r\n\tvar i = 0;\r\n\r\n\twhile (list.ctor !== '[]')\r\n\t{\r\n\t\ttable[i] = list._0;\r\n\t\tlist = list._1;\r\n\t\ti++;\r\n\r\n\t\t// table is full, so we can push a leaf containing it into the\r\n\t\t// next node.\r\n\t\tif (i === M)\r\n\t\t{\r\n\t\t\tvar leaf = {\r\n\t\t\t\tctor: '_Array',\r\n\t\t\t\theight: 0,\r\n\t\t\t\ttable: table\r\n\t\t\t};\r\n\t\t\tfromListPush(leaf, nodes);\r\n\t\t\ttable = new Array(M);\r\n\t\t\ti = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Maybe there is something left on the table.\r\n\tif (i > 0)\r\n\t{\r\n\t\tvar leaf = {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: table.splice(0, i)\r\n\t\t};\r\n\t\tfromListPush(leaf, nodes);\r\n\t}\r\n\r\n\t// Go through all of the nodes and eventually push them into higher nodes.\r\n\tfor (var h = 0; h < nodes.length - 1; h++)\r\n\t{\r\n\t\tif (nodes[h].table.length > 0)\r\n\t\t{\r\n\t\t\tfromListPush(nodes[h], nodes);\r\n\t\t}\r\n\t}\r\n\r\n\tvar head = nodes[nodes.length - 1];\r\n\tif (head.height > 0 && head.table.length === 1)\r\n\t{\r\n\t\treturn head.table[0];\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\n// Push a node into a higher node as a child.\r\nfunction fromListPush(toPush, nodes)\r\n{\r\n\tvar h = toPush.height;\r\n\r\n\t// Maybe the node on this height does not exist.\r\n\tif (nodes.length === h)\r\n\t{\r\n\t\tvar node = {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: h + 1,\r\n\t\t\ttable: [],\r\n\t\t\tlengths: []\r\n\t\t};\r\n\t\tnodes.push(node);\r\n\t}\r\n\r\n\tnodes[h].table.push(toPush);\r\n\tvar len = length(toPush);\r\n\tif (nodes[h].lengths.length > 0)\r\n\t{\r\n\t\tlen += nodes[h].lengths[nodes[h].lengths.length - 1];\r\n\t}\r\n\tnodes[h].lengths.push(len);\r\n\r\n\tif (nodes[h].table.length === M)\r\n\t{\r\n\t\tfromListPush(nodes[h], nodes);\r\n\t\tnodes[h] = {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: h + 1,\r\n\t\t\ttable: [],\r\n\t\t\tlengths: []\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Pushes an item via push_ to the bottom right of a tree.\r\nfunction push(item, a)\r\n{\r\n\tvar pushed = push_(item, a);\r\n\tif (pushed !== null)\r\n\t{\r\n\t\treturn pushed;\r\n\t}\r\n\r\n\tvar newTree = create(item, a.height);\r\n\treturn siblise(a, newTree);\r\n}\r\n\r\n// Recursively tries to push an item to the bottom-right most\r\n// tree possible. If there is no space left for the item,\r\n// null will be returned.\r\nfunction push_(item, a)\r\n{\r\n\t// Handle resursion stop at leaf level.\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tif (a.table.length < M)\r\n\t\t{\r\n\t\t\tvar newA = {\r\n\t\t\t\tctor: '_Array',\r\n\t\t\t\theight: 0,\r\n\t\t\t\ttable: a.table.slice()\r\n\t\t\t};\r\n\t\t\tnewA.table.push(item);\r\n\t\t\treturn newA;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t  return null;\r\n\t\t}\r\n\t}\r\n\r\n\t// Recursively push\r\n\tvar pushed = push_(item, botRight(a));\r\n\r\n\t// There was space in the bottom right tree, so the slot will\r\n\t// be updated.\r\n\tif (pushed !== null)\r\n\t{\r\n\t\tvar newA = nodeCopy(a);\r\n\t\tnewA.table[newA.table.length - 1] = pushed;\r\n\t\tnewA.lengths[newA.lengths.length - 1]++;\r\n\t\treturn newA;\r\n\t}\r\n\r\n\t// When there was no space left, check if there is space left\r\n\t// for a new slot with a tree which contains only the item\r\n\t// at the bottom.\r\n\tif (a.table.length < M)\r\n\t{\r\n\t\tvar newSlot = create(item, a.height - 1);\r\n\t\tvar newA = nodeCopy(a);\r\n\t\tnewA.table.push(newSlot);\r\n\t\tnewA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\r\n\t\treturn newA;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n// Converts an array into a list of elements.\r\nfunction toList(a)\r\n{\r\n\treturn toList_(_elm_lang$core$Native_List.Nil, a);\r\n}\r\n\r\nfunction toList_(list, a)\r\n{\r\n\tfor (var i = a.table.length - 1; i >= 0; i--)\r\n\t{\r\n\t\tlist =\r\n\t\t\ta.height === 0\r\n\t\t\t\t? _elm_lang$core$Native_List.Cons(a.table[i], list)\r\n\t\t\t\t: toList_(list, a.table[i]);\r\n\t}\r\n\treturn list;\r\n}\r\n\r\n// Maps a function over the elements of an array.\r\nfunction map(f, a)\r\n{\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: new Array(a.table.length)\r\n\t};\r\n\tif (a.height > 0)\r\n\t{\r\n\t\tnewA.lengths = a.lengths;\r\n\t}\r\n\tfor (var i = 0; i < a.table.length; i++)\r\n\t{\r\n\t\tnewA.table[i] =\r\n\t\t\ta.height === 0\r\n\t\t\t\t? f(a.table[i])\r\n\t\t\t\t: map(f, a.table[i]);\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\n// Maps a function over the elements with their index as first argument.\r\nfunction indexedMap(f, a)\r\n{\r\n\treturn indexedMap_(f, a, 0);\r\n}\r\n\r\nfunction indexedMap_(f, a, from)\r\n{\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: new Array(a.table.length)\r\n\t};\r\n\tif (a.height > 0)\r\n\t{\r\n\t\tnewA.lengths = a.lengths;\r\n\t}\r\n\tfor (var i = 0; i < a.table.length; i++)\r\n\t{\r\n\t\tnewA.table[i] =\r\n\t\t\ta.height === 0\r\n\t\t\t\t? A2(f, from + i, a.table[i])\r\n\t\t\t\t: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\nfunction foldl(f, b, a)\r\n{\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tfor (var i = 0; i < a.table.length; i++)\r\n\t\t{\r\n\t\t\tb = A2(f, a.table[i], b);\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (var i = 0; i < a.table.length; i++)\r\n\t\t{\r\n\t\t\tb = foldl(f, b, a.table[i]);\r\n\t\t}\r\n\t}\r\n\treturn b;\r\n}\r\n\r\nfunction foldr(f, b, a)\r\n{\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tfor (var i = a.table.length; i--; )\r\n\t\t{\r\n\t\t\tb = A2(f, a.table[i], b);\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (var i = a.table.length; i--; )\r\n\t\t{\r\n\t\t\tb = foldr(f, b, a.table[i]);\r\n\t\t}\r\n\t}\r\n\treturn b;\r\n}\r\n\r\n// TODO: currently, it slices the right, then the left. This can be\r\n// optimized.\r\nfunction slice(from, to, a)\r\n{\r\n\tif (from < 0)\r\n\t{\r\n\t\tfrom += length(a);\r\n\t}\r\n\tif (to < 0)\r\n\t{\r\n\t\tto += length(a);\r\n\t}\r\n\treturn sliceLeft(from, sliceRight(to, a));\r\n}\r\n\r\nfunction sliceRight(to, a)\r\n{\r\n\tif (to === length(a))\r\n\t{\r\n\t\treturn a;\r\n\t}\r\n\r\n\t// Handle leaf level.\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tvar newA = { ctor:'_Array', height:0 };\r\n\t\tnewA.table = a.table.slice(0, to);\r\n\t\treturn newA;\r\n\t}\r\n\r\n\t// Slice the right recursively.\r\n\tvar right = getSlot(to, a);\r\n\tvar sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\r\n\r\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\r\n\tif (right === 0)\r\n\t{\r\n\t\treturn sliced;\r\n\t}\r\n\r\n\t// Create new node.\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: a.table.slice(0, right),\r\n\t\tlengths: a.lengths.slice(0, right)\r\n\t};\r\n\tif (sliced.table.length > 0)\r\n\t{\r\n\t\tnewA.table[right] = sliced;\r\n\t\tnewA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\nfunction sliceLeft(from, a)\r\n{\r\n\tif (from === 0)\r\n\t{\r\n\t\treturn a;\r\n\t}\r\n\r\n\t// Handle leaf level.\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tvar newA = { ctor:'_Array', height:0 };\r\n\t\tnewA.table = a.table.slice(from, a.table.length + 1);\r\n\t\treturn newA;\r\n\t}\r\n\r\n\t// Slice the left recursively.\r\n\tvar left = getSlot(from, a);\r\n\tvar sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\r\n\r\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\r\n\tif (left === a.table.length - 1)\r\n\t{\r\n\t\treturn sliced;\r\n\t}\r\n\r\n\t// Create new node.\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: a.table.slice(left, a.table.length + 1),\r\n\t\tlengths: new Array(a.table.length - left)\r\n\t};\r\n\tnewA.table[0] = sliced;\r\n\tvar len = 0;\r\n\tfor (var i = 0; i < newA.table.length; i++)\r\n\t{\r\n\t\tlen += length(newA.table[i]);\r\n\t\tnewA.lengths[i] = len;\r\n\t}\r\n\r\n\treturn newA;\r\n}\r\n\r\n// Appends two trees.\r\nfunction append(a,b)\r\n{\r\n\tif (a.table.length === 0)\r\n\t{\r\n\t\treturn b;\r\n\t}\r\n\tif (b.table.length === 0)\r\n\t{\r\n\t\treturn a;\r\n\t}\r\n\r\n\tvar c = append_(a, b);\r\n\r\n\t// Check if both nodes can be crunshed together.\r\n\tif (c[0].table.length + c[1].table.length <= M)\r\n\t{\r\n\t\tif (c[0].table.length === 0)\r\n\t\t{\r\n\t\t\treturn c[1];\r\n\t\t}\r\n\t\tif (c[1].table.length === 0)\r\n\t\t{\r\n\t\t\treturn c[0];\r\n\t\t}\r\n\r\n\t\t// Adjust .table and .lengths\r\n\t\tc[0].table = c[0].table.concat(c[1].table);\r\n\t\tif (c[0].height > 0)\r\n\t\t{\r\n\t\t\tvar len = length(c[0]);\r\n\t\t\tfor (var i = 0; i < c[1].lengths.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc[1].lengths[i] += len;\r\n\t\t\t}\r\n\t\t\tc[0].lengths = c[0].lengths.concat(c[1].lengths);\r\n\t\t}\r\n\r\n\t\treturn c[0];\r\n\t}\r\n\r\n\tif (c[0].height > 0)\r\n\t{\r\n\t\tvar toRemove = calcToRemove(a, b);\r\n\t\tif (toRemove > E)\r\n\t\t{\r\n\t\t\tc = shuffle(c[0], c[1], toRemove);\r\n\t\t}\r\n\t}\r\n\r\n\treturn siblise(c[0], c[1]);\r\n}\r\n\r\n// Returns an array of two nodes; right and left. One node _may_ be empty.\r\nfunction append_(a, b)\r\n{\r\n\tif (a.height === 0 && b.height === 0)\r\n\t{\r\n\t\treturn [a, b];\r\n\t}\r\n\r\n\tif (a.height !== 1 || b.height !== 1)\r\n\t{\r\n\t\tif (a.height === b.height)\r\n\t\t{\r\n\t\t\ta = nodeCopy(a);\r\n\t\t\tb = nodeCopy(b);\r\n\t\t\tvar appended = append_(botRight(a), botLeft(b));\r\n\r\n\t\t\tinsertRight(a, appended[1]);\r\n\t\t\tinsertLeft(b, appended[0]);\r\n\t\t}\r\n\t\telse if (a.height > b.height)\r\n\t\t{\r\n\t\t\ta = nodeCopy(a);\r\n\t\t\tvar appended = append_(botRight(a), b);\r\n\r\n\t\t\tinsertRight(a, appended[0]);\r\n\t\t\tb = parentise(appended[1], appended[1].height + 1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tb = nodeCopy(b);\r\n\t\t\tvar appended = append_(a, botLeft(b));\r\n\r\n\t\t\tvar left = appended[0].table.length === 0 ? 0 : 1;\r\n\t\t\tvar right = left === 0 ? 1 : 0;\r\n\t\t\tinsertLeft(b, appended[left]);\r\n\t\t\ta = parentise(appended[right], appended[right].height + 1);\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if balancing is needed and return based on that.\r\n\tif (a.table.length === 0 || b.table.length === 0)\r\n\t{\r\n\t\treturn [a, b];\r\n\t}\r\n\r\n\tvar toRemove = calcToRemove(a, b);\r\n\tif (toRemove <= E)\r\n\t{\r\n\t\treturn [a, b];\r\n\t}\r\n\treturn shuffle(a, b, toRemove);\r\n}\r\n\r\n// Helperfunctions for append_. Replaces a child node at the side of the parent.\r\nfunction insertRight(parent, node)\r\n{\r\n\tvar index = parent.table.length - 1;\r\n\tparent.table[index] = node;\r\n\tparent.lengths[index] = length(node);\r\n\tparent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\r\n}\r\n\r\nfunction insertLeft(parent, node)\r\n{\r\n\tif (node.table.length > 0)\r\n\t{\r\n\t\tparent.table[0] = node;\r\n\t\tparent.lengths[0] = length(node);\r\n\r\n\t\tvar len = length(parent.table[0]);\r\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\r\n\t\t{\r\n\t\t\tlen += length(parent.table[i]);\r\n\t\t\tparent.lengths[i] = len;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tparent.table.shift();\r\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\r\n\t\t{\r\n\t\t\tparent.lengths[i] = parent.lengths[i] - parent.lengths[0];\r\n\t\t}\r\n\t\tparent.lengths.shift();\r\n\t}\r\n}\r\n\r\n// Returns the extra search steps for E. Refer to the paper.\r\nfunction calcToRemove(a, b)\r\n{\r\n\tvar subLengths = 0;\r\n\tfor (var i = 0; i < a.table.length; i++)\r\n\t{\r\n\t\tsubLengths += a.table[i].table.length;\r\n\t}\r\n\tfor (var i = 0; i < b.table.length; i++)\r\n\t{\r\n\t\tsubLengths += b.table[i].table.length;\r\n\t}\r\n\r\n\tvar toRemove = a.table.length + b.table.length;\r\n\treturn toRemove - (Math.floor((subLengths - 1) / M) + 1);\r\n}\r\n\r\n// get2, set2 and saveSlot are helpers for accessing elements over two arrays.\r\nfunction get2(a, b, index)\r\n{\r\n\treturn index < a.length\r\n\t\t? a[index]\r\n\t\t: b[index - a.length];\r\n}\r\n\r\nfunction set2(a, b, index, value)\r\n{\r\n\tif (index < a.length)\r\n\t{\r\n\t\ta[index] = value;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tb[index - a.length] = value;\r\n\t}\r\n}\r\n\r\nfunction saveSlot(a, b, index, slot)\r\n{\r\n\tset2(a.table, b.table, index, slot);\r\n\r\n\tvar l = (index === 0 || index === a.lengths.length)\r\n\t\t? 0\r\n\t\t: get2(a.lengths, a.lengths, index - 1);\r\n\r\n\tset2(a.lengths, b.lengths, index, l + length(slot));\r\n}\r\n\r\n// Creates a node or leaf with a given length at their arrays for perfomance.\r\n// Is only used by shuffle.\r\nfunction createNode(h, length)\r\n{\r\n\tif (length < 0)\r\n\t{\r\n\t\tlength = 0;\r\n\t}\r\n\tvar a = {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: new Array(length)\r\n\t};\r\n\tif (h > 0)\r\n\t{\r\n\t\ta.lengths = new Array(length);\r\n\t}\r\n\treturn a;\r\n}\r\n\r\n// Returns an array of two balanced nodes.\r\nfunction shuffle(a, b, toRemove)\r\n{\r\n\tvar newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\r\n\tvar newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\r\n\r\n\t// Skip the slots with size M. More precise: copy the slot references\r\n\t// to the new node\r\n\tvar read = 0;\r\n\twhile (get2(a.table, b.table, read).table.length % M === 0)\r\n\t{\r\n\t\tset2(newA.table, newB.table, read, get2(a.table, b.table, read));\r\n\t\tset2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\r\n\t\tread++;\r\n\t}\r\n\r\n\t// Pulling items from left to right, caching in a slot before writing\r\n\t// it into the new nodes.\r\n\tvar write = read;\r\n\tvar slot = new createNode(a.height - 1, 0);\r\n\tvar from = 0;\r\n\r\n\t// If the current slot is still containing data, then there will be at\r\n\t// least one more write, so we do not break this loop yet.\r\n\twhile (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)\r\n\t{\r\n\t\t// Find out the max possible items for copying.\r\n\t\tvar source = get2(a.table, b.table, read);\r\n\t\tvar to = Math.min(M - slot.table.length, source.table.length);\r\n\r\n\t\t// Copy and adjust size table.\r\n\t\tslot.table = slot.table.concat(source.table.slice(from, to));\r\n\t\tif (slot.height > 0)\r\n\t\t{\r\n\t\t\tvar len = slot.lengths.length;\r\n\t\t\tfor (var i = len; i < len + to - from; i++)\r\n\t\t\t{\r\n\t\t\t\tslot.lengths[i] = length(slot.table[i]);\r\n\t\t\t\tslot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfrom += to;\r\n\r\n\t\t// Only proceed to next slots[i] if the current one was\r\n\t\t// fully copied.\r\n\t\tif (source.table.length <= to)\r\n\t\t{\r\n\t\t\tread++; from = 0;\r\n\t\t}\r\n\r\n\t\t// Only create a new slot if the current one is filled up.\r\n\t\tif (slot.table.length === M)\r\n\t\t{\r\n\t\t\tsaveSlot(newA, newB, write, slot);\r\n\t\t\tslot = createNode(a.height - 1, 0);\r\n\t\t\twrite++;\r\n\t\t}\r\n\t}\r\n\r\n\t// Cleanup after the loop. Copy the last slot into the new nodes.\r\n\tif (slot.table.length > 0)\r\n\t{\r\n\t\tsaveSlot(newA, newB, write, slot);\r\n\t\twrite++;\r\n\t}\r\n\r\n\t// Shift the untouched slots to the left\r\n\twhile (read < a.table.length + b.table.length )\r\n\t{\r\n\t\tsaveSlot(newA, newB, write, get2(a.table, b.table, read));\r\n\t\tread++;\r\n\t\twrite++;\r\n\t}\r\n\r\n\treturn [newA, newB];\r\n}\r\n\r\n// Navigation functions\r\nfunction botRight(a)\r\n{\r\n\treturn a.table[a.table.length - 1];\r\n}\r\nfunction botLeft(a)\r\n{\r\n\treturn a.table[0];\r\n}\r\n\r\n// Copies a node for updating. Note that you should not use this if\r\n// only updating only one of \"table\" or \"lengths\" for performance reasons.\r\nfunction nodeCopy(a)\r\n{\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: a.table.slice()\r\n\t};\r\n\tif (a.height > 0)\r\n\t{\r\n\t\tnewA.lengths = a.lengths.slice();\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\n// Returns how many items are in the tree.\r\nfunction length(array)\r\n{\r\n\tif (array.height === 0)\r\n\t{\r\n\t\treturn array.table.length;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn array.lengths[array.lengths.length - 1];\r\n\t}\r\n}\r\n\r\n// Calculates in which slot of \"table\" the item probably is, then\r\n// find the exact slot via forward searching in  \"lengths\". Returns the index.\r\nfunction getSlot(i, a)\r\n{\r\n\tvar slot = i >> (5 * a.height);\r\n\twhile (a.lengths[slot] <= i)\r\n\t{\r\n\t\tslot++;\r\n\t}\r\n\treturn slot;\r\n}\r\n\r\n// Recursively creates a tree with a given height containing\r\n// only the given item.\r\nfunction create(item, h)\r\n{\r\n\tif (h === 0)\r\n\t{\r\n\t\treturn {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: [item]\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: [create(item, h - 1)],\r\n\t\tlengths: [1]\r\n\t};\r\n}\r\n\r\n// Recursively creates a tree that contains the given tree.\r\nfunction parentise(tree, h)\r\n{\r\n\tif (h === tree.height)\r\n\t{\r\n\t\treturn tree;\r\n\t}\r\n\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: [parentise(tree, h - 1)],\r\n\t\tlengths: [length(tree)]\r\n\t};\r\n}\r\n\r\n// Emphasizes blood brotherhood beneath two trees.\r\nfunction siblise(a, b)\r\n{\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height + 1,\r\n\t\ttable: [a, b],\r\n\t\tlengths: [length(a), length(a) + length(b)]\r\n\t};\r\n}\r\n\r\nfunction toJSArray(a)\r\n{\r\n\tvar jsArray = new Array(length(a));\r\n\ttoJSArray_(jsArray, 0, a);\r\n\treturn jsArray;\r\n}\r\n\r\nfunction toJSArray_(jsArray, i, a)\r\n{\r\n\tfor (var t = 0; t < a.table.length; t++)\r\n\t{\r\n\t\tif (a.height === 0)\r\n\t\t{\r\n\t\t\tjsArray[i + t] = a.table[t];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar inc = t === 0 ? 0 : a.lengths[t - 1];\r\n\t\t\ttoJSArray_(jsArray, i + inc, a.table[t]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction fromJSArray(jsArray)\r\n{\r\n\tif (jsArray.length === 0)\r\n\t{\r\n\t\treturn empty;\r\n\t}\r\n\tvar h = Math.floor(Math.log(jsArray.length) / Math.log(M));\r\n\treturn fromJSArray_(jsArray, h, 0, jsArray.length);\r\n}\r\n\r\nfunction fromJSArray_(jsArray, h, from, to)\r\n{\r\n\tif (h === 0)\r\n\t{\r\n\t\treturn {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: jsArray.slice(from, to)\r\n\t\t};\r\n\t}\r\n\r\n\tvar step = Math.pow(M, h);\r\n\tvar table = new Array(Math.ceil((to - from) / step));\r\n\tvar lengths = new Array(table.length);\r\n\tfor (var i = 0; i < table.length; i++)\r\n\t{\r\n\t\ttable[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\r\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);\r\n\t}\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: table,\r\n\t\tlengths: lengths\r\n\t};\r\n}\r\n\r\nreturn {\r\n\tempty: empty,\r\n\tfromList: fromList,\r\n\ttoList: toList,\r\n\tinitialize: F2(initialize),\r\n\tappend: F2(append),\r\n\tpush: F2(push),\r\n\tslice: F3(slice),\r\n\tget: F2(get),\r\n\tset: F3(set),\r\n\tmap: F2(map),\r\n\tindexedMap: F2(indexedMap),\r\n\tfoldl: F3(foldl),\r\n\tfoldr: F3(foldr),\r\n\tlength: length,\r\n\r\n\ttoJSArray: toJSArray,\r\n\tfromJSArray: fromJSArray\r\n};\r\n\r\n}();\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Basics = function() {\r\n\r\nfunction div(a, b)\r\n{\r\n\treturn (a / b) | 0;\r\n}\r\nfunction rem(a, b)\r\n{\r\n\treturn a % b;\r\n}\r\nfunction mod(a, b)\r\n{\r\n\tif (b === 0)\r\n\t{\r\n\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\r\n\t}\r\n\tvar r = a % b;\r\n\tvar m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));\r\n\r\n\treturn m === b ? 0 : m;\r\n}\r\nfunction logBase(base, n)\r\n{\r\n\treturn Math.log(n) / Math.log(base);\r\n}\r\nfunction negate(n)\r\n{\r\n\treturn -n;\r\n}\r\nfunction abs(n)\r\n{\r\n\treturn n < 0 ? -n : n;\r\n}\r\n\r\nfunction min(a, b)\r\n{\r\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) < 0 ? a : b;\r\n}\r\nfunction max(a, b)\r\n{\r\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) > 0 ? a : b;\r\n}\r\nfunction clamp(lo, hi, n)\r\n{\r\n\treturn _elm_lang$core$Native_Utils.cmp(n, lo) < 0\r\n\t\t? lo\r\n\t\t: _elm_lang$core$Native_Utils.cmp(n, hi) > 0\r\n\t\t\t? hi\r\n\t\t\t: n;\r\n}\r\n\r\nvar ord = ['LT', 'EQ', 'GT'];\r\n\r\nfunction compare(x, y)\r\n{\r\n\treturn { ctor: ord[_elm_lang$core$Native_Utils.cmp(x, y) + 1] };\r\n}\r\n\r\nfunction xor(a, b)\r\n{\r\n\treturn a !== b;\r\n}\r\nfunction not(b)\r\n{\r\n\treturn !b;\r\n}\r\nfunction isInfinite(n)\r\n{\r\n\treturn n === Infinity || n === -Infinity;\r\n}\r\n\r\nfunction truncate(n)\r\n{\r\n\treturn n | 0;\r\n}\r\n\r\nfunction degrees(d)\r\n{\r\n\treturn d * Math.PI / 180;\r\n}\r\nfunction turns(t)\r\n{\r\n\treturn 2 * Math.PI * t;\r\n}\r\nfunction fromPolar(point)\r\n{\r\n\tvar r = point._0;\r\n\tvar t = point._1;\r\n\treturn _elm_lang$core$Native_Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\r\n}\r\nfunction toPolar(point)\r\n{\r\n\tvar x = point._0;\r\n\tvar y = point._1;\r\n\treturn _elm_lang$core$Native_Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));\r\n}\r\n\r\nreturn {\r\n\tdiv: F2(div),\r\n\trem: F2(rem),\r\n\tmod: F2(mod),\r\n\r\n\tpi: Math.PI,\r\n\te: Math.E,\r\n\tcos: Math.cos,\r\n\tsin: Math.sin,\r\n\ttan: Math.tan,\r\n\tacos: Math.acos,\r\n\tasin: Math.asin,\r\n\tatan: Math.atan,\r\n\tatan2: F2(Math.atan2),\r\n\r\n\tdegrees: degrees,\r\n\tturns: turns,\r\n\tfromPolar: fromPolar,\r\n\ttoPolar: toPolar,\r\n\r\n\tsqrt: Math.sqrt,\r\n\tlogBase: F2(logBase),\r\n\tnegate: negate,\r\n\tabs: abs,\r\n\tmin: F2(min),\r\n\tmax: F2(max),\r\n\tclamp: F3(clamp),\r\n\tcompare: F2(compare),\r\n\r\n\txor: F2(xor),\r\n\tnot: not,\r\n\r\n\ttruncate: truncate,\r\n\tceiling: Math.ceil,\r\n\tfloor: Math.floor,\r\n\tround: Math.round,\r\n\ttoFloat: function(x) { return x; },\r\n\tisNaN: isNaN,\r\n\tisInfinite: isInfinite\r\n};\r\n\r\n}();\r\n//import //\r\n\r\nvar _elm_lang$core$Native_Utils = function() {\r\n\r\n// COMPARISONS\r\n\r\nfunction eq(x, y)\r\n{\r\n\tvar stack = [];\r\n\tvar isEqual = eqHelp(x, y, 0, stack);\r\n\tvar pair;\r\n\twhile (isEqual && (pair = stack.pop()))\r\n\t{\r\n\t\tisEqual = eqHelp(pair.x, pair.y, 0, stack);\r\n\t}\r\n\treturn isEqual;\r\n}\r\n\r\n\r\nfunction eqHelp(x, y, depth, stack)\r\n{\r\n\tif (depth > 100)\r\n\t{\r\n\t\tstack.push({ x: x, y: y });\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (x === y)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (typeof x !== 'object')\r\n\t{\r\n\t\tif (typeof x === 'function')\r\n\t\t{\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Trying to use `(==)` on functions. There is no way to know if functions are \"the same\" in the Elm sense.'\r\n\t\t\t\t+ ' Read more about this at http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#=='\r\n\t\t\t\t+ ' which describes why it is this way and what the better version will look like.'\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (x === null || y === null)\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\tif (x instanceof Date)\r\n\t{\r\n\t\treturn x.getTime() === y.getTime();\r\n\t}\r\n\r\n\tif (!('ctor' in x))\r\n\t{\r\n\t\tfor (var key in x)\r\n\t\t{\r\n\t\t\tif (!eqHelp(x[key], y[key], depth + 1, stack))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// convert Dicts and Sets to lists\r\n\tif (x.ctor === 'RBNode_elm_builtin' || x.ctor === 'RBEmpty_elm_builtin')\r\n\t{\r\n\t\tx = _elm_lang$core$Dict$toList(x);\r\n\t\ty = _elm_lang$core$Dict$toList(y);\r\n\t}\r\n\tif (x.ctor === 'Set_elm_builtin')\r\n\t{\r\n\t\tx = _elm_lang$core$Set$toList(x);\r\n\t\ty = _elm_lang$core$Set$toList(y);\r\n\t}\r\n\r\n\t// check if lists are equal without recursion\r\n\tif (x.ctor === '::')\r\n\t{\r\n\t\tvar a = x;\r\n\t\tvar b = y;\r\n\t\twhile (a.ctor === '::' && b.ctor === '::')\r\n\t\t{\r\n\t\t\tif (!eqHelp(a._0, b._0, depth + 1, stack))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ta = a._1;\r\n\t\t\tb = b._1;\r\n\t\t}\r\n\t\treturn a.ctor === b.ctor;\r\n\t}\r\n\r\n\t// check if Arrays are equal\r\n\tif (x.ctor === '_Array')\r\n\t{\r\n\t\tvar xs = _elm_lang$core$Native_Array.toJSArray(x);\r\n\t\tvar ys = _elm_lang$core$Native_Array.toJSArray(y);\r\n\t\tif (xs.length !== ys.length)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (var i = 0; i < xs.length; i++)\r\n\t\t{\r\n\t\t\tif (!eqHelp(xs[i], ys[i], depth + 1, stack))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (!eqHelp(x.ctor, y.ctor, depth + 1, stack))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfor (var key in x)\r\n\t{\r\n\t\tif (!eqHelp(x[key], y[key], depth + 1, stack))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\r\n// the particular integer values assigned to LT, EQ, and GT.\r\n\r\nvar LT = -1, EQ = 0, GT = 1;\r\n\r\nfunction cmp(x, y)\r\n{\r\n\tif (typeof x !== 'object')\r\n\t{\r\n\t\treturn x === y ? EQ : x < y ? LT : GT;\r\n\t}\r\n\r\n\tif (x instanceof String)\r\n\t{\r\n\t\tvar a = x.valueOf();\r\n\t\tvar b = y.valueOf();\r\n\t\treturn a === b ? EQ : a < b ? LT : GT;\r\n\t}\r\n\r\n\tif (x.ctor === '::' || x.ctor === '[]')\r\n\t{\r\n\t\twhile (x.ctor === '::' && y.ctor === '::')\r\n\t\t{\r\n\t\t\tvar ord = cmp(x._0, y._0);\r\n\t\t\tif (ord !== EQ)\r\n\t\t\t{\r\n\t\t\t\treturn ord;\r\n\t\t\t}\r\n\t\t\tx = x._1;\r\n\t\t\ty = y._1;\r\n\t\t}\r\n\t\treturn x.ctor === y.ctor ? EQ : x.ctor === '[]' ? LT : GT;\r\n\t}\r\n\r\n\tif (x.ctor.slice(0, 6) === '_Tuple')\r\n\t{\r\n\t\tvar ord;\r\n\t\tvar n = x.ctor.slice(6) - 0;\r\n\t\tvar err = 'cannot compare tuples with more than 6 elements.';\r\n\t\tif (n === 0) return EQ;\r\n\t\tif (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\r\n\t\tif (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\r\n\t\tif (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\r\n\t\tif (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\r\n\t\tif (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\r\n\t\tif (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\r\n\t\tif (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\r\n\t\treturn EQ;\r\n\t}\r\n\r\n\tthrow new Error(\r\n\t\t'Comparison error: comparison is only defined on ints, '\r\n\t\t+ 'floats, times, chars, strings, lists of comparable values, '\r\n\t\t+ 'and tuples of comparable values.'\r\n\t);\r\n}\r\n\r\n\r\n// COMMON VALUES\r\n\r\nvar Tuple0 = {\r\n\tctor: '_Tuple0'\r\n};\r\n\r\nfunction Tuple2(x, y)\r\n{\r\n\treturn {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: x,\r\n\t\t_1: y\r\n\t};\r\n}\r\n\r\nfunction chr(c)\r\n{\r\n\treturn new String(c);\r\n}\r\n\r\n\r\n// GUID\r\n\r\nvar count = 0;\r\nfunction guid(_)\r\n{\r\n\treturn count++;\r\n}\r\n\r\n\r\n// RECORDS\r\n\r\nfunction update(oldRecord, updatedFields)\r\n{\r\n\tvar newRecord = {};\r\n\r\n\tfor (var key in oldRecord)\r\n\t{\r\n\t\tnewRecord[key] = oldRecord[key];\r\n\t}\r\n\r\n\tfor (var key in updatedFields)\r\n\t{\r\n\t\tnewRecord[key] = updatedFields[key];\r\n\t}\r\n\r\n\treturn newRecord;\r\n}\r\n\r\n\r\n//// LIST STUFF ////\r\n\r\nvar Nil = { ctor: '[]' };\r\n\r\nfunction Cons(hd, tl)\r\n{\r\n\treturn {\r\n\t\tctor: '::',\r\n\t\t_0: hd,\r\n\t\t_1: tl\r\n\t};\r\n}\r\n\r\nfunction append(xs, ys)\r\n{\r\n\t// append Strings\r\n\tif (typeof xs === 'string')\r\n\t{\r\n\t\treturn xs + ys;\r\n\t}\r\n\r\n\t// append Lists\r\n\tif (xs.ctor === '[]')\r\n\t{\r\n\t\treturn ys;\r\n\t}\r\n\tvar root = Cons(xs._0, Nil);\r\n\tvar curr = root;\r\n\txs = xs._1;\r\n\twhile (xs.ctor !== '[]')\r\n\t{\r\n\t\tcurr._1 = Cons(xs._0, Nil);\r\n\t\txs = xs._1;\r\n\t\tcurr = curr._1;\r\n\t}\r\n\tcurr._1 = ys;\r\n\treturn root;\r\n}\r\n\r\n\r\n// CRASHES\r\n\r\nfunction crash(moduleName, region)\r\n{\r\n\treturn function(message) {\r\n\t\tthrow new Error(\r\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\\n'\r\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\r\n\t\t\t+ message\r\n\t\t);\r\n\t};\r\n}\r\n\r\nfunction crashCase(moduleName, region, value)\r\n{\r\n\treturn function(message) {\r\n\t\tthrow new Error(\r\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '`\\n\\n'\r\n\t\t\t+ 'This was caused by the `case` expression ' + regionToString(region) + '.\\n'\r\n\t\t\t+ 'One of the branches ended with a crash and the following value got through:\\n\\n    ' + toString(value) + '\\n\\n'\r\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\r\n\t\t\t+ message\r\n\t\t);\r\n\t};\r\n}\r\n\r\nfunction regionToString(region)\r\n{\r\n\tif (region.start.line == region.end.line)\r\n\t{\r\n\t\treturn 'on line ' + region.start.line;\r\n\t}\r\n\treturn 'between lines ' + region.start.line + ' and ' + region.end.line;\r\n}\r\n\r\n\r\n// TO STRING\r\n\r\nfunction toString(v)\r\n{\r\n\tvar type = typeof v;\r\n\tif (type === 'function')\r\n\t{\r\n\t\treturn '<function>';\r\n\t}\r\n\r\n\tif (type === 'boolean')\r\n\t{\r\n\t\treturn v ? 'True' : 'False';\r\n\t}\r\n\r\n\tif (type === 'number')\r\n\t{\r\n\t\treturn v + '';\r\n\t}\r\n\r\n\tif (v instanceof String)\r\n\t{\r\n\t\treturn '\\'' + addSlashes(v, true) + '\\'';\r\n\t}\r\n\r\n\tif (type === 'string')\r\n\t{\r\n\t\treturn '\"' + addSlashes(v, false) + '\"';\r\n\t}\r\n\r\n\tif (v === null)\r\n\t{\r\n\t\treturn 'null';\r\n\t}\r\n\r\n\tif (type === 'object' && 'ctor' in v)\r\n\t{\r\n\t\tvar ctorStarter = v.ctor.substring(0, 5);\r\n\r\n\t\tif (ctorStarter === '_Tupl')\r\n\t\t{\r\n\t\t\tvar output = [];\r\n\t\t\tfor (var k in v)\r\n\t\t\t{\r\n\t\t\t\tif (k === 'ctor') continue;\r\n\t\t\t\toutput.push(toString(v[k]));\r\n\t\t\t}\r\n\t\t\treturn '(' + output.join(',') + ')';\r\n\t\t}\r\n\r\n\t\tif (ctorStarter === '_Task')\r\n\t\t{\r\n\t\t\treturn '<task>'\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '_Array')\r\n\t\t{\r\n\t\t\tvar list = _elm_lang$core$Array$toList(v);\r\n\t\t\treturn 'Array.fromList ' + toString(list);\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '<decoder>')\r\n\t\t{\r\n\t\t\treturn '<decoder>';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '_Process')\r\n\t\t{\r\n\t\t\treturn '<process:' + v.id + '>';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '::')\r\n\t\t{\r\n\t\t\tvar output = '[' + toString(v._0);\r\n\t\t\tv = v._1;\r\n\t\t\twhile (v.ctor === '::')\r\n\t\t\t{\r\n\t\t\t\toutput += ',' + toString(v._0);\r\n\t\t\t\tv = v._1;\r\n\t\t\t}\r\n\t\t\treturn output + ']';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '[]')\r\n\t\t{\r\n\t\t\treturn '[]';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === 'Set_elm_builtin')\r\n\t\t{\r\n\t\t\treturn 'Set.fromList ' + toString(_elm_lang$core$Set$toList(v));\r\n\t\t}\r\n\r\n\t\tif (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin')\r\n\t\t{\r\n\t\t\treturn 'Dict.fromList ' + toString(_elm_lang$core$Dict$toList(v));\r\n\t\t}\r\n\r\n\t\tvar output = '';\r\n\t\tfor (var i in v)\r\n\t\t{\r\n\t\t\tif (i === 'ctor') continue;\r\n\t\t\tvar str = toString(v[i]);\r\n\t\t\tvar c0 = str[0];\r\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\r\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\r\n\t\t}\r\n\t\treturn v.ctor + output;\r\n\t}\r\n\r\n\tif (type === 'object')\r\n\t{\r\n\t\tif (v instanceof Date)\r\n\t\t{\r\n\t\t\treturn '<' + v.toString() + '>';\r\n\t\t}\r\n\r\n\t\tif (v.elm_web_socket)\r\n\t\t{\r\n\t\t\treturn '<websocket>';\r\n\t\t}\r\n\r\n\t\tvar output = [];\r\n\t\tfor (var k in v)\r\n\t\t{\r\n\t\t\toutput.push(k + ' = ' + toString(v[k]));\r\n\t\t}\r\n\t\tif (output.length === 0)\r\n\t\t{\r\n\t\t\treturn '{}';\r\n\t\t}\r\n\t\treturn '{ ' + output.join(', ') + ' }';\r\n\t}\r\n\r\n\treturn '<internal structure>';\r\n}\r\n\r\nfunction addSlashes(str, isChar)\r\n{\r\n\tvar s = str.replace(/\\\\/g, '\\\\\\\\')\r\n\t\t\t  .replace(/\\n/g, '\\\\n')\r\n\t\t\t  .replace(/\\t/g, '\\\\t')\r\n\t\t\t  .replace(/\\r/g, '\\\\r')\r\n\t\t\t  .replace(/\\v/g, '\\\\v')\r\n\t\t\t  .replace(/\\0/g, '\\\\0');\r\n\tif (isChar)\r\n\t{\r\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\r\n\t}\r\n}\r\n\r\n\r\nreturn {\r\n\teq: eq,\r\n\tcmp: cmp,\r\n\tTuple0: Tuple0,\r\n\tTuple2: Tuple2,\r\n\tchr: chr,\r\n\tupdate: update,\r\n\tguid: guid,\r\n\r\n\tappend: F2(append),\r\n\r\n\tcrash: crash,\r\n\tcrashCase: crashCase,\r\n\r\n\ttoString: toString\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$Basics$never = function (_p0) {\r\n\tnever:\r\n\twhile (true) {\r\n\t\tvar _p1 = _p0;\r\n\t\tvar _v1 = _p1._0;\r\n\t\t_p0 = _v1;\r\n\t\tcontinue never;\r\n\t}\r\n};\r\nvar _elm_lang$core$Basics$uncurry = F2(\r\n\tfunction (f, _p2) {\r\n\t\tvar _p3 = _p2;\r\n\t\treturn A2(f, _p3._0, _p3._1);\r\n\t});\r\nvar _elm_lang$core$Basics$curry = F3(\r\n\tfunction (f, a, b) {\r\n\t\treturn f(\r\n\t\t\t{ctor: '_Tuple2', _0: a, _1: b});\r\n\t});\r\nvar _elm_lang$core$Basics$flip = F3(\r\n\tfunction (f, b, a) {\r\n\t\treturn A2(f, a, b);\r\n\t});\r\nvar _elm_lang$core$Basics$always = F2(\r\n\tfunction (a, _p4) {\r\n\t\treturn a;\r\n\t});\r\nvar _elm_lang$core$Basics$identity = function (x) {\r\n\treturn x;\r\n};\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<|'] = F2(\r\n\tfunction (f, x) {\r\n\t\treturn f(x);\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['|>'] = F2(\r\n\tfunction (x, f) {\r\n\t\treturn f(x);\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['>>'] = F3(\r\n\tfunction (f, g, x) {\r\n\t\treturn g(\r\n\t\t\tf(x));\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<<'] = F3(\r\n\tfunction (g, f, x) {\r\n\t\treturn g(\r\n\t\t\tf(x));\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['++'] = _elm_lang$core$Native_Utils.append;\r\nvar _elm_lang$core$Basics$toString = _elm_lang$core$Native_Utils.toString;\r\nvar _elm_lang$core$Basics$isInfinite = _elm_lang$core$Native_Basics.isInfinite;\r\nvar _elm_lang$core$Basics$isNaN = _elm_lang$core$Native_Basics.isNaN;\r\nvar _elm_lang$core$Basics$toFloat = _elm_lang$core$Native_Basics.toFloat;\r\nvar _elm_lang$core$Basics$ceiling = _elm_lang$core$Native_Basics.ceiling;\r\nvar _elm_lang$core$Basics$floor = _elm_lang$core$Native_Basics.floor;\r\nvar _elm_lang$core$Basics$truncate = _elm_lang$core$Native_Basics.truncate;\r\nvar _elm_lang$core$Basics$round = _elm_lang$core$Native_Basics.round;\r\nvar _elm_lang$core$Basics$not = _elm_lang$core$Native_Basics.not;\r\nvar _elm_lang$core$Basics$xor = _elm_lang$core$Native_Basics.xor;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['||'] = _elm_lang$core$Native_Basics.or;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['&&'] = _elm_lang$core$Native_Basics.and;\r\nvar _elm_lang$core$Basics$max = _elm_lang$core$Native_Basics.max;\r\nvar _elm_lang$core$Basics$min = _elm_lang$core$Native_Basics.min;\r\nvar _elm_lang$core$Basics$compare = _elm_lang$core$Native_Basics.compare;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['>='] = _elm_lang$core$Native_Basics.ge;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<='] = _elm_lang$core$Native_Basics.le;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['>'] = _elm_lang$core$Native_Basics.gt;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<'] = _elm_lang$core$Native_Basics.lt;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['/='] = _elm_lang$core$Native_Basics.neq;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['=='] = _elm_lang$core$Native_Basics.eq;\r\nvar _elm_lang$core$Basics$e = _elm_lang$core$Native_Basics.e;\r\nvar _elm_lang$core$Basics$pi = _elm_lang$core$Native_Basics.pi;\r\nvar _elm_lang$core$Basics$clamp = _elm_lang$core$Native_Basics.clamp;\r\nvar _elm_lang$core$Basics$logBase = _elm_lang$core$Native_Basics.logBase;\r\nvar _elm_lang$core$Basics$abs = _elm_lang$core$Native_Basics.abs;\r\nvar _elm_lang$core$Basics$negate = _elm_lang$core$Native_Basics.negate;\r\nvar _elm_lang$core$Basics$sqrt = _elm_lang$core$Native_Basics.sqrt;\r\nvar _elm_lang$core$Basics$atan2 = _elm_lang$core$Native_Basics.atan2;\r\nvar _elm_lang$core$Basics$atan = _elm_lang$core$Native_Basics.atan;\r\nvar _elm_lang$core$Basics$asin = _elm_lang$core$Native_Basics.asin;\r\nvar _elm_lang$core$Basics$acos = _elm_lang$core$Native_Basics.acos;\r\nvar _elm_lang$core$Basics$tan = _elm_lang$core$Native_Basics.tan;\r\nvar _elm_lang$core$Basics$sin = _elm_lang$core$Native_Basics.sin;\r\nvar _elm_lang$core$Basics$cos = _elm_lang$core$Native_Basics.cos;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['^'] = _elm_lang$core$Native_Basics.exp;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['%'] = _elm_lang$core$Native_Basics.mod;\r\nvar _elm_lang$core$Basics$rem = _elm_lang$core$Native_Basics.rem;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['//'] = _elm_lang$core$Native_Basics.div;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['/'] = _elm_lang$core$Native_Basics.floatDiv;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['*'] = _elm_lang$core$Native_Basics.mul;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['-'] = _elm_lang$core$Native_Basics.sub;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['+'] = _elm_lang$core$Native_Basics.add;\r\nvar _elm_lang$core$Basics$toPolar = _elm_lang$core$Native_Basics.toPolar;\r\nvar _elm_lang$core$Basics$fromPolar = _elm_lang$core$Native_Basics.fromPolar;\r\nvar _elm_lang$core$Basics$turns = _elm_lang$core$Native_Basics.turns;\r\nvar _elm_lang$core$Basics$degrees = _elm_lang$core$Native_Basics.degrees;\r\nvar _elm_lang$core$Basics$radians = function (t) {\r\n\treturn t;\r\n};\r\nvar _elm_lang$core$Basics$GT = {ctor: 'GT'};\r\nvar _elm_lang$core$Basics$EQ = {ctor: 'EQ'};\r\nvar _elm_lang$core$Basics$LT = {ctor: 'LT'};\r\nvar _elm_lang$core$Basics$JustOneMore = function (a) {\r\n\treturn {ctor: 'JustOneMore', _0: a};\r\n};\r\n\r\nvar _elm_lang$core$Maybe$withDefault = F2(\r\n\tfunction ($default, maybe) {\r\n\t\tvar _p0 = maybe;\r\n\t\tif (_p0.ctor === 'Just') {\r\n\t\t\treturn _p0._0;\r\n\t\t} else {\r\n\t\t\treturn $default;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$Nothing = {ctor: 'Nothing'};\r\nvar _elm_lang$core$Maybe$andThen = F2(\r\n\tfunction (callback, maybeValue) {\r\n\t\tvar _p1 = maybeValue;\r\n\t\tif (_p1.ctor === 'Just') {\r\n\t\t\treturn callback(_p1._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$Just = function (a) {\r\n\treturn {ctor: 'Just', _0: a};\r\n};\r\nvar _elm_lang$core$Maybe$map = F2(\r\n\tfunction (f, maybe) {\r\n\t\tvar _p2 = maybe;\r\n\t\tif (_p2.ctor === 'Just') {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tf(_p2._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map2 = F3(\r\n\tfunction (func, ma, mb) {\r\n\t\tvar _p3 = {ctor: '_Tuple2', _0: ma, _1: mb};\r\n\t\tif (((_p3.ctor === '_Tuple2') && (_p3._0.ctor === 'Just')) && (_p3._1.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA2(func, _p3._0._0, _p3._1._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map3 = F4(\r\n\tfunction (func, ma, mb, mc) {\r\n\t\tvar _p4 = {ctor: '_Tuple3', _0: ma, _1: mb, _2: mc};\r\n\t\tif ((((_p4.ctor === '_Tuple3') && (_p4._0.ctor === 'Just')) && (_p4._1.ctor === 'Just')) && (_p4._2.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA3(func, _p4._0._0, _p4._1._0, _p4._2._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map4 = F5(\r\n\tfunction (func, ma, mb, mc, md) {\r\n\t\tvar _p5 = {ctor: '_Tuple4', _0: ma, _1: mb, _2: mc, _3: md};\r\n\t\tif (((((_p5.ctor === '_Tuple4') && (_p5._0.ctor === 'Just')) && (_p5._1.ctor === 'Just')) && (_p5._2.ctor === 'Just')) && (_p5._3.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA4(func, _p5._0._0, _p5._1._0, _p5._2._0, _p5._3._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map5 = F6(\r\n\tfunction (func, ma, mb, mc, md, me) {\r\n\t\tvar _p6 = {ctor: '_Tuple5', _0: ma, _1: mb, _2: mc, _3: md, _4: me};\r\n\t\tif ((((((_p6.ctor === '_Tuple5') && (_p6._0.ctor === 'Just')) && (_p6._1.ctor === 'Just')) && (_p6._2.ctor === 'Just')) && (_p6._3.ctor === 'Just')) && (_p6._4.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA5(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0, _p6._4._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_List = function() {\r\n\r\nvar Nil = { ctor: '[]' };\r\n\r\nfunction Cons(hd, tl)\r\n{\r\n\treturn { ctor: '::', _0: hd, _1: tl };\r\n}\r\n\r\nfunction fromArray(arr)\r\n{\r\n\tvar out = Nil;\r\n\tfor (var i = arr.length; i--; )\r\n\t{\r\n\t\tout = Cons(arr[i], out);\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nfunction toArray(xs)\r\n{\r\n\tvar out = [];\r\n\twhile (xs.ctor !== '[]')\r\n\t{\r\n\t\tout.push(xs._0);\r\n\t\txs = xs._1;\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nfunction foldr(f, b, xs)\r\n{\r\n\tvar arr = toArray(xs);\r\n\tvar acc = b;\r\n\tfor (var i = arr.length; i--; )\r\n\t{\r\n\t\tacc = A2(f, arr[i], acc);\r\n\t}\r\n\treturn acc;\r\n}\r\n\r\nfunction map2(f, xs, ys)\r\n{\r\n\tvar arr = [];\r\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A2(f, xs._0, ys._0));\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction map3(f, xs, ys, zs)\r\n{\r\n\tvar arr = [];\r\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A3(f, xs._0, ys._0, zs._0));\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t\tzs = zs._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction map4(f, ws, xs, ys, zs)\r\n{\r\n\tvar arr = [];\r\n\twhile (   ws.ctor !== '[]'\r\n\t\t   && xs.ctor !== '[]'\r\n\t\t   && ys.ctor !== '[]'\r\n\t\t   && zs.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\r\n\t\tws = ws._1;\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t\tzs = zs._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction map5(f, vs, ws, xs, ys, zs)\r\n{\r\n\tvar arr = [];\r\n\twhile (   vs.ctor !== '[]'\r\n\t\t   && ws.ctor !== '[]'\r\n\t\t   && xs.ctor !== '[]'\r\n\t\t   && ys.ctor !== '[]'\r\n\t\t   && zs.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\r\n\t\tvs = vs._1;\r\n\t\tws = ws._1;\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t\tzs = zs._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction sortBy(f, xs)\r\n{\r\n\treturn fromArray(toArray(xs).sort(function(a, b) {\r\n\t\treturn _elm_lang$core$Native_Utils.cmp(f(a), f(b));\r\n\t}));\r\n}\r\n\r\nfunction sortWith(f, xs)\r\n{\r\n\treturn fromArray(toArray(xs).sort(function(a, b) {\r\n\t\tvar ord = f(a)(b).ctor;\r\n\t\treturn ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\r\n\t}));\r\n}\r\n\r\nreturn {\r\n\tNil: Nil,\r\n\tCons: Cons,\r\n\tcons: F2(Cons),\r\n\ttoArray: toArray,\r\n\tfromArray: fromArray,\r\n\r\n\tfoldr: F3(foldr),\r\n\r\n\tmap2: F3(map2),\r\n\tmap3: F4(map3),\r\n\tmap4: F5(map4),\r\n\tmap5: F6(map5),\r\n\tsortBy: F2(sortBy),\r\n\tsortWith: F2(sortWith)\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$List$sortWith = _elm_lang$core$Native_List.sortWith;\r\nvar _elm_lang$core$List$sortBy = _elm_lang$core$Native_List.sortBy;\r\nvar _elm_lang$core$List$sort = function (xs) {\r\n\treturn A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$identity, xs);\r\n};\r\nvar _elm_lang$core$List$singleton = function (value) {\r\n\treturn {\r\n\t\tctor: '::',\r\n\t\t_0: value,\r\n\t\t_1: {ctor: '[]'}\r\n\t};\r\n};\r\nvar _elm_lang$core$List$drop = F2(\r\n\tfunction (n, list) {\r\n\t\tdrop:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\r\n\t\t\t\treturn list;\r\n\t\t\t} else {\r\n\t\t\t\tvar _p0 = list;\r\n\t\t\t\tif (_p0.ctor === '[]') {\r\n\t\t\t\t\treturn list;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _v1 = n - 1,\r\n\t\t\t\t\t\t_v2 = _p0._1;\r\n\t\t\t\t\tn = _v1;\r\n\t\t\t\t\tlist = _v2;\r\n\t\t\t\t\tcontinue drop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$map5 = _elm_lang$core$Native_List.map5;\r\nvar _elm_lang$core$List$map4 = _elm_lang$core$Native_List.map4;\r\nvar _elm_lang$core$List$map3 = _elm_lang$core$Native_List.map3;\r\nvar _elm_lang$core$List$map2 = _elm_lang$core$Native_List.map2;\r\nvar _elm_lang$core$List$any = F2(\r\n\tfunction (isOkay, list) {\r\n\t\tany:\r\n\t\twhile (true) {\r\n\t\t\tvar _p1 = list;\r\n\t\t\tif (_p1.ctor === '[]') {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tif (isOkay(_p1._0)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _v4 = isOkay,\r\n\t\t\t\t\t\t_v5 = _p1._1;\r\n\t\t\t\t\tisOkay = _v4;\r\n\t\t\t\t\tlist = _v5;\r\n\t\t\t\t\tcontinue any;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$all = F2(\r\n\tfunction (isOkay, list) {\r\n\t\treturn !A2(\r\n\t\t\t_elm_lang$core$List$any,\r\n\t\t\tfunction (_p2) {\r\n\t\t\t\treturn !isOkay(_p2);\r\n\t\t\t},\r\n\t\t\tlist);\r\n\t});\r\nvar _elm_lang$core$List$foldr = _elm_lang$core$Native_List.foldr;\r\nvar _elm_lang$core$List$foldl = F3(\r\n\tfunction (func, acc, list) {\r\n\t\tfoldl:\r\n\t\twhile (true) {\r\n\t\t\tvar _p3 = list;\r\n\t\t\tif (_p3.ctor === '[]') {\r\n\t\t\t\treturn acc;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v7 = func,\r\n\t\t\t\t\t_v8 = A2(func, _p3._0, acc),\r\n\t\t\t\t\t_v9 = _p3._1;\r\n\t\t\t\tfunc = _v7;\r\n\t\t\t\tacc = _v8;\r\n\t\t\t\tlist = _v9;\r\n\t\t\t\tcontinue foldl;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$length = function (xs) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (_p4, i) {\r\n\t\t\t\treturn i + 1;\r\n\t\t\t}),\r\n\t\t0,\r\n\t\txs);\r\n};\r\nvar _elm_lang$core$List$sum = function (numbers) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (x, y) {\r\n\t\t\t\treturn x + y;\r\n\t\t\t}),\r\n\t\t0,\r\n\t\tnumbers);\r\n};\r\nvar _elm_lang$core$List$product = function (numbers) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (x, y) {\r\n\t\t\t\treturn x * y;\r\n\t\t\t}),\r\n\t\t1,\r\n\t\tnumbers);\r\n};\r\nvar _elm_lang$core$List$maximum = function (list) {\r\n\tvar _p5 = list;\r\n\tif (_p5.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$max, _p5._0, _p5._1));\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$minimum = function (list) {\r\n\tvar _p6 = list;\r\n\tif (_p6.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$min, _p6._0, _p6._1));\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$member = F2(\r\n\tfunction (x, xs) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$List$any,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn _elm_lang$core$Native_Utils.eq(a, x);\r\n\t\t\t},\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$isEmpty = function (xs) {\r\n\tvar _p7 = xs;\r\n\tif (_p7.ctor === '[]') {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$tail = function (list) {\r\n\tvar _p8 = list;\r\n\tif (_p8.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(_p8._1);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$head = function (list) {\r\n\tvar _p9 = list;\r\n\tif (_p9.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(_p9._0);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List_ops = _elm_lang$core$List_ops || {};\r\n_elm_lang$core$List_ops['::'] = _elm_lang$core$Native_List.cons;\r\nvar _elm_lang$core$List$map = F2(\r\n\tfunction (f, xs) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (x, acc) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: f(x),\r\n\t\t\t\t\t\t_1: acc\r\n\t\t\t\t\t};\r\n\t\t\t\t}),\r\n\t\t\t{ctor: '[]'},\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$filter = F2(\r\n\tfunction (pred, xs) {\r\n\t\tvar conditionalCons = F2(\r\n\t\t\tfunction (front, back) {\r\n\t\t\t\treturn pred(front) ? {ctor: '::', _0: front, _1: back} : back;\r\n\t\t\t});\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\tconditionalCons,\r\n\t\t\t{ctor: '[]'},\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$maybeCons = F3(\r\n\tfunction (f, mx, xs) {\r\n\t\tvar _p10 = f(mx);\r\n\t\tif (_p10.ctor === 'Just') {\r\n\t\t\treturn {ctor: '::', _0: _p10._0, _1: xs};\r\n\t\t} else {\r\n\t\t\treturn xs;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$filterMap = F2(\r\n\tfunction (f, xs) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t_elm_lang$core$List$maybeCons(f),\r\n\t\t\t{ctor: '[]'},\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$reverse = function (list) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (x, y) {\r\n\t\t\t\treturn {ctor: '::', _0: x, _1: y};\r\n\t\t\t}),\r\n\t\t{ctor: '[]'},\r\n\t\tlist);\r\n};\r\nvar _elm_lang$core$List$scanl = F3(\r\n\tfunction (f, b, xs) {\r\n\t\tvar scan1 = F2(\r\n\t\t\tfunction (x, accAcc) {\r\n\t\t\t\tvar _p11 = accAcc;\r\n\t\t\t\tif (_p11.ctor === '::') {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A2(f, x, _p11._0),\r\n\t\t\t\t\t\t_1: accAcc\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {ctor: '[]'};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn _elm_lang$core$List$reverse(\r\n\t\t\tA3(\r\n\t\t\t\t_elm_lang$core$List$foldl,\r\n\t\t\t\tscan1,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: b,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\txs));\r\n\t});\r\nvar _elm_lang$core$List$append = F2(\r\n\tfunction (xs, ys) {\r\n\t\tvar _p12 = ys;\r\n\t\tif (_p12.ctor === '[]') {\r\n\t\t\treturn xs;\r\n\t\t} else {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t\tF2(\r\n\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\treturn {ctor: '::', _0: x, _1: y};\r\n\t\t\t\t\t}),\r\n\t\t\t\tys,\r\n\t\t\t\txs);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$concat = function (lists) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldr,\r\n\t\t_elm_lang$core$List$append,\r\n\t\t{ctor: '[]'},\r\n\t\tlists);\r\n};\r\nvar _elm_lang$core$List$concatMap = F2(\r\n\tfunction (f, list) {\r\n\t\treturn _elm_lang$core$List$concat(\r\n\t\t\tA2(_elm_lang$core$List$map, f, list));\r\n\t});\r\nvar _elm_lang$core$List$partition = F2(\r\n\tfunction (pred, list) {\r\n\t\tvar step = F2(\r\n\t\t\tfunction (x, _p13) {\r\n\t\t\t\tvar _p14 = _p13;\r\n\t\t\t\tvar _p16 = _p14._0;\r\n\t\t\t\tvar _p15 = _p14._1;\r\n\t\t\t\treturn pred(x) ? {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: {ctor: '::', _0: x, _1: _p16},\r\n\t\t\t\t\t_1: _p15\r\n\t\t\t\t} : {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _p16,\r\n\t\t\t\t\t_1: {ctor: '::', _0: x, _1: _p15}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\tstep,\r\n\t\t\t{\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: {ctor: '[]'},\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\tlist);\r\n\t});\r\nvar _elm_lang$core$List$unzip = function (pairs) {\r\n\tvar step = F2(\r\n\t\tfunction (_p18, _p17) {\r\n\t\t\tvar _p19 = _p18;\r\n\t\t\tvar _p20 = _p17;\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: {ctor: '::', _0: _p19._0, _1: _p20._0},\r\n\t\t\t\t_1: {ctor: '::', _0: _p19._1, _1: _p20._1}\r\n\t\t\t};\r\n\t\t});\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldr,\r\n\t\tstep,\r\n\t\t{\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: {ctor: '[]'},\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t},\r\n\t\tpairs);\r\n};\r\nvar _elm_lang$core$List$intersperse = F2(\r\n\tfunction (sep, xs) {\r\n\t\tvar _p21 = xs;\r\n\t\tif (_p21.ctor === '[]') {\r\n\t\t\treturn {ctor: '[]'};\r\n\t\t} else {\r\n\t\t\tvar step = F2(\r\n\t\t\t\tfunction (x, rest) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: sep,\r\n\t\t\t\t\t\t_1: {ctor: '::', _0: x, _1: rest}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tvar spersed = A3(\r\n\t\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t\tstep,\r\n\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t_p21._1);\r\n\t\t\treturn {ctor: '::', _0: _p21._0, _1: spersed};\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$takeReverse = F3(\r\n\tfunction (n, list, taken) {\r\n\t\ttakeReverse:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\r\n\t\t\t\treturn taken;\r\n\t\t\t} else {\r\n\t\t\t\tvar _p22 = list;\r\n\t\t\t\tif (_p22.ctor === '[]') {\r\n\t\t\t\t\treturn taken;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _v23 = n - 1,\r\n\t\t\t\t\t\t_v24 = _p22._1,\r\n\t\t\t\t\t\t_v25 = {ctor: '::', _0: _p22._0, _1: taken};\r\n\t\t\t\t\tn = _v23;\r\n\t\t\t\t\tlist = _v24;\r\n\t\t\t\t\ttaken = _v25;\r\n\t\t\t\t\tcontinue takeReverse;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$takeTailRec = F2(\r\n\tfunction (n, list) {\r\n\t\treturn _elm_lang$core$List$reverse(\r\n\t\t\tA3(\r\n\t\t\t\t_elm_lang$core$List$takeReverse,\r\n\t\t\t\tn,\r\n\t\t\t\tlist,\r\n\t\t\t\t{ctor: '[]'}));\r\n\t});\r\nvar _elm_lang$core$List$takeFast = F3(\r\n\tfunction (ctr, n, list) {\r\n\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\r\n\t\t\treturn {ctor: '[]'};\r\n\t\t} else {\r\n\t\t\tvar _p23 = {ctor: '_Tuple2', _0: n, _1: list};\r\n\t\t\t_v26_5:\r\n\t\t\tdo {\r\n\t\t\t\t_v26_1:\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (_p23.ctor === '_Tuple2') {\r\n\t\t\t\t\t\tif (_p23._1.ctor === '[]') {\r\n\t\t\t\t\t\t\treturn list;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (_p23._1._1.ctor === '::') {\r\n\t\t\t\t\t\t\t\tswitch (_p23._0) {\r\n\t\t\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\t\t\tbreak _v26_1;\r\n\t\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._0,\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t\tif (_p23._1._1._1.ctor === '::') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._1._0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak _v26_5;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tif ((_p23._1._1._1.ctor === '::') && (_p23._1._1._1._1.ctor === '::')) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar _p28 = _p23._1._1._1._0;\r\n\t\t\t\t\t\t\t\t\t\t\tvar _p27 = _p23._1._1._0;\r\n\t\t\t\t\t\t\t\t\t\t\tvar _p26 = _p23._1._0;\r\n\t\t\t\t\t\t\t\t\t\t\tvar _p25 = _p23._1._1._1._1._0;\r\n\t\t\t\t\t\t\t\t\t\t\tvar _p24 = _p23._1._1._1._1._1;\r\n\t\t\t\t\t\t\t\t\t\t\treturn (_elm_lang$core$Native_Utils.cmp(ctr, 1000) > 0) ? {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p26,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p27,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p28,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p25,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: A2(_elm_lang$core$List$takeTailRec, n - 4, _p24)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} : {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p26,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p27,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p28,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p25,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: A3(_elm_lang$core$List$takeFast, ctr + 1, n - 4, _p24)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak _v26_5;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (_p23._0 === 1) {\r\n\t\t\t\t\t\t\t\t\tbreak _v26_1;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak _v26_5;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak _v26_5;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while(false);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _p23._1._0,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t};\r\n\t\t\t} while(false);\r\n\t\t\treturn list;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$take = F2(\r\n\tfunction (n, list) {\r\n\t\treturn A3(_elm_lang$core$List$takeFast, 0, n, list);\r\n\t});\r\nvar _elm_lang$core$List$repeatHelp = F3(\r\n\tfunction (result, n, value) {\r\n\t\trepeatHelp:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\r\n\t\t\t\treturn result;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v27 = {ctor: '::', _0: value, _1: result},\r\n\t\t\t\t\t_v28 = n - 1,\r\n\t\t\t\t\t_v29 = value;\r\n\t\t\t\tresult = _v27;\r\n\t\t\t\tn = _v28;\r\n\t\t\t\tvalue = _v29;\r\n\t\t\t\tcontinue repeatHelp;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$repeat = F2(\r\n\tfunction (n, value) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$repeatHelp,\r\n\t\t\t{ctor: '[]'},\r\n\t\t\tn,\r\n\t\t\tvalue);\r\n\t});\r\nvar _elm_lang$core$List$rangeHelp = F3(\r\n\tfunction (lo, hi, list) {\r\n\t\trangeHelp:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(lo, hi) < 1) {\r\n\t\t\t\tvar _v30 = lo,\r\n\t\t\t\t\t_v31 = hi - 1,\r\n\t\t\t\t\t_v32 = {ctor: '::', _0: hi, _1: list};\r\n\t\t\t\tlo = _v30;\r\n\t\t\t\thi = _v31;\r\n\t\t\t\tlist = _v32;\r\n\t\t\t\tcontinue rangeHelp;\r\n\t\t\t} else {\r\n\t\t\t\treturn list;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$range = F2(\r\n\tfunction (lo, hi) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$rangeHelp,\r\n\t\t\tlo,\r\n\t\t\thi,\r\n\t\t\t{ctor: '[]'});\r\n\t});\r\nvar _elm_lang$core$List$indexedMap = F2(\r\n\tfunction (f, xs) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$map2,\r\n\t\t\tf,\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$List$range,\r\n\t\t\t\t0,\r\n\t\t\t\t_elm_lang$core$List$length(xs) - 1),\r\n\t\t\txs);\r\n\t});\r\n\r\nvar _elm_lang$core$Array$append = _elm_lang$core$Native_Array.append;\r\nvar _elm_lang$core$Array$length = _elm_lang$core$Native_Array.length;\r\nvar _elm_lang$core$Array$isEmpty = function (array) {\r\n\treturn _elm_lang$core$Native_Utils.eq(\r\n\t\t_elm_lang$core$Array$length(array),\r\n\t\t0);\r\n};\r\nvar _elm_lang$core$Array$slice = _elm_lang$core$Native_Array.slice;\r\nvar _elm_lang$core$Array$set = _elm_lang$core$Native_Array.set;\r\nvar _elm_lang$core$Array$get = F2(\r\n\tfunction (i, array) {\r\n\t\treturn ((_elm_lang$core$Native_Utils.cmp(0, i) < 1) && (_elm_lang$core$Native_Utils.cmp(\r\n\t\t\ti,\r\n\t\t\t_elm_lang$core$Native_Array.length(array)) < 0)) ? _elm_lang$core$Maybe$Just(\r\n\t\t\tA2(_elm_lang$core$Native_Array.get, i, array)) : _elm_lang$core$Maybe$Nothing;\r\n\t});\r\nvar _elm_lang$core$Array$push = _elm_lang$core$Native_Array.push;\r\nvar _elm_lang$core$Array$empty = _elm_lang$core$Native_Array.empty;\r\nvar _elm_lang$core$Array$filter = F2(\r\n\tfunction (isOkay, arr) {\r\n\t\tvar update = F2(\r\n\t\t\tfunction (x, xs) {\r\n\t\t\t\treturn isOkay(x) ? A2(_elm_lang$core$Native_Array.push, x, xs) : xs;\r\n\t\t\t});\r\n\t\treturn A3(_elm_lang$core$Native_Array.foldl, update, _elm_lang$core$Native_Array.empty, arr);\r\n\t});\r\nvar _elm_lang$core$Array$foldr = _elm_lang$core$Native_Array.foldr;\r\nvar _elm_lang$core$Array$foldl = _elm_lang$core$Native_Array.foldl;\r\nvar _elm_lang$core$Array$indexedMap = _elm_lang$core$Native_Array.indexedMap;\r\nvar _elm_lang$core$Array$map = _elm_lang$core$Native_Array.map;\r\nvar _elm_lang$core$Array$toIndexedList = function (array) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$map2,\r\n\t\tF2(\r\n\t\t\tfunction (v0, v1) {\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\r\n\t\t\t}),\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$List$range,\r\n\t\t\t0,\r\n\t\t\t_elm_lang$core$Native_Array.length(array) - 1),\r\n\t\t_elm_lang$core$Native_Array.toList(array));\r\n};\r\nvar _elm_lang$core$Array$toList = _elm_lang$core$Native_Array.toList;\r\nvar _elm_lang$core$Array$fromList = _elm_lang$core$Native_Array.fromList;\r\nvar _elm_lang$core$Array$initialize = _elm_lang$core$Native_Array.initialize;\r\nvar _elm_lang$core$Array$repeat = F2(\r\n\tfunction (n, e) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Array$initialize,\r\n\t\t\tn,\r\n\t\t\t_elm_lang$core$Basics$always(e));\r\n\t});\r\nvar _elm_lang$core$Array$Array = {ctor: 'Array'};\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Char = function() {\r\n\r\nreturn {\r\n\tfromCode: function(c) { return _elm_lang$core$Native_Utils.chr(String.fromCharCode(c)); },\r\n\ttoCode: function(c) { return c.charCodeAt(0); },\r\n\ttoUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toUpperCase()); },\r\n\ttoLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLowerCase()); },\r\n\ttoLocaleUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleUpperCase()); },\r\n\ttoLocaleLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleLowerCase()); }\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$Char$fromCode = _elm_lang$core$Native_Char.fromCode;\r\nvar _elm_lang$core$Char$toCode = _elm_lang$core$Native_Char.toCode;\r\nvar _elm_lang$core$Char$toLocaleLower = _elm_lang$core$Native_Char.toLocaleLower;\r\nvar _elm_lang$core$Char$toLocaleUpper = _elm_lang$core$Native_Char.toLocaleUpper;\r\nvar _elm_lang$core$Char$toLower = _elm_lang$core$Native_Char.toLower;\r\nvar _elm_lang$core$Char$toUpper = _elm_lang$core$Native_Char.toUpper;\r\nvar _elm_lang$core$Char$isBetween = F3(\r\n\tfunction (low, high, $char) {\r\n\t\tvar code = _elm_lang$core$Char$toCode($char);\r\n\t\treturn (_elm_lang$core$Native_Utils.cmp(\r\n\t\t\tcode,\r\n\t\t\t_elm_lang$core$Char$toCode(low)) > -1) && (_elm_lang$core$Native_Utils.cmp(\r\n\t\t\tcode,\r\n\t\t\t_elm_lang$core$Char$toCode(high)) < 1);\r\n\t});\r\nvar _elm_lang$core$Char$isUpper = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('A'),\r\n\t_elm_lang$core$Native_Utils.chr('Z'));\r\nvar _elm_lang$core$Char$isLower = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('a'),\r\n\t_elm_lang$core$Native_Utils.chr('z'));\r\nvar _elm_lang$core$Char$isDigit = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('0'),\r\n\t_elm_lang$core$Native_Utils.chr('9'));\r\nvar _elm_lang$core$Char$isOctDigit = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('0'),\r\n\t_elm_lang$core$Native_Utils.chr('7'));\r\nvar _elm_lang$core$Char$isHexDigit = function ($char) {\r\n\treturn _elm_lang$core$Char$isDigit($char) || (A3(\r\n\t\t_elm_lang$core$Char$isBetween,\r\n\t\t_elm_lang$core$Native_Utils.chr('a'),\r\n\t\t_elm_lang$core$Native_Utils.chr('f'),\r\n\t\t$char) || A3(\r\n\t\t_elm_lang$core$Char$isBetween,\r\n\t\t_elm_lang$core$Native_Utils.chr('A'),\r\n\t\t_elm_lang$core$Native_Utils.chr('F'),\r\n\t\t$char));\r\n};\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Scheduler = function() {\r\n\r\nvar MAX_STEPS = 10000;\r\n\r\n\r\n// TASKS\r\n\r\nfunction succeed(value)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_succeed',\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\nfunction fail(error)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_fail',\r\n\t\tvalue: error\r\n\t};\r\n}\r\n\r\nfunction nativeBinding(callback)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_nativeBinding',\r\n\t\tcallback: callback,\r\n\t\tcancel: null\r\n\t};\r\n}\r\n\r\nfunction andThen(callback, task)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_andThen',\r\n\t\tcallback: callback,\r\n\t\ttask: task\r\n\t};\r\n}\r\n\r\nfunction onError(callback, task)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_onError',\r\n\t\tcallback: callback,\r\n\t\ttask: task\r\n\t};\r\n}\r\n\r\nfunction receive(callback)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_receive',\r\n\t\tcallback: callback\r\n\t};\r\n}\r\n\r\n\r\n// PROCESSES\r\n\r\nfunction rawSpawn(task)\r\n{\r\n\tvar process = {\r\n\t\tctor: '_Process',\r\n\t\tid: _elm_lang$core$Native_Utils.guid(),\r\n\t\troot: task,\r\n\t\tstack: null,\r\n\t\tmailbox: []\r\n\t};\r\n\r\n\tenqueue(process);\r\n\r\n\treturn process;\r\n}\r\n\r\nfunction spawn(task)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\tvar process = rawSpawn(task);\r\n\t\tcallback(succeed(process));\r\n\t});\r\n}\r\n\r\nfunction rawSend(process, msg)\r\n{\r\n\tprocess.mailbox.push(msg);\r\n\tenqueue(process);\r\n}\r\n\r\nfunction send(process, msg)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\trawSend(process, msg);\r\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t});\r\n}\r\n\r\nfunction kill(process)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\tvar root = process.root;\r\n\t\tif (root.ctor === '_Task_nativeBinding' && root.cancel)\r\n\t\t{\r\n\t\t\troot.cancel();\r\n\t\t}\r\n\r\n\t\tprocess.root = null;\r\n\r\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t});\r\n}\r\n\r\nfunction sleep(time)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\tvar id = setTimeout(function() {\r\n\t\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t\t}, time);\r\n\r\n\t\treturn function() { clearTimeout(id); };\r\n\t});\r\n}\r\n\r\n\r\n// STEP PROCESSES\r\n\r\nfunction step(numSteps, process)\r\n{\r\n\twhile (numSteps < MAX_STEPS)\r\n\t{\r\n\t\tvar ctor = process.root.ctor;\r\n\r\n\t\tif (ctor === '_Task_succeed')\r\n\t\t{\r\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_onError')\r\n\t\t\t{\r\n\t\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t}\r\n\t\t\tif (process.stack === null)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tprocess.root = process.stack.callback(process.root.value);\r\n\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_fail')\r\n\t\t{\r\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_andThen')\r\n\t\t\t{\r\n\t\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t}\r\n\t\t\tif (process.stack === null)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tprocess.root = process.stack.callback(process.root.value);\r\n\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_andThen')\r\n\t\t{\r\n\t\t\tprocess.stack = {\r\n\t\t\t\tctor: '_Task_andThen',\r\n\t\t\t\tcallback: process.root.callback,\r\n\t\t\t\trest: process.stack\r\n\t\t\t};\r\n\t\t\tprocess.root = process.root.task;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_onError')\r\n\t\t{\r\n\t\t\tprocess.stack = {\r\n\t\t\t\tctor: '_Task_onError',\r\n\t\t\t\tcallback: process.root.callback,\r\n\t\t\t\trest: process.stack\r\n\t\t\t};\r\n\t\t\tprocess.root = process.root.task;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_nativeBinding')\r\n\t\t{\r\n\t\t\tprocess.root.cancel = process.root.callback(function(newRoot) {\r\n\t\t\t\tprocess.root = newRoot;\r\n\t\t\t\tenqueue(process);\r\n\t\t\t});\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_receive')\r\n\t\t{\r\n\t\t\tvar mailbox = process.mailbox;\r\n\t\t\tif (mailbox.length === 0)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tprocess.root = process.root.callback(mailbox.shift());\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tthrow new Error(ctor);\r\n\t}\r\n\r\n\tif (numSteps < MAX_STEPS)\r\n\t{\r\n\t\treturn numSteps + 1;\r\n\t}\r\n\tenqueue(process);\r\n\r\n\treturn numSteps;\r\n}\r\n\r\n\r\n// WORK QUEUE\r\n\r\nvar working = false;\r\nvar workQueue = [];\r\n\r\nfunction enqueue(process)\r\n{\r\n\tworkQueue.push(process);\r\n\r\n\tif (!working)\r\n\t{\r\n\t\tsetTimeout(work, 0);\r\n\t\tworking = true;\r\n\t}\r\n}\r\n\r\nfunction work()\r\n{\r\n\tvar numSteps = 0;\r\n\tvar process;\r\n\twhile (numSteps < MAX_STEPS && (process = workQueue.shift()))\r\n\t{\r\n\t\tif (process.root)\r\n\t\t{\r\n\t\t\tnumSteps = step(numSteps, process);\r\n\t\t}\r\n\t}\r\n\tif (!process)\r\n\t{\r\n\t\tworking = false;\r\n\t\treturn;\r\n\t}\r\n\tsetTimeout(work, 0);\r\n}\r\n\r\n\r\nreturn {\r\n\tsucceed: succeed,\r\n\tfail: fail,\r\n\tnativeBinding: nativeBinding,\r\n\tandThen: F2(andThen),\r\n\tonError: F2(onError),\r\n\treceive: receive,\r\n\r\n\tspawn: spawn,\r\n\tkill: kill,\r\n\tsleep: sleep,\r\n\tsend: F2(send),\r\n\r\n\trawSpawn: rawSpawn,\r\n\trawSend: rawSend\r\n};\r\n\r\n}();\r\n//import //\r\n\r\nvar _elm_lang$core$Native_Platform = function() {\r\n\r\n\r\n// PROGRAMS\r\n\r\nfunction program(impl)\r\n{\r\n\treturn function(flagDecoder)\r\n\t{\r\n\t\treturn function(object, moduleName)\r\n\t\t{\r\n\t\t\tobject['worker'] = function worker(flags)\r\n\t\t\t{\r\n\t\t\t\tif (typeof flags !== 'undefined')\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'The `' + moduleName + '` module does not need flags.\\n'\r\n\t\t\t\t\t\t+ 'Call ' + moduleName + '.worker() with no arguments and you should be all set!'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn initialize(\r\n\t\t\t\t\timpl.init,\r\n\t\t\t\t\timpl.update,\r\n\t\t\t\t\timpl.subscriptions,\r\n\t\t\t\t\trenderer\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n}\r\n\r\nfunction programWithFlags(impl)\r\n{\r\n\treturn function(flagDecoder)\r\n\t{\r\n\t\treturn function(object, moduleName)\r\n\t\t{\r\n\t\t\tobject['worker'] = function worker(flags)\r\n\t\t\t{\r\n\t\t\t\tif (typeof flagDecoder === 'undefined')\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Are you trying to sneak a Never value into Elm? Trickster!\\n'\r\n\t\t\t\t\t\t+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\\n'\r\n\t\t\t\t\t\t+ 'Use `program` instead if you do not want flags.'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);\r\n\t\t\t\tif (result.ctor === 'Err')\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\tmoduleName + '.worker(...) was called with an unexpected argument.\\n'\r\n\t\t\t\t\t\t+ 'I tried to convert it to an Elm value, but ran into this problem:\\n\\n'\r\n\t\t\t\t\t\t+ result._0\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn initialize(\r\n\t\t\t\t\timpl.init(result._0),\r\n\t\t\t\t\timpl.update,\r\n\t\t\t\t\timpl.subscriptions,\r\n\t\t\t\t\trenderer\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n}\r\n\r\nfunction renderer(enqueue, _)\r\n{\r\n\treturn function(_) {};\r\n}\r\n\r\n\r\n// HTML TO PROGRAM\r\n\r\nfunction htmlToProgram(vnode)\r\n{\r\n\tvar emptyBag = batch(_elm_lang$core$Native_List.Nil);\r\n\tvar noChange = _elm_lang$core$Native_Utils.Tuple2(\r\n\t\t_elm_lang$core$Native_Utils.Tuple0,\r\n\t\temptyBag\r\n\t);\r\n\r\n\treturn _elm_lang$virtual_dom$VirtualDom$program({\r\n\t\tinit: noChange,\r\n\t\tview: function(model) { return main; },\r\n\t\tupdate: F2(function(msg, model) { return noChange; }),\r\n\t\tsubscriptions: function (model) { return emptyBag; }\r\n\t});\r\n}\r\n\r\n\r\n// INITIALIZE A PROGRAM\r\n\r\nfunction initialize(init, update, subscriptions, renderer)\r\n{\r\n\t// ambient state\r\n\tvar managers = {};\r\n\tvar updateView;\r\n\r\n\t// init and update state in main process\r\n\tvar initApp = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\r\n\t\tvar model = init._0;\r\n\t\tupdateView = renderer(enqueue, model);\r\n\t\tvar cmds = init._1;\r\n\t\tvar subs = subscriptions(model);\r\n\t\tdispatchEffects(managers, cmds, subs);\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\r\n\t});\r\n\r\n\tfunction onMessage(msg, model)\r\n\t{\r\n\t\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\r\n\t\t\tvar results = A2(update, msg, model);\r\n\t\t\tmodel = results._0;\r\n\t\t\tupdateView(model);\r\n\t\t\tvar cmds = results._1;\r\n\t\t\tvar subs = subscriptions(model);\r\n\t\t\tdispatchEffects(managers, cmds, subs);\r\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\r\n\t\t});\r\n\t}\r\n\r\n\tvar mainProcess = spawnLoop(initApp, onMessage);\r\n\r\n\tfunction enqueue(msg)\r\n\t{\r\n\t\t_elm_lang$core$Native_Scheduler.rawSend(mainProcess, msg);\r\n\t}\r\n\r\n\tvar ports = setupEffects(managers, enqueue);\r\n\r\n\treturn ports ? { ports: ports } : {};\r\n}\r\n\r\n\r\n// EFFECT MANAGERS\r\n\r\nvar effectManagers = {};\r\n\r\nfunction setupEffects(managers, callback)\r\n{\r\n\tvar ports;\r\n\r\n\t// setup all necessary effect managers\r\n\tfor (var key in effectManagers)\r\n\t{\r\n\t\tvar manager = effectManagers[key];\r\n\r\n\t\tif (manager.isForeign)\r\n\t\t{\r\n\t\t\tports = ports || {};\r\n\t\t\tports[key] = manager.tag === 'cmd'\r\n\t\t\t\t? setupOutgoingPort(key)\r\n\t\t\t\t: setupIncomingPort(key, callback);\r\n\t\t}\r\n\r\n\t\tmanagers[key] = makeManager(manager, callback);\r\n\t}\r\n\r\n\treturn ports;\r\n}\r\n\r\nfunction makeManager(info, callback)\r\n{\r\n\tvar router = {\r\n\t\tmain: callback,\r\n\t\tself: undefined\r\n\t};\r\n\r\n\tvar tag = info.tag;\r\n\tvar onEffects = info.onEffects;\r\n\tvar onSelfMsg = info.onSelfMsg;\r\n\r\n\tfunction onMessage(msg, state)\r\n\t{\r\n\t\tif (msg.ctor === 'self')\r\n\t\t{\r\n\t\t\treturn A3(onSelfMsg, router, msg._0, state);\r\n\t\t}\r\n\r\n\t\tvar fx = msg._0;\r\n\t\tswitch (tag)\r\n\t\t{\r\n\t\t\tcase 'cmd':\r\n\t\t\t\treturn A3(onEffects, router, fx.cmds, state);\r\n\r\n\t\t\tcase 'sub':\r\n\t\t\t\treturn A3(onEffects, router, fx.subs, state);\r\n\r\n\t\t\tcase 'fx':\r\n\t\t\t\treturn A4(onEffects, router, fx.cmds, fx.subs, state);\r\n\t\t}\r\n\t}\r\n\r\n\tvar process = spawnLoop(info.init, onMessage);\r\n\trouter.self = process;\r\n\treturn process;\r\n}\r\n\r\nfunction sendToApp(router, msg)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\trouter.main(msg);\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t});\r\n}\r\n\r\nfunction sendToSelf(router, msg)\r\n{\r\n\treturn A2(_elm_lang$core$Native_Scheduler.send, router.self, {\r\n\t\tctor: 'self',\r\n\t\t_0: msg\r\n\t});\r\n}\r\n\r\n\r\n// HELPER for STATEFUL LOOPS\r\n\r\nfunction spawnLoop(init, onMessage)\r\n{\r\n\tvar andThen = _elm_lang$core$Native_Scheduler.andThen;\r\n\r\n\tfunction loop(state)\r\n\t{\r\n\t\tvar handleMsg = _elm_lang$core$Native_Scheduler.receive(function(msg) {\r\n\t\t\treturn onMessage(msg, state);\r\n\t\t});\r\n\t\treturn A2(andThen, loop, handleMsg);\r\n\t}\r\n\r\n\tvar task = A2(andThen, loop, init);\r\n\r\n\treturn _elm_lang$core$Native_Scheduler.rawSpawn(task);\r\n}\r\n\r\n\r\n// BAGS\r\n\r\nfunction leaf(home)\r\n{\r\n\treturn function(value)\r\n\t{\r\n\t\treturn {\r\n\t\t\ttype: 'leaf',\r\n\t\t\thome: home,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t};\r\n}\r\n\r\nfunction batch(list)\r\n{\r\n\treturn {\r\n\t\ttype: 'node',\r\n\t\tbranches: list\r\n\t};\r\n}\r\n\r\nfunction map(tagger, bag)\r\n{\r\n\treturn {\r\n\t\ttype: 'map',\r\n\t\ttagger: tagger,\r\n\t\ttree: bag\r\n\t}\r\n}\r\n\r\n\r\n// PIPE BAGS INTO EFFECT MANAGERS\r\n\r\nfunction dispatchEffects(managers, cmdBag, subBag)\r\n{\r\n\tvar effectsDict = {};\r\n\tgatherEffects(true, cmdBag, effectsDict, null);\r\n\tgatherEffects(false, subBag, effectsDict, null);\r\n\r\n\tfor (var home in managers)\r\n\t{\r\n\t\tvar fx = home in effectsDict\r\n\t\t\t? effectsDict[home]\r\n\t\t\t: {\r\n\t\t\t\tcmds: _elm_lang$core$Native_List.Nil,\r\n\t\t\t\tsubs: _elm_lang$core$Native_List.Nil\r\n\t\t\t};\r\n\r\n\t\t_elm_lang$core$Native_Scheduler.rawSend(managers[home], { ctor: 'fx', _0: fx });\r\n\t}\r\n}\r\n\r\nfunction gatherEffects(isCmd, bag, effectsDict, taggers)\r\n{\r\n\tswitch (bag.type)\r\n\t{\r\n\t\tcase 'leaf':\r\n\t\t\tvar home = bag.home;\r\n\t\t\tvar effect = toEffect(isCmd, home, taggers, bag.value);\r\n\t\t\teffectsDict[home] = insert(isCmd, effect, effectsDict[home]);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'node':\r\n\t\t\tvar list = bag.branches;\r\n\t\t\twhile (list.ctor !== '[]')\r\n\t\t\t{\r\n\t\t\t\tgatherEffects(isCmd, list._0, effectsDict, taggers);\r\n\t\t\t\tlist = list._1;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\r\n\t\tcase 'map':\r\n\t\t\tgatherEffects(isCmd, bag.tree, effectsDict, {\r\n\t\t\t\ttagger: bag.tagger,\r\n\t\t\t\trest: taggers\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction toEffect(isCmd, home, taggers, value)\r\n{\r\n\tfunction applyTaggers(x)\r\n\t{\r\n\t\tvar temp = taggers;\r\n\t\twhile (temp)\r\n\t\t{\r\n\t\t\tx = temp.tagger(x);\r\n\t\t\ttemp = temp.rest;\r\n\t\t}\r\n\t\treturn x;\r\n\t}\r\n\r\n\tvar map = isCmd\r\n\t\t? effectManagers[home].cmdMap\r\n\t\t: effectManagers[home].subMap;\r\n\r\n\treturn A2(map, applyTaggers, value)\r\n}\r\n\r\nfunction insert(isCmd, newEffect, effects)\r\n{\r\n\teffects = effects || {\r\n\t\tcmds: _elm_lang$core$Native_List.Nil,\r\n\t\tsubs: _elm_lang$core$Native_List.Nil\r\n\t};\r\n\tif (isCmd)\r\n\t{\r\n\t\teffects.cmds = _elm_lang$core$Native_List.Cons(newEffect, effects.cmds);\r\n\t\treturn effects;\r\n\t}\r\n\teffects.subs = _elm_lang$core$Native_List.Cons(newEffect, effects.subs);\r\n\treturn effects;\r\n}\r\n\r\n\r\n// PORTS\r\n\r\nfunction checkPortName(name)\r\n{\r\n\tif (name in effectManagers)\r\n\t{\r\n\t\tthrow new Error('There can only be one port named `' + name + '`, but your program has multiple.');\r\n\t}\r\n}\r\n\r\n\r\n// OUTGOING PORTS\r\n\r\nfunction outgoingPort(name, converter)\r\n{\r\n\tcheckPortName(name);\r\n\teffectManagers[name] = {\r\n\t\ttag: 'cmd',\r\n\t\tcmdMap: outgoingPortMap,\r\n\t\tconverter: converter,\r\n\t\tisForeign: true\r\n\t};\r\n\treturn leaf(name);\r\n}\r\n\r\nvar outgoingPortMap = F2(function cmdMap(tagger, value) {\r\n\treturn value;\r\n});\r\n\r\nfunction setupOutgoingPort(name)\r\n{\r\n\tvar subs = [];\r\n\tvar converter = effectManagers[name].converter;\r\n\r\n\t// CREATE MANAGER\r\n\r\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\r\n\r\n\tfunction onEffects(router, cmdList, state)\r\n\t{\r\n\t\twhile (cmdList.ctor !== '[]')\r\n\t\t{\r\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\r\n\t\t\tvar currentSubs = subs;\r\n\t\t\tvar value = converter(cmdList._0);\r\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\r\n\t\t\t{\r\n\t\t\t\tcurrentSubs[i](value);\r\n\t\t\t}\r\n\t\t\tcmdList = cmdList._1;\r\n\t\t}\r\n\t\treturn init;\r\n\t}\r\n\r\n\teffectManagers[name].init = init;\r\n\teffectManagers[name].onEffects = F3(onEffects);\r\n\r\n\t// PUBLIC API\r\n\r\n\tfunction subscribe(callback)\r\n\t{\r\n\t\tsubs.push(callback);\r\n\t}\r\n\r\n\tfunction unsubscribe(callback)\r\n\t{\r\n\t\t// copy subs into a new array in case unsubscribe is called within a\r\n\t\t// subscribed callback\r\n\t\tsubs = subs.slice();\r\n\t\tvar index = subs.indexOf(callback);\r\n\t\tif (index >= 0)\r\n\t\t{\r\n\t\t\tsubs.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tsubscribe: subscribe,\r\n\t\tunsubscribe: unsubscribe\r\n\t};\r\n}\r\n\r\n\r\n// INCOMING PORTS\r\n\r\nfunction incomingPort(name, converter)\r\n{\r\n\tcheckPortName(name);\r\n\teffectManagers[name] = {\r\n\t\ttag: 'sub',\r\n\t\tsubMap: incomingPortMap,\r\n\t\tconverter: converter,\r\n\t\tisForeign: true\r\n\t};\r\n\treturn leaf(name);\r\n}\r\n\r\nvar incomingPortMap = F2(function subMap(tagger, finalTagger)\r\n{\r\n\treturn function(value)\r\n\t{\r\n\t\treturn tagger(finalTagger(value));\r\n\t};\r\n});\r\n\r\nfunction setupIncomingPort(name, callback)\r\n{\r\n\tvar sentBeforeInit = [];\r\n\tvar subs = _elm_lang$core$Native_List.Nil;\r\n\tvar converter = effectManagers[name].converter;\r\n\tvar currentOnEffects = preInitOnEffects;\r\n\tvar currentSend = preInitSend;\r\n\r\n\t// CREATE MANAGER\r\n\r\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\r\n\r\n\tfunction preInitOnEffects(router, subList, state)\r\n\t{\r\n\t\tvar postInitResult = postInitOnEffects(router, subList, state);\r\n\r\n\t\tfor(var i = 0; i < sentBeforeInit.length; i++)\r\n\t\t{\r\n\t\t\tpostInitSend(sentBeforeInit[i]);\r\n\t\t}\r\n\r\n\t\tsentBeforeInit = null; // to release objects held in queue\r\n\t\tcurrentSend = postInitSend;\r\n\t\tcurrentOnEffects = postInitOnEffects;\r\n\t\treturn postInitResult;\r\n\t}\r\n\r\n\tfunction postInitOnEffects(router, subList, state)\r\n\t{\r\n\t\tsubs = subList;\r\n\t\treturn init;\r\n\t}\r\n\r\n\tfunction onEffects(router, subList, state)\r\n\t{\r\n\t\treturn currentOnEffects(router, subList, state);\r\n\t}\r\n\r\n\teffectManagers[name].init = init;\r\n\teffectManagers[name].onEffects = F3(onEffects);\r\n\r\n\t// PUBLIC API\r\n\r\n\tfunction preInitSend(value)\r\n\t{\r\n\t\tsentBeforeInit.push(value);\r\n\t}\r\n\r\n\tfunction postInitSend(value)\r\n\t{\r\n\t\tvar temp = subs;\r\n\t\twhile (temp.ctor !== '[]')\r\n\t\t{\r\n\t\t\tcallback(temp._0(value));\r\n\t\t\ttemp = temp._1;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction send(incomingValue)\r\n\t{\r\n\t\tvar result = A2(_elm_lang$core$Json_Decode$decodeValue, converter, incomingValue);\r\n\t\tif (result.ctor === 'Err')\r\n\t\t{\r\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + name + '`:\\n' + result._0);\r\n\t\t}\r\n\r\n\t\tcurrentSend(result._0);\r\n\t}\r\n\r\n\treturn { send: send };\r\n}\r\n\r\nreturn {\r\n\t// routers\r\n\tsendToApp: F2(sendToApp),\r\n\tsendToSelf: F2(sendToSelf),\r\n\r\n\t// global setup\r\n\teffectManagers: effectManagers,\r\n\toutgoingPort: outgoingPort,\r\n\tincomingPort: incomingPort,\r\n\r\n\thtmlToProgram: htmlToProgram,\r\n\tprogram: program,\r\n\tprogramWithFlags: programWithFlags,\r\n\tinitialize: initialize,\r\n\r\n\t// effect bags\r\n\tleaf: leaf,\r\n\tbatch: batch,\r\n\tmap: F2(map)\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$core$Platform_Cmd$batch = _elm_lang$core$Native_Platform.batch;\r\nvar _elm_lang$core$Platform_Cmd$none = _elm_lang$core$Platform_Cmd$batch(\r\n\t{ctor: '[]'});\r\nvar _elm_lang$core$Platform_Cmd_ops = _elm_lang$core$Platform_Cmd_ops || {};\r\n_elm_lang$core$Platform_Cmd_ops['!'] = F2(\r\n\tfunction (model, commands) {\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: model,\r\n\t\t\t_1: _elm_lang$core$Platform_Cmd$batch(commands)\r\n\t\t};\r\n\t});\r\nvar _elm_lang$core$Platform_Cmd$map = _elm_lang$core$Native_Platform.map;\r\nvar _elm_lang$core$Platform_Cmd$Cmd = {ctor: 'Cmd'};\r\n\r\nvar _elm_lang$core$Platform_Sub$batch = _elm_lang$core$Native_Platform.batch;\r\nvar _elm_lang$core$Platform_Sub$none = _elm_lang$core$Platform_Sub$batch(\r\n\t{ctor: '[]'});\r\nvar _elm_lang$core$Platform_Sub$map = _elm_lang$core$Native_Platform.map;\r\nvar _elm_lang$core$Platform_Sub$Sub = {ctor: 'Sub'};\r\n\r\nvar _elm_lang$core$Platform$hack = _elm_lang$core$Native_Scheduler.succeed;\r\nvar _elm_lang$core$Platform$sendToSelf = _elm_lang$core$Native_Platform.sendToSelf;\r\nvar _elm_lang$core$Platform$sendToApp = _elm_lang$core$Native_Platform.sendToApp;\r\nvar _elm_lang$core$Platform$programWithFlags = _elm_lang$core$Native_Platform.programWithFlags;\r\nvar _elm_lang$core$Platform$program = _elm_lang$core$Native_Platform.program;\r\nvar _elm_lang$core$Platform$Program = {ctor: 'Program'};\r\nvar _elm_lang$core$Platform$Task = {ctor: 'Task'};\r\nvar _elm_lang$core$Platform$ProcessId = {ctor: 'ProcessId'};\r\nvar _elm_lang$core$Platform$Router = {ctor: 'Router'};\r\n\r\nvar _elm_lang$core$Result$toMaybe = function (result) {\r\n\tvar _p0 = result;\r\n\tif (_p0.ctor === 'Ok') {\r\n\t\treturn _elm_lang$core$Maybe$Just(_p0._0);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$Result$withDefault = F2(\r\n\tfunction (def, result) {\r\n\t\tvar _p1 = result;\r\n\t\tif (_p1.ctor === 'Ok') {\r\n\t\t\treturn _p1._0;\r\n\t\t} else {\r\n\t\t\treturn def;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$Err = function (a) {\r\n\treturn {ctor: 'Err', _0: a};\r\n};\r\nvar _elm_lang$core$Result$andThen = F2(\r\n\tfunction (callback, result) {\r\n\t\tvar _p2 = result;\r\n\t\tif (_p2.ctor === 'Ok') {\r\n\t\t\treturn callback(_p2._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p2._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$Ok = function (a) {\r\n\treturn {ctor: 'Ok', _0: a};\r\n};\r\nvar _elm_lang$core$Result$map = F2(\r\n\tfunction (func, ra) {\r\n\t\tvar _p3 = ra;\r\n\t\tif (_p3.ctor === 'Ok') {\r\n\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\tfunc(_p3._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p3._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map2 = F3(\r\n\tfunction (func, ra, rb) {\r\n\t\tvar _p4 = {ctor: '_Tuple2', _0: ra, _1: rb};\r\n\t\tif (_p4._0.ctor === 'Ok') {\r\n\t\t\tif (_p4._1.ctor === 'Ok') {\r\n\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\tA2(func, _p4._0._0, _p4._1._0));\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p4._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p4._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map3 = F4(\r\n\tfunction (func, ra, rb, rc) {\r\n\t\tvar _p5 = {ctor: '_Tuple3', _0: ra, _1: rb, _2: rc};\r\n\t\tif (_p5._0.ctor === 'Ok') {\r\n\t\t\tif (_p5._1.ctor === 'Ok') {\r\n\t\t\t\tif (_p5._2.ctor === 'Ok') {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\t\tA3(func, _p5._0._0, _p5._1._0, _p5._2._0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p5._2._0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p5._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p5._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map4 = F5(\r\n\tfunction (func, ra, rb, rc, rd) {\r\n\t\tvar _p6 = {ctor: '_Tuple4', _0: ra, _1: rb, _2: rc, _3: rd};\r\n\t\tif (_p6._0.ctor === 'Ok') {\r\n\t\t\tif (_p6._1.ctor === 'Ok') {\r\n\t\t\t\tif (_p6._2.ctor === 'Ok') {\r\n\t\t\t\t\tif (_p6._3.ctor === 'Ok') {\r\n\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\t\t\tA4(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._3._0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._2._0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p6._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p6._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map5 = F6(\r\n\tfunction (func, ra, rb, rc, rd, re) {\r\n\t\tvar _p7 = {ctor: '_Tuple5', _0: ra, _1: rb, _2: rc, _3: rd, _4: re};\r\n\t\tif (_p7._0.ctor === 'Ok') {\r\n\t\t\tif (_p7._1.ctor === 'Ok') {\r\n\t\t\t\tif (_p7._2.ctor === 'Ok') {\r\n\t\t\t\t\tif (_p7._3.ctor === 'Ok') {\r\n\t\t\t\t\t\tif (_p7._4.ctor === 'Ok') {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\t\t\t\tA5(func, _p7._0._0, _p7._1._0, _p7._2._0, _p7._3._0, _p7._4._0));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._4._0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._3._0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._2._0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p7._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p7._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$mapError = F2(\r\n\tfunction (f, result) {\r\n\t\tvar _p8 = result;\r\n\t\tif (_p8.ctor === 'Ok') {\r\n\t\t\treturn _elm_lang$core$Result$Ok(_p8._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(\r\n\t\t\t\tf(_p8._0));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$fromMaybe = F2(\r\n\tfunction (err, maybe) {\r\n\t\tvar _p9 = maybe;\r\n\t\tif (_p9.ctor === 'Just') {\r\n\t\t\treturn _elm_lang$core$Result$Ok(_p9._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(err);\r\n\t\t}\r\n\t});\r\n\r\nvar _elm_lang$core$Task$onError = _elm_lang$core$Native_Scheduler.onError;\r\nvar _elm_lang$core$Task$andThen = _elm_lang$core$Native_Scheduler.andThen;\r\nvar _elm_lang$core$Task$spawnCmd = F2(\r\n\tfunction (router, _p0) {\r\n\t\tvar _p1 = _p0;\r\n\t\treturn _elm_lang$core$Native_Scheduler.spawn(\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t_elm_lang$core$Platform$sendToApp(router),\r\n\t\t\t\t_p1._0));\r\n\t});\r\nvar _elm_lang$core$Task$fail = _elm_lang$core$Native_Scheduler.fail;\r\nvar _elm_lang$core$Task$mapError = F2(\r\n\tfunction (convert, task) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$onError,\r\n\t\t\tfunction (_p2) {\r\n\t\t\t\treturn _elm_lang$core$Task$fail(\r\n\t\t\t\t\tconvert(_p2));\r\n\t\t\t},\r\n\t\t\ttask);\r\n\t});\r\nvar _elm_lang$core$Task$succeed = _elm_lang$core$Native_Scheduler.succeed;\r\nvar _elm_lang$core$Task$map = F2(\r\n\tfunction (func, taskA) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\tfunc(a));\r\n\t\t\t},\r\n\t\t\ttaskA);\r\n\t});\r\nvar _elm_lang$core$Task$map2 = F3(\r\n\tfunction (func, taskA, taskB) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tA2(func, a, b));\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttaskB);\r\n\t\t\t},\r\n\t\t\ttaskA);\r\n\t});\r\nvar _elm_lang$core$Task$map3 = F4(\r\n\tfunction (func, taskA, taskB, taskC) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\tfunction (c) {\r\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\tA3(func, a, b, c));\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttaskC);\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttaskB);\r\n\t\t\t},\r\n\t\t\ttaskA);\r\n\t});\r\nvar _elm_lang$core$Task$map4 = F5(\r\n\tfunction (func, taskA, taskB, taskC, taskD) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\tfunction (c) {\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\t\tfunction (d) {\r\n\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\t\t\tA4(func, a, b, c, d));\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttaskD);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttaskC);\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttaskB);\r\n\t\t\t},\r\n\t\t\ttaskA);\r\n\t});\r\nvar _elm_lang$core$Task$map5 = F6(\r\n\tfunction (func, taskA, taskB, taskC, taskD, taskE) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\tfunction (c) {\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\t\tfunction (d) {\r\n\t\t\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\t\t\t\tfunction (e) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tA5(func, a, b, c, d, e));\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\ttaskE);\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttaskD);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttaskC);\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttaskB);\r\n\t\t\t},\r\n\t\t\ttaskA);\r\n\t});\r\nvar _elm_lang$core$Task$sequence = function (tasks) {\r\n\tvar _p3 = tasks;\r\n\tif (_p3.ctor === '[]') {\r\n\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t{ctor: '[]'});\r\n\t} else {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Task$map2,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\treturn {ctor: '::', _0: x, _1: y};\r\n\t\t\t\t}),\r\n\t\t\t_p3._0,\r\n\t\t\t_elm_lang$core$Task$sequence(_p3._1));\r\n\t}\r\n};\r\nvar _elm_lang$core$Task$onEffects = F3(\r\n\tfunction (router, commands, state) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$map,\r\n\t\t\tfunction (_p4) {\r\n\t\t\t\treturn {ctor: '_Tuple0'};\r\n\t\t\t},\r\n\t\t\t_elm_lang$core$Task$sequence(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t_elm_lang$core$Task$spawnCmd(router),\r\n\t\t\t\t\tcommands)));\r\n\t});\r\nvar _elm_lang$core$Task$init = _elm_lang$core$Task$succeed(\r\n\t{ctor: '_Tuple0'});\r\nvar _elm_lang$core$Task$onSelfMsg = F3(\r\n\tfunction (_p7, _p6, _p5) {\r\n\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t{ctor: '_Tuple0'});\r\n\t});\r\nvar _elm_lang$core$Task$command = _elm_lang$core$Native_Platform.leaf('Task');\r\nvar _elm_lang$core$Task$Perform = function (a) {\r\n\treturn {ctor: 'Perform', _0: a};\r\n};\r\nvar _elm_lang$core$Task$perform = F2(\r\n\tfunction (toMessage, task) {\r\n\t\treturn _elm_lang$core$Task$command(\r\n\t\t\t_elm_lang$core$Task$Perform(\r\n\t\t\t\tA2(_elm_lang$core$Task$map, toMessage, task)));\r\n\t});\r\nvar _elm_lang$core$Task$attempt = F2(\r\n\tfunction (resultToMessage, task) {\r\n\t\treturn _elm_lang$core$Task$command(\r\n\t\t\t_elm_lang$core$Task$Perform(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Task$onError,\r\n\t\t\t\t\tfunction (_p8) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tresultToMessage(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Result$Err(_p8)));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\tfunction (_p9) {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\tresultToMessage(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Result$Ok(_p9)));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttask))));\r\n\t});\r\nvar _elm_lang$core$Task$cmdMap = F2(\r\n\tfunction (tagger, _p10) {\r\n\t\tvar _p11 = _p10;\r\n\t\treturn _elm_lang$core$Task$Perform(\r\n\t\t\tA2(_elm_lang$core$Task$map, tagger, _p11._0));\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['Task'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Task$init, onEffects: _elm_lang$core$Task$onEffects, onSelfMsg: _elm_lang$core$Task$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Task$cmdMap};\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Debug = function() {\r\n\r\nfunction log(tag, value)\r\n{\r\n\tvar msg = tag + ': ' + _elm_lang$core$Native_Utils.toString(value);\r\n\tvar process = process || {};\r\n\tif (process.stdout)\r\n\t{\r\n\t\tprocess.stdout.write(msg);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tconsole.log(msg);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\nfunction crash(message)\r\n{\r\n\tthrow new Error(message);\r\n}\r\n\r\nreturn {\r\n\tcrash: crash,\r\n\tlog: F2(log)\r\n};\r\n\r\n}();\r\n//import Maybe, Native.List, Native.Utils, Result //\r\n\r\nvar _elm_lang$core$Native_String = function() {\r\n\r\nfunction isEmpty(str)\r\n{\r\n\treturn str.length === 0;\r\n}\r\nfunction cons(chr, str)\r\n{\r\n\treturn chr + str;\r\n}\r\nfunction uncons(str)\r\n{\r\n\tvar hd = str[0];\r\n\tif (hd)\r\n\t{\r\n\t\treturn _elm_lang$core$Maybe$Just(_elm_lang$core$Native_Utils.Tuple2(_elm_lang$core$Native_Utils.chr(hd), str.slice(1)));\r\n\t}\r\n\treturn _elm_lang$core$Maybe$Nothing;\r\n}\r\nfunction append(a, b)\r\n{\r\n\treturn a + b;\r\n}\r\nfunction concat(strs)\r\n{\r\n\treturn _elm_lang$core$Native_List.toArray(strs).join('');\r\n}\r\nfunction length(str)\r\n{\r\n\treturn str.length;\r\n}\r\nfunction map(f, str)\r\n{\r\n\tvar out = str.split('');\r\n\tfor (var i = out.length; i--; )\r\n\t{\r\n\t\tout[i] = f(_elm_lang$core$Native_Utils.chr(out[i]));\r\n\t}\r\n\treturn out.join('');\r\n}\r\nfunction filter(pred, str)\r\n{\r\n\treturn str.split('').map(_elm_lang$core$Native_Utils.chr).filter(pred).join('');\r\n}\r\nfunction reverse(str)\r\n{\r\n\treturn str.split('').reverse().join('');\r\n}\r\nfunction foldl(f, b, str)\r\n{\r\n\tvar len = str.length;\r\n\tfor (var i = 0; i < len; ++i)\r\n\t{\r\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\r\n\t}\r\n\treturn b;\r\n}\r\nfunction foldr(f, b, str)\r\n{\r\n\tfor (var i = str.length; i--; )\r\n\t{\r\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\r\n\t}\r\n\treturn b;\r\n}\r\nfunction split(sep, str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.split(sep));\r\n}\r\nfunction join(sep, strs)\r\n{\r\n\treturn _elm_lang$core$Native_List.toArray(strs).join(sep);\r\n}\r\nfunction repeat(n, str)\r\n{\r\n\tvar result = '';\r\n\twhile (n > 0)\r\n\t{\r\n\t\tif (n & 1)\r\n\t\t{\r\n\t\t\tresult += str;\r\n\t\t}\r\n\t\tn >>= 1, str += str;\r\n\t}\r\n\treturn result;\r\n}\r\nfunction slice(start, end, str)\r\n{\r\n\treturn str.slice(start, end);\r\n}\r\nfunction left(n, str)\r\n{\r\n\treturn n < 1 ? '' : str.slice(0, n);\r\n}\r\nfunction right(n, str)\r\n{\r\n\treturn n < 1 ? '' : str.slice(-n);\r\n}\r\nfunction dropLeft(n, str)\r\n{\r\n\treturn n < 1 ? str : str.slice(n);\r\n}\r\nfunction dropRight(n, str)\r\n{\r\n\treturn n < 1 ? str : str.slice(0, -n);\r\n}\r\nfunction pad(n, chr, str)\r\n{\r\n\tvar half = (n - str.length) / 2;\r\n\treturn repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);\r\n}\r\nfunction padRight(n, chr, str)\r\n{\r\n\treturn str + repeat(n - str.length, chr);\r\n}\r\nfunction padLeft(n, chr, str)\r\n{\r\n\treturn repeat(n - str.length, chr) + str;\r\n}\r\n\r\nfunction trim(str)\r\n{\r\n\treturn str.trim();\r\n}\r\nfunction trimLeft(str)\r\n{\r\n\treturn str.replace(/^\\s+/, '');\r\n}\r\nfunction trimRight(str)\r\n{\r\n\treturn str.replace(/\\s+$/, '');\r\n}\r\n\r\nfunction words(str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.trim().split(/\\s+/g));\r\n}\r\nfunction lines(str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\r\n}\r\n\r\nfunction toUpper(str)\r\n{\r\n\treturn str.toUpperCase();\r\n}\r\nfunction toLower(str)\r\n{\r\n\treturn str.toLowerCase();\r\n}\r\n\r\nfunction any(pred, str)\r\n{\r\n\tfor (var i = str.length; i--; )\r\n\t{\r\n\t\tif (pred(_elm_lang$core$Native_Utils.chr(str[i])))\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\nfunction all(pred, str)\r\n{\r\n\tfor (var i = str.length; i--; )\r\n\t{\r\n\t\tif (!pred(_elm_lang$core$Native_Utils.chr(str[i])))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction contains(sub, str)\r\n{\r\n\treturn str.indexOf(sub) > -1;\r\n}\r\nfunction startsWith(sub, str)\r\n{\r\n\treturn str.indexOf(sub) === 0;\r\n}\r\nfunction endsWith(sub, str)\r\n{\r\n\treturn str.length >= sub.length &&\r\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\r\n}\r\nfunction indexes(sub, str)\r\n{\r\n\tvar subLen = sub.length;\r\n\r\n\tif (subLen < 1)\r\n\t{\r\n\t\treturn _elm_lang$core$Native_List.Nil;\r\n\t}\r\n\r\n\tvar i = 0;\r\n\tvar is = [];\r\n\r\n\twhile ((i = str.indexOf(sub, i)) > -1)\r\n\t{\r\n\t\tis.push(i);\r\n\t\ti = i + subLen;\r\n\t}\r\n\r\n\treturn _elm_lang$core$Native_List.fromArray(is);\r\n}\r\n\r\n\r\nfunction toInt(s)\r\n{\r\n\tvar len = s.length;\r\n\r\n\t// if empty\r\n\tif (len === 0)\r\n\t{\r\n\t\treturn intErr(s);\r\n\t}\r\n\r\n\t// if hex\r\n\tvar c = s[0];\r\n\tif (c === '0' && s[1] === 'x')\r\n\t{\r\n\t\tfor (var i = 2; i < len; ++i)\r\n\t\t{\r\n\t\t\tvar c = s[i];\r\n\t\t\tif (('0' <= c && c <= '9') || ('A' <= c && c <= 'F') || ('a' <= c && c <= 'f'))\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\treturn intErr(s);\r\n\t\t}\r\n\t\treturn _elm_lang$core$Result$Ok(parseInt(s, 16));\r\n\t}\r\n\r\n\t// is decimal\r\n\tif (c > '9' || (c < '0' && c !== '-' && c !== '+'))\r\n\t{\r\n\t\treturn intErr(s);\r\n\t}\r\n\tfor (var i = 1; i < len; ++i)\r\n\t{\r\n\t\tvar c = s[i];\r\n\t\tif (c < '0' || '9' < c)\r\n\t\t{\r\n\t\t\treturn intErr(s);\r\n\t\t}\r\n\t}\r\n\r\n\treturn _elm_lang$core$Result$Ok(parseInt(s, 10));\r\n}\r\n\r\nfunction intErr(s)\r\n{\r\n\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to an Int\");\r\n}\r\n\r\n\r\nfunction toFloat(s)\r\n{\r\n\t// check if it is a hex, octal, or binary number\r\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\r\n\t{\r\n\t\treturn floatErr(s);\r\n\t}\r\n\tvar n = +s;\r\n\t// faster isNaN check\r\n\treturn n === n ? _elm_lang$core$Result$Ok(n) : floatErr(s);\r\n}\r\n\r\nfunction floatErr(s)\r\n{\r\n\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to a Float\");\r\n}\r\n\r\n\r\nfunction toList(str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.split('').map(_elm_lang$core$Native_Utils.chr));\r\n}\r\nfunction fromList(chars)\r\n{\r\n\treturn _elm_lang$core$Native_List.toArray(chars).join('');\r\n}\r\n\r\nreturn {\r\n\tisEmpty: isEmpty,\r\n\tcons: F2(cons),\r\n\tuncons: uncons,\r\n\tappend: F2(append),\r\n\tconcat: concat,\r\n\tlength: length,\r\n\tmap: F2(map),\r\n\tfilter: F2(filter),\r\n\treverse: reverse,\r\n\tfoldl: F3(foldl),\r\n\tfoldr: F3(foldr),\r\n\r\n\tsplit: F2(split),\r\n\tjoin: F2(join),\r\n\trepeat: F2(repeat),\r\n\r\n\tslice: F3(slice),\r\n\tleft: F2(left),\r\n\tright: F2(right),\r\n\tdropLeft: F2(dropLeft),\r\n\tdropRight: F2(dropRight),\r\n\r\n\tpad: F3(pad),\r\n\tpadLeft: F3(padLeft),\r\n\tpadRight: F3(padRight),\r\n\r\n\ttrim: trim,\r\n\ttrimLeft: trimLeft,\r\n\ttrimRight: trimRight,\r\n\r\n\twords: words,\r\n\tlines: lines,\r\n\r\n\ttoUpper: toUpper,\r\n\ttoLower: toLower,\r\n\r\n\tany: F2(any),\r\n\tall: F2(all),\r\n\r\n\tcontains: F2(contains),\r\n\tstartsWith: F2(startsWith),\r\n\tendsWith: F2(endsWith),\r\n\tindexes: F2(indexes),\r\n\r\n\ttoInt: toInt,\r\n\ttoFloat: toFloat,\r\n\ttoList: toList,\r\n\tfromList: fromList\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$core$String$fromList = _elm_lang$core$Native_String.fromList;\r\nvar _elm_lang$core$String$toList = _elm_lang$core$Native_String.toList;\r\nvar _elm_lang$core$String$toFloat = _elm_lang$core$Native_String.toFloat;\r\nvar _elm_lang$core$String$toInt = _elm_lang$core$Native_String.toInt;\r\nvar _elm_lang$core$String$indices = _elm_lang$core$Native_String.indexes;\r\nvar _elm_lang$core$String$indexes = _elm_lang$core$Native_String.indexes;\r\nvar _elm_lang$core$String$endsWith = _elm_lang$core$Native_String.endsWith;\r\nvar _elm_lang$core$String$startsWith = _elm_lang$core$Native_String.startsWith;\r\nvar _elm_lang$core$String$contains = _elm_lang$core$Native_String.contains;\r\nvar _elm_lang$core$String$all = _elm_lang$core$Native_String.all;\r\nvar _elm_lang$core$String$any = _elm_lang$core$Native_String.any;\r\nvar _elm_lang$core$String$toLower = _elm_lang$core$Native_String.toLower;\r\nvar _elm_lang$core$String$toUpper = _elm_lang$core$Native_String.toUpper;\r\nvar _elm_lang$core$String$lines = _elm_lang$core$Native_String.lines;\r\nvar _elm_lang$core$String$words = _elm_lang$core$Native_String.words;\r\nvar _elm_lang$core$String$trimRight = _elm_lang$core$Native_String.trimRight;\r\nvar _elm_lang$core$String$trimLeft = _elm_lang$core$Native_String.trimLeft;\r\nvar _elm_lang$core$String$trim = _elm_lang$core$Native_String.trim;\r\nvar _elm_lang$core$String$padRight = _elm_lang$core$Native_String.padRight;\r\nvar _elm_lang$core$String$padLeft = _elm_lang$core$Native_String.padLeft;\r\nvar _elm_lang$core$String$pad = _elm_lang$core$Native_String.pad;\r\nvar _elm_lang$core$String$dropRight = _elm_lang$core$Native_String.dropRight;\r\nvar _elm_lang$core$String$dropLeft = _elm_lang$core$Native_String.dropLeft;\r\nvar _elm_lang$core$String$right = _elm_lang$core$Native_String.right;\r\nvar _elm_lang$core$String$left = _elm_lang$core$Native_String.left;\r\nvar _elm_lang$core$String$slice = _elm_lang$core$Native_String.slice;\r\nvar _elm_lang$core$String$repeat = _elm_lang$core$Native_String.repeat;\r\nvar _elm_lang$core$String$join = _elm_lang$core$Native_String.join;\r\nvar _elm_lang$core$String$split = _elm_lang$core$Native_String.split;\r\nvar _elm_lang$core$String$foldr = _elm_lang$core$Native_String.foldr;\r\nvar _elm_lang$core$String$foldl = _elm_lang$core$Native_String.foldl;\r\nvar _elm_lang$core$String$reverse = _elm_lang$core$Native_String.reverse;\r\nvar _elm_lang$core$String$filter = _elm_lang$core$Native_String.filter;\r\nvar _elm_lang$core$String$map = _elm_lang$core$Native_String.map;\r\nvar _elm_lang$core$String$length = _elm_lang$core$Native_String.length;\r\nvar _elm_lang$core$String$concat = _elm_lang$core$Native_String.concat;\r\nvar _elm_lang$core$String$append = _elm_lang$core$Native_String.append;\r\nvar _elm_lang$core$String$uncons = _elm_lang$core$Native_String.uncons;\r\nvar _elm_lang$core$String$cons = _elm_lang$core$Native_String.cons;\r\nvar _elm_lang$core$String$fromChar = function ($char) {\r\n\treturn A2(_elm_lang$core$String$cons, $char, '');\r\n};\r\nvar _elm_lang$core$String$isEmpty = _elm_lang$core$Native_String.isEmpty;\r\n\r\nvar _elm_lang$core$Dict$foldr = F3(\r\n\tfunction (f, acc, t) {\r\n\t\tfoldr:\r\n\t\twhile (true) {\r\n\t\t\tvar _p0 = t;\r\n\t\t\tif (_p0.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn acc;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v1 = f,\r\n\t\t\t\t\t_v2 = A3(\r\n\t\t\t\t\tf,\r\n\t\t\t\t\t_p0._1,\r\n\t\t\t\t\t_p0._2,\r\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldr, f, acc, _p0._4)),\r\n\t\t\t\t\t_v3 = _p0._3;\r\n\t\t\t\tf = _v1;\r\n\t\t\t\tacc = _v2;\r\n\t\t\t\tt = _v3;\r\n\t\t\t\tcontinue foldr;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$keys = function (dict) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$Dict$foldr,\r\n\t\tF3(\r\n\t\t\tfunction (key, value, keyList) {\r\n\t\t\t\treturn {ctor: '::', _0: key, _1: keyList};\r\n\t\t\t}),\r\n\t\t{ctor: '[]'},\r\n\t\tdict);\r\n};\r\nvar _elm_lang$core$Dict$values = function (dict) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$Dict$foldr,\r\n\t\tF3(\r\n\t\t\tfunction (key, value, valueList) {\r\n\t\t\t\treturn {ctor: '::', _0: value, _1: valueList};\r\n\t\t\t}),\r\n\t\t{ctor: '[]'},\r\n\t\tdict);\r\n};\r\nvar _elm_lang$core$Dict$toList = function (dict) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$Dict$foldr,\r\n\t\tF3(\r\n\t\t\tfunction (key, value, list) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: {ctor: '_Tuple2', _0: key, _1: value},\r\n\t\t\t\t\t_1: list\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t{ctor: '[]'},\r\n\t\tdict);\r\n};\r\nvar _elm_lang$core$Dict$foldl = F3(\r\n\tfunction (f, acc, dict) {\r\n\t\tfoldl:\r\n\t\twhile (true) {\r\n\t\t\tvar _p1 = dict;\r\n\t\t\tif (_p1.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn acc;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v5 = f,\r\n\t\t\t\t\t_v6 = A3(\r\n\t\t\t\t\tf,\r\n\t\t\t\t\t_p1._1,\r\n\t\t\t\t\t_p1._2,\r\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldl, f, acc, _p1._3)),\r\n\t\t\t\t\t_v7 = _p1._4;\r\n\t\t\t\tf = _v5;\r\n\t\t\t\tacc = _v6;\r\n\t\t\t\tdict = _v7;\r\n\t\t\t\tcontinue foldl;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$merge = F6(\r\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\r\n\t\tvar stepState = F3(\r\n\t\t\tfunction (rKey, rValue, _p2) {\r\n\t\t\t\tstepState:\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tvar _p3 = _p2;\r\n\t\t\t\t\tvar _p9 = _p3._1;\r\n\t\t\t\t\tvar _p8 = _p3._0;\r\n\t\t\t\t\tvar _p4 = _p8;\r\n\t\t\t\t\tif (_p4.ctor === '[]') {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t_0: _p8,\r\n\t\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar _p7 = _p4._1;\r\n\t\t\t\t\t\tvar _p6 = _p4._0._1;\r\n\t\t\t\t\t\tvar _p5 = _p4._0._0;\r\n\t\t\t\t\t\tif (_elm_lang$core$Native_Utils.cmp(_p5, rKey) < 0) {\r\n\t\t\t\t\t\t\tvar _v10 = rKey,\r\n\t\t\t\t\t\t\t\t_v11 = rValue,\r\n\t\t\t\t\t\t\t\t_v12 = {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _p7,\r\n\t\t\t\t\t\t\t\t_1: A3(leftStep, _p5, _p6, _p9)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\trKey = _v10;\r\n\t\t\t\t\t\t\trValue = _v11;\r\n\t\t\t\t\t\t\t_p2 = _v12;\r\n\t\t\t\t\t\t\tcontinue stepState;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (_elm_lang$core$Native_Utils.cmp(_p5, rKey) > 0) {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _p8,\r\n\t\t\t\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _p7,\r\n\t\t\t\t\t\t\t\t\t_1: A4(bothStep, _p5, _p6, rValue, _p9)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tvar _p10 = A3(\r\n\t\t\t_elm_lang$core$Dict$foldl,\r\n\t\t\tstepState,\r\n\t\t\t{\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: _elm_lang$core$Dict$toList(leftDict),\r\n\t\t\t\t_1: initialResult\r\n\t\t\t},\r\n\t\t\trightDict);\r\n\t\tvar leftovers = _p10._0;\r\n\t\tvar intermediateResult = _p10._1;\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldl,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (_p11, result) {\r\n\t\t\t\t\tvar _p12 = _p11;\r\n\t\t\t\t\treturn A3(leftStep, _p12._0, _p12._1, result);\r\n\t\t\t\t}),\r\n\t\t\tintermediateResult,\r\n\t\t\tleftovers);\r\n\t});\r\nvar _elm_lang$core$Dict$reportRemBug = F4(\r\n\tfunction (msg, c, lgot, rgot) {\r\n\t\treturn _elm_lang$core$Native_Debug.crash(\r\n\t\t\t_elm_lang$core$String$concat(\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: 'Internal red-black tree invariant violated, expected ',\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: msg,\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: ' and got ',\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Basics$toString(c),\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: '/',\r\n\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: lgot,\r\n\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: '/',\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: rgot,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: '\\nPlease report this bug to <https://github.com/elm-lang/core/issues>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t});\r\nvar _elm_lang$core$Dict$isBBlack = function (dict) {\r\n\tvar _p13 = dict;\r\n\t_v14_2:\r\n\tdo {\r\n\t\tif (_p13.ctor === 'RBNode_elm_builtin') {\r\n\t\t\tif (_p13._0.ctor === 'BBlack') {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tbreak _v14_2;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (_p13._0.ctor === 'LBBlack') {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tbreak _v14_2;\r\n\t\t\t}\r\n\t\t}\r\n\t} while(false);\r\n\treturn false;\r\n};\r\nvar _elm_lang$core$Dict$sizeHelp = F2(\r\n\tfunction (n, dict) {\r\n\t\tsizeHelp:\r\n\t\twhile (true) {\r\n\t\t\tvar _p14 = dict;\r\n\t\t\tif (_p14.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn n;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v16 = A2(_elm_lang$core$Dict$sizeHelp, n + 1, _p14._4),\r\n\t\t\t\t\t_v17 = _p14._3;\r\n\t\t\t\tn = _v16;\r\n\t\t\t\tdict = _v17;\r\n\t\t\t\tcontinue sizeHelp;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$size = function (dict) {\r\n\treturn A2(_elm_lang$core$Dict$sizeHelp, 0, dict);\r\n};\r\nvar _elm_lang$core$Dict$get = F2(\r\n\tfunction (targetKey, dict) {\r\n\t\tget:\r\n\t\twhile (true) {\r\n\t\t\tvar _p15 = dict;\r\n\t\t\tif (_p15.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\t} else {\r\n\t\t\t\tvar _p16 = A2(_elm_lang$core$Basics$compare, targetKey, _p15._1);\r\n\t\t\t\tswitch (_p16.ctor) {\r\n\t\t\t\t\tcase 'LT':\r\n\t\t\t\t\t\tvar _v20 = targetKey,\r\n\t\t\t\t\t\t\t_v21 = _p15._3;\r\n\t\t\t\t\t\ttargetKey = _v20;\r\n\t\t\t\t\t\tdict = _v21;\r\n\t\t\t\t\t\tcontinue get;\r\n\t\t\t\t\tcase 'EQ':\r\n\t\t\t\t\t\treturn _elm_lang$core$Maybe$Just(_p15._2);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvar _v22 = targetKey,\r\n\t\t\t\t\t\t\t_v23 = _p15._4;\r\n\t\t\t\t\t\ttargetKey = _v22;\r\n\t\t\t\t\t\tdict = _v23;\r\n\t\t\t\t\t\tcontinue get;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$member = F2(\r\n\tfunction (key, dict) {\r\n\t\tvar _p17 = A2(_elm_lang$core$Dict$get, key, dict);\r\n\t\tif (_p17.ctor === 'Just') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$maxWithDefault = F3(\r\n\tfunction (k, v, r) {\r\n\t\tmaxWithDefault:\r\n\t\twhile (true) {\r\n\t\t\tvar _p18 = r;\r\n\t\t\tif (_p18.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: k, _1: v};\r\n\t\t\t} else {\r\n\t\t\t\tvar _v26 = _p18._1,\r\n\t\t\t\t\t_v27 = _p18._2,\r\n\t\t\t\t\t_v28 = _p18._4;\r\n\t\t\t\tk = _v26;\r\n\t\t\t\tv = _v27;\r\n\t\t\t\tr = _v28;\r\n\t\t\t\tcontinue maxWithDefault;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$NBlack = {ctor: 'NBlack'};\r\nvar _elm_lang$core$Dict$BBlack = {ctor: 'BBlack'};\r\nvar _elm_lang$core$Dict$Black = {ctor: 'Black'};\r\nvar _elm_lang$core$Dict$blackish = function (t) {\r\n\tvar _p19 = t;\r\n\tif (_p19.ctor === 'RBNode_elm_builtin') {\r\n\t\tvar _p20 = _p19._0;\r\n\t\treturn _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$Black) || _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$BBlack);\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$Red = {ctor: 'Red'};\r\nvar _elm_lang$core$Dict$moreBlack = function (color) {\r\n\tvar _p21 = color;\r\n\tswitch (_p21.ctor) {\r\n\t\tcase 'Black':\r\n\t\t\treturn _elm_lang$core$Dict$BBlack;\r\n\t\tcase 'Red':\r\n\t\t\treturn _elm_lang$core$Dict$Black;\r\n\t\tcase 'NBlack':\r\n\t\t\treturn _elm_lang$core$Dict$Red;\r\n\t\tdefault:\r\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a double black node more black!');\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$lessBlack = function (color) {\r\n\tvar _p22 = color;\r\n\tswitch (_p22.ctor) {\r\n\t\tcase 'BBlack':\r\n\t\t\treturn _elm_lang$core$Dict$Black;\r\n\t\tcase 'Black':\r\n\t\t\treturn _elm_lang$core$Dict$Red;\r\n\t\tcase 'Red':\r\n\t\t\treturn _elm_lang$core$Dict$NBlack;\r\n\t\tdefault:\r\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a negative black node less black!');\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$LBBlack = {ctor: 'LBBlack'};\r\nvar _elm_lang$core$Dict$LBlack = {ctor: 'LBlack'};\r\nvar _elm_lang$core$Dict$RBEmpty_elm_builtin = function (a) {\r\n\treturn {ctor: 'RBEmpty_elm_builtin', _0: a};\r\n};\r\nvar _elm_lang$core$Dict$empty = _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\nvar _elm_lang$core$Dict$isEmpty = function (dict) {\r\n\treturn _elm_lang$core$Native_Utils.eq(dict, _elm_lang$core$Dict$empty);\r\n};\r\nvar _elm_lang$core$Dict$RBNode_elm_builtin = F5(\r\n\tfunction (a, b, c, d, e) {\r\n\t\treturn {ctor: 'RBNode_elm_builtin', _0: a, _1: b, _2: c, _3: d, _4: e};\r\n\t});\r\nvar _elm_lang$core$Dict$ensureBlackRoot = function (dict) {\r\n\tvar _p23 = dict;\r\n\tif ((_p23.ctor === 'RBNode_elm_builtin') && (_p23._0.ctor === 'Red')) {\r\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p23._1, _p23._2, _p23._3, _p23._4);\r\n\t} else {\r\n\t\treturn dict;\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$lessBlackTree = function (dict) {\r\n\tvar _p24 = dict;\r\n\tif (_p24.ctor === 'RBNode_elm_builtin') {\r\n\t\treturn A5(\r\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t_elm_lang$core$Dict$lessBlack(_p24._0),\r\n\t\t\t_p24._1,\r\n\t\t\t_p24._2,\r\n\t\t\t_p24._3,\r\n\t\t\t_p24._4);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$balancedTree = function (col) {\r\n\treturn function (xk) {\r\n\t\treturn function (xv) {\r\n\t\t\treturn function (yk) {\r\n\t\t\t\treturn function (yv) {\r\n\t\t\t\t\treturn function (zk) {\r\n\t\t\t\t\t\treturn function (zv) {\r\n\t\t\t\t\t\t\treturn function (a) {\r\n\t\t\t\t\t\t\t\treturn function (b) {\r\n\t\t\t\t\t\t\t\t\treturn function (c) {\r\n\t\t\t\t\t\t\t\t\t\treturn function (d) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn A5(\r\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$lessBlack(col),\r\n\t\t\t\t\t\t\t\t\t\t\t\tyk,\r\n\t\t\t\t\t\t\t\t\t\t\t\tyv,\r\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, xk, xv, a, b),\r\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, zk, zv, c, d));\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n};\r\nvar _elm_lang$core$Dict$blacken = function (t) {\r\n\tvar _p25 = t;\r\n\tif (_p25.ctor === 'RBEmpty_elm_builtin') {\r\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t} else {\r\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p25._1, _p25._2, _p25._3, _p25._4);\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$redden = function (t) {\r\n\tvar _p26 = t;\r\n\tif (_p26.ctor === 'RBEmpty_elm_builtin') {\r\n\t\treturn _elm_lang$core$Native_Debug.crash('can\\'t make a Leaf red');\r\n\t} else {\r\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, _p26._1, _p26._2, _p26._3, _p26._4);\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$balanceHelp = function (tree) {\r\n\tvar _p27 = tree;\r\n\t_v36_6:\r\n\tdo {\r\n\t\t_v36_5:\r\n\t\tdo {\r\n\t\t\t_v36_4:\r\n\t\t\tdo {\r\n\t\t\t\t_v36_3:\r\n\t\t\t\tdo {\r\n\t\t\t\t\t_v36_2:\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\t_v36_1:\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t_v36_0:\r\n\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\tif (_p27.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\tif (_p27._3.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_p27._0.ctor === 'BBlack') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak _v36_6;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} while(false);\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._3._1)(_p27._3._3._2)(_p27._3._1)(_p27._3._2)(_p27._1)(_p27._2)(_p27._3._3._3)(_p27._3._3._4)(_p27._3._4)(_p27._4);\r\n\t\t\t\t\t\t} while(false);\r\n\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._1)(_p27._3._2)(_p27._3._4._1)(_p27._3._4._2)(_p27._1)(_p27._2)(_p27._3._3)(_p27._3._4._3)(_p27._3._4._4)(_p27._4);\r\n\t\t\t\t\t} while(false);\r\n\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._3._1)(_p27._4._3._2)(_p27._4._1)(_p27._4._2)(_p27._3)(_p27._4._3._3)(_p27._4._3._4)(_p27._4._4);\r\n\t\t\t\t} while(false);\r\n\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._1)(_p27._4._2)(_p27._4._4._1)(_p27._4._4._2)(_p27._3)(_p27._4._3)(_p27._4._4._3)(_p27._4._4._4);\r\n\t\t\t} while(false);\r\n\t\t\treturn A5(\r\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t\t_p27._4._3._1,\r\n\t\t\t\t_p27._4._3._2,\r\n\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3, _p27._4._3._3),\r\n\t\t\t\tA5(\r\n\t\t\t\t\t_elm_lang$core$Dict$balance,\r\n\t\t\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t\t\t_p27._4._1,\r\n\t\t\t\t\t_p27._4._2,\r\n\t\t\t\t\t_p27._4._3._4,\r\n\t\t\t\t\t_elm_lang$core$Dict$redden(_p27._4._4)));\r\n\t\t} while(false);\r\n\t\treturn A5(\r\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t_p27._3._4._1,\r\n\t\t\t_p27._3._4._2,\r\n\t\t\tA5(\r\n\t\t\t\t_elm_lang$core$Dict$balance,\r\n\t\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t\t_p27._3._1,\r\n\t\t\t\t_p27._3._2,\r\n\t\t\t\t_elm_lang$core$Dict$redden(_p27._3._3),\r\n\t\t\t\t_p27._3._4._3),\r\n\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3._4._4, _p27._4));\r\n\t} while(false);\r\n\treturn tree;\r\n};\r\nvar _elm_lang$core$Dict$balance = F5(\r\n\tfunction (c, k, v, l, r) {\r\n\t\tvar tree = A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\r\n\t\treturn _elm_lang$core$Dict$blackish(tree) ? _elm_lang$core$Dict$balanceHelp(tree) : tree;\r\n\t});\r\nvar _elm_lang$core$Dict$bubble = F5(\r\n\tfunction (c, k, v, l, r) {\r\n\t\treturn (_elm_lang$core$Dict$isBBlack(l) || _elm_lang$core$Dict$isBBlack(r)) ? A5(\r\n\t\t\t_elm_lang$core$Dict$balance,\r\n\t\t\t_elm_lang$core$Dict$moreBlack(c),\r\n\t\t\tk,\r\n\t\t\tv,\r\n\t\t\t_elm_lang$core$Dict$lessBlackTree(l),\r\n\t\t\t_elm_lang$core$Dict$lessBlackTree(r)) : A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\r\n\t});\r\nvar _elm_lang$core$Dict$removeMax = F5(\r\n\tfunction (c, k, v, l, r) {\r\n\t\tvar _p28 = r;\r\n\t\tif (_p28.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\treturn A3(_elm_lang$core$Dict$rem, c, l, r);\r\n\t\t} else {\r\n\t\t\treturn A5(\r\n\t\t\t\t_elm_lang$core$Dict$bubble,\r\n\t\t\t\tc,\r\n\t\t\t\tk,\r\n\t\t\t\tv,\r\n\t\t\t\tl,\r\n\t\t\t\tA5(_elm_lang$core$Dict$removeMax, _p28._0, _p28._1, _p28._2, _p28._3, _p28._4));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$rem = F3(\r\n\tfunction (color, left, right) {\r\n\t\tvar _p29 = {ctor: '_Tuple2', _0: left, _1: right};\r\n\t\tif (_p29._0.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\tvar _p30 = color;\r\n\t\t\t\tswitch (_p30.ctor) {\r\n\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t\t\t\t\tcase 'Black':\r\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBBlack);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn _elm_lang$core$Native_Debug.crash('cannot have bblack or nblack nodes at this point');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar _p33 = _p29._1._0;\r\n\t\t\t\tvar _p32 = _p29._0._0;\r\n\t\t\t\tvar _p31 = {ctor: '_Tuple3', _0: color, _1: _p32, _2: _p33};\r\n\t\t\t\tif ((((_p31.ctor === '_Tuple3') && (_p31._0.ctor === 'Black')) && (_p31._1.ctor === 'LBlack')) && (_p31._2.ctor === 'Red')) {\r\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._1._1, _p29._1._2, _p29._1._3, _p29._1._4);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn A4(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\r\n\t\t\t\t\t\t'Black/LBlack/Red',\r\n\t\t\t\t\t\tcolor,\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p32),\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p33));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\tvar _p36 = _p29._1._0;\r\n\t\t\t\tvar _p35 = _p29._0._0;\r\n\t\t\t\tvar _p34 = {ctor: '_Tuple3', _0: color, _1: _p35, _2: _p36};\r\n\t\t\t\tif ((((_p34.ctor === '_Tuple3') && (_p34._0.ctor === 'Black')) && (_p34._1.ctor === 'Red')) && (_p34._2.ctor === 'LBlack')) {\r\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._0._1, _p29._0._2, _p29._0._3, _p29._0._4);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn A4(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\r\n\t\t\t\t\t\t'Black/Red/LBlack',\r\n\t\t\t\t\t\tcolor,\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p35),\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p36));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar _p40 = _p29._0._2;\r\n\t\t\t\tvar _p39 = _p29._0._4;\r\n\t\t\t\tvar _p38 = _p29._0._1;\r\n\t\t\t\tvar newLeft = A5(_elm_lang$core$Dict$removeMax, _p29._0._0, _p38, _p40, _p29._0._3, _p39);\r\n\t\t\t\tvar _p37 = A3(_elm_lang$core$Dict$maxWithDefault, _p38, _p40, _p39);\r\n\t\t\t\tvar k = _p37._0;\r\n\t\t\t\tvar v = _p37._1;\r\n\t\t\t\treturn A5(_elm_lang$core$Dict$bubble, color, k, v, newLeft, right);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$map = F2(\r\n\tfunction (f, dict) {\r\n\t\tvar _p41 = dict;\r\n\t\tif (_p41.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t\t} else {\r\n\t\t\tvar _p42 = _p41._1;\r\n\t\t\treturn A5(\r\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t\t_p41._0,\r\n\t\t\t\t_p42,\r\n\t\t\t\tA2(f, _p42, _p41._2),\r\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._3),\r\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._4));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$Same = {ctor: 'Same'};\r\nvar _elm_lang$core$Dict$Remove = {ctor: 'Remove'};\r\nvar _elm_lang$core$Dict$Insert = {ctor: 'Insert'};\r\nvar _elm_lang$core$Dict$update = F3(\r\n\tfunction (k, alter, dict) {\r\n\t\tvar up = function (dict) {\r\n\t\t\tvar _p43 = dict;\r\n\t\t\tif (_p43.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\tvar _p44 = alter(_elm_lang$core$Maybe$Nothing);\r\n\t\t\t\tif (_p44.ctor === 'Nothing') {\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: _elm_lang$core$Dict$Same, _1: _elm_lang$core$Dict$empty};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\r\n\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, k, _p44._0, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar _p55 = _p43._2;\r\n\t\t\t\tvar _p54 = _p43._4;\r\n\t\t\t\tvar _p53 = _p43._3;\r\n\t\t\t\tvar _p52 = _p43._1;\r\n\t\t\t\tvar _p51 = _p43._0;\r\n\t\t\t\tvar _p45 = A2(_elm_lang$core$Basics$compare, k, _p52);\r\n\t\t\t\tswitch (_p45.ctor) {\r\n\t\t\t\t\tcase 'EQ':\r\n\t\t\t\t\t\tvar _p46 = alter(\r\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(_p55));\r\n\t\t\t\t\t\tif (_p46.ctor === 'Nothing') {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\r\n\t\t\t\t\t\t\t\t_1: A3(_elm_lang$core$Dict$rem, _p51, _p53, _p54)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\r\n\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p46._0, _p53, _p54)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase 'LT':\r\n\t\t\t\t\t\tvar _p47 = up(_p53);\r\n\t\t\t\t\t\tvar flag = _p47._0;\r\n\t\t\t\t\t\tvar newLeft = _p47._1;\r\n\t\t\t\t\t\tvar _p48 = flag;\r\n\t\t\t\t\t\tswitch (_p48.ctor) {\r\n\t\t\t\t\t\t\tcase 'Same':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, newLeft, _p54)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcase 'Insert':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, newLeft, _p54)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, newLeft, _p54)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvar _p49 = up(_p54);\r\n\t\t\t\t\t\tvar flag = _p49._0;\r\n\t\t\t\t\t\tvar newRight = _p49._1;\r\n\t\t\t\t\t\tvar _p50 = flag;\r\n\t\t\t\t\t\tswitch (_p50.ctor) {\r\n\t\t\t\t\t\t\tcase 'Same':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, _p53, newRight)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcase 'Insert':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, _p53, newRight)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, _p53, newRight)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar _p56 = up(dict);\r\n\t\tvar flag = _p56._0;\r\n\t\tvar updatedDict = _p56._1;\r\n\t\tvar _p57 = flag;\r\n\t\tswitch (_p57.ctor) {\r\n\t\t\tcase 'Same':\r\n\t\t\t\treturn updatedDict;\r\n\t\t\tcase 'Insert':\r\n\t\t\t\treturn _elm_lang$core$Dict$ensureBlackRoot(updatedDict);\r\n\t\t\tdefault:\r\n\t\t\t\treturn _elm_lang$core$Dict$blacken(updatedDict);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$insert = F3(\r\n\tfunction (key, value, dict) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\tkey,\r\n\t\t\t_elm_lang$core$Basics$always(\r\n\t\t\t\t_elm_lang$core$Maybe$Just(value)),\r\n\t\t\tdict);\r\n\t});\r\nvar _elm_lang$core$Dict$singleton = F2(\r\n\tfunction (key, value) {\r\n\t\treturn A3(_elm_lang$core$Dict$insert, key, value, _elm_lang$core$Dict$empty);\r\n\t});\r\nvar _elm_lang$core$Dict$union = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A3(_elm_lang$core$Dict$foldl, _elm_lang$core$Dict$insert, t2, t1);\r\n\t});\r\nvar _elm_lang$core$Dict$filter = F2(\r\n\tfunction (predicate, dictionary) {\r\n\t\tvar add = F3(\r\n\t\t\tfunction (key, value, dict) {\r\n\t\t\t\treturn A2(predicate, key, value) ? A3(_elm_lang$core$Dict$insert, key, value, dict) : dict;\r\n\t\t\t});\r\n\t\treturn A3(_elm_lang$core$Dict$foldl, add, _elm_lang$core$Dict$empty, dictionary);\r\n\t});\r\nvar _elm_lang$core$Dict$intersect = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Dict$filter,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (k, _p58) {\r\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$member, k, t2);\r\n\t\t\t\t}),\r\n\t\t\tt1);\r\n\t});\r\nvar _elm_lang$core$Dict$partition = F2(\r\n\tfunction (predicate, dict) {\r\n\t\tvar add = F3(\r\n\t\t\tfunction (key, value, _p59) {\r\n\t\t\t\tvar _p60 = _p59;\r\n\t\t\t\tvar _p62 = _p60._1;\r\n\t\t\t\tvar _p61 = _p60._0;\r\n\t\t\t\treturn A2(predicate, key, value) ? {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A3(_elm_lang$core$Dict$insert, key, value, _p61),\r\n\t\t\t\t\t_1: _p62\r\n\t\t\t\t} : {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _p61,\r\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, key, value, _p62)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$foldl,\r\n\t\t\tadd,\r\n\t\t\t{ctor: '_Tuple2', _0: _elm_lang$core$Dict$empty, _1: _elm_lang$core$Dict$empty},\r\n\t\t\tdict);\r\n\t});\r\nvar _elm_lang$core$Dict$fromList = function (assocs) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (_p63, dict) {\r\n\t\t\t\tvar _p64 = _p63;\r\n\t\t\t\treturn A3(_elm_lang$core$Dict$insert, _p64._0, _p64._1, dict);\r\n\t\t\t}),\r\n\t\t_elm_lang$core$Dict$empty,\r\n\t\tassocs);\r\n};\r\nvar _elm_lang$core$Dict$remove = F2(\r\n\tfunction (key, dict) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\tkey,\r\n\t\t\t_elm_lang$core$Basics$always(_elm_lang$core$Maybe$Nothing),\r\n\t\t\tdict);\r\n\t});\r\nvar _elm_lang$core$Dict$diff = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$foldl,\r\n\t\t\tF3(\r\n\t\t\t\tfunction (k, v, t) {\r\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$remove, k, t);\r\n\t\t\t\t}),\r\n\t\t\tt1,\r\n\t\t\tt2);\r\n\t});\r\n\r\n//import Native.Scheduler //\r\n\r\nvar _elm_lang$core$Native_Time = function() {\r\n\r\nvar now = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n{\r\n\tcallback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));\r\n});\r\n\r\nfunction setInterval_(interval, task)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\tvar id = setInterval(function() {\r\n\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(task);\r\n\t\t}, interval);\r\n\r\n\t\treturn function() { clearInterval(id); };\r\n\t});\r\n}\r\n\r\nreturn {\r\n\tnow: now,\r\n\tsetInterval_: F2(setInterval_)\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$Time$setInterval = _elm_lang$core$Native_Time.setInterval_;\r\nvar _elm_lang$core$Time$spawnHelp = F3(\r\n\tfunction (router, intervals, processes) {\r\n\t\tvar _p0 = intervals;\r\n\t\tif (_p0.ctor === '[]') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(processes);\r\n\t\t} else {\r\n\t\t\tvar _p1 = _p0._0;\r\n\t\t\tvar spawnRest = function (id) {\r\n\t\t\t\treturn A3(\r\n\t\t\t\t\t_elm_lang$core$Time$spawnHelp,\r\n\t\t\t\t\trouter,\r\n\t\t\t\t\t_p0._1,\r\n\t\t\t\t\tA3(_elm_lang$core$Dict$insert, _p1, id, processes));\r\n\t\t\t};\r\n\t\t\tvar spawnTimer = _elm_lang$core$Native_Scheduler.spawn(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Time$setInterval,\r\n\t\t\t\t\t_p1,\r\n\t\t\t\t\tA2(_elm_lang$core$Platform$sendToSelf, router, _p1)));\r\n\t\t\treturn A2(_elm_lang$core$Task$andThen, spawnRest, spawnTimer);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Time$addMySub = F2(\r\n\tfunction (_p2, state) {\r\n\t\tvar _p3 = _p2;\r\n\t\tvar _p6 = _p3._1;\r\n\t\tvar _p5 = _p3._0;\r\n\t\tvar _p4 = A2(_elm_lang$core$Dict$get, _p5, state);\r\n\t\tif (_p4.ctor === 'Nothing') {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t_p5,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _p6,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\tstate);\r\n\t\t} else {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t_p5,\r\n\t\t\t\t{ctor: '::', _0: _p6, _1: _p4._0},\r\n\t\t\t\tstate);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Time$inMilliseconds = function (t) {\r\n\treturn t;\r\n};\r\nvar _elm_lang$core$Time$millisecond = 1;\r\nvar _elm_lang$core$Time$second = 1000 * _elm_lang$core$Time$millisecond;\r\nvar _elm_lang$core$Time$minute = 60 * _elm_lang$core$Time$second;\r\nvar _elm_lang$core$Time$hour = 60 * _elm_lang$core$Time$minute;\r\nvar _elm_lang$core$Time$inHours = function (t) {\r\n\treturn t / _elm_lang$core$Time$hour;\r\n};\r\nvar _elm_lang$core$Time$inMinutes = function (t) {\r\n\treturn t / _elm_lang$core$Time$minute;\r\n};\r\nvar _elm_lang$core$Time$inSeconds = function (t) {\r\n\treturn t / _elm_lang$core$Time$second;\r\n};\r\nvar _elm_lang$core$Time$now = _elm_lang$core$Native_Time.now;\r\nvar _elm_lang$core$Time$onSelfMsg = F3(\r\n\tfunction (router, interval, state) {\r\n\t\tvar _p7 = A2(_elm_lang$core$Dict$get, interval, state.taggers);\r\n\t\tif (_p7.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t} else {\r\n\t\t\tvar tellTaggers = function (time) {\r\n\t\t\t\treturn _elm_lang$core$Task$sequence(\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t\tfunction (tagger) {\r\n\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\r\n\t\t\t\t\t\t\t\trouter,\r\n\t\t\t\t\t\t\t\ttagger(time));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t_p7._0));\r\n\t\t\t};\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\tfunction (_p8) {\r\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t\t\t},\r\n\t\t\t\tA2(_elm_lang$core$Task$andThen, tellTaggers, _elm_lang$core$Time$now));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Time$subscription = _elm_lang$core$Native_Platform.leaf('Time');\r\nvar _elm_lang$core$Time$State = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {taggers: a, processes: b};\r\n\t});\r\nvar _elm_lang$core$Time$init = _elm_lang$core$Task$succeed(\r\n\tA2(_elm_lang$core$Time$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));\r\nvar _elm_lang$core$Time$onEffects = F3(\r\n\tfunction (router, subs, _p9) {\r\n\t\tvar _p10 = _p9;\r\n\t\tvar rightStep = F3(\r\n\t\t\tfunction (_p12, id, _p11) {\r\n\t\t\t\tvar _p13 = _p11;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t\t_0: _p13._0,\r\n\t\t\t\t\t_1: _p13._1,\r\n\t\t\t\t\t_2: A2(\r\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\tfunction (_p14) {\r\n\t\t\t\t\t\t\treturn _p13._2;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t_elm_lang$core$Native_Scheduler.kill(id))\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\tvar bothStep = F4(\r\n\t\t\tfunction (interval, taggers, id, _p15) {\r\n\t\t\t\tvar _p16 = _p15;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t\t_0: _p16._0,\r\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, interval, id, _p16._1),\r\n\t\t\t\t\t_2: _p16._2\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\tvar leftStep = F3(\r\n\t\t\tfunction (interval, taggers, _p17) {\r\n\t\t\t\tvar _p18 = _p17;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t\t_0: {ctor: '::', _0: interval, _1: _p18._0},\r\n\t\t\t\t\t_1: _p18._1,\r\n\t\t\t\t\t_2: _p18._2\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\tvar newTaggers = A3(_elm_lang$core$List$foldl, _elm_lang$core$Time$addMySub, _elm_lang$core$Dict$empty, subs);\r\n\t\tvar _p19 = A6(\r\n\t\t\t_elm_lang$core$Dict$merge,\r\n\t\t\tleftStep,\r\n\t\t\tbothStep,\r\n\t\t\trightStep,\r\n\t\t\tnewTaggers,\r\n\t\t\t_p10.processes,\r\n\t\t\t{\r\n\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t_0: {ctor: '[]'},\r\n\t\t\t\t_1: _elm_lang$core$Dict$empty,\r\n\t\t\t\t_2: _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t{ctor: '_Tuple0'})\r\n\t\t\t});\r\n\t\tvar spawnList = _p19._0;\r\n\t\tvar existingDict = _p19._1;\r\n\t\tvar killTask = _p19._2;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tfunction (newProcesses) {\r\n\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\tA2(_elm_lang$core$Time$State, newTaggers, newProcesses));\r\n\t\t\t},\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\tfunction (_p20) {\r\n\t\t\t\t\treturn A3(_elm_lang$core$Time$spawnHelp, router, spawnList, existingDict);\r\n\t\t\t\t},\r\n\t\t\t\tkillTask));\r\n\t});\r\nvar _elm_lang$core$Time$Every = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Every', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$core$Time$every = F2(\r\n\tfunction (interval, tagger) {\r\n\t\treturn _elm_lang$core$Time$subscription(\r\n\t\t\tA2(_elm_lang$core$Time$Every, interval, tagger));\r\n\t});\r\nvar _elm_lang$core$Time$subMap = F2(\r\n\tfunction (f, _p21) {\r\n\t\tvar _p22 = _p21;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Time$Every,\r\n\t\t\t_p22._0,\r\n\t\t\tfunction (_p23) {\r\n\t\t\t\treturn f(\r\n\t\t\t\t\t_p22._1(_p23));\r\n\t\t\t});\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['Time'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Time$init, onEffects: _elm_lang$core$Time$onEffects, onSelfMsg: _elm_lang$core$Time$onSelfMsg, tag: 'sub', subMap: _elm_lang$core$Time$subMap};\r\n\r\nvar _elm_lang$core$Debug$crash = _elm_lang$core$Native_Debug.crash;\r\nvar _elm_lang$core$Debug$log = _elm_lang$core$Native_Debug.log;\r\n\r\n//import Maybe, Native.Array, Native.List, Native.Utils, Result //\r\n\r\nvar _elm_lang$core$Native_Json = function() {\r\n\r\n\r\n// CORE DECODERS\r\n\r\nfunction succeed(msg)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'succeed',\r\n\t\tmsg: msg\r\n\t};\r\n}\r\n\r\nfunction fail(msg)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'fail',\r\n\t\tmsg: msg\r\n\t};\r\n}\r\n\r\nfunction decodePrimitive(tag)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: tag\r\n\t};\r\n}\r\n\r\nfunction decodeContainer(tag, decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: tag,\r\n\t\tdecoder: decoder\r\n\t};\r\n}\r\n\r\nfunction decodeNull(value)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'null',\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\nfunction decodeField(field, decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'field',\r\n\t\tfield: field,\r\n\t\tdecoder: decoder\r\n\t};\r\n}\r\n\r\nfunction decodeIndex(index, decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'index',\r\n\t\tindex: index,\r\n\t\tdecoder: decoder\r\n\t};\r\n}\r\n\r\nfunction decodeKeyValuePairs(decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'key-value',\r\n\t\tdecoder: decoder\r\n\t};\r\n}\r\n\r\nfunction mapMany(f, decoders)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'map-many',\r\n\t\tfunc: f,\r\n\t\tdecoders: decoders\r\n\t};\r\n}\r\n\r\nfunction andThen(callback, decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'andThen',\r\n\t\tdecoder: decoder,\r\n\t\tcallback: callback\r\n\t};\r\n}\r\n\r\nfunction oneOf(decoders)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'oneOf',\r\n\t\tdecoders: decoders\r\n\t};\r\n}\r\n\r\n\r\n// DECODING OBJECTS\r\n\r\nfunction map1(f, d1)\r\n{\r\n\treturn mapMany(f, [d1]);\r\n}\r\n\r\nfunction map2(f, d1, d2)\r\n{\r\n\treturn mapMany(f, [d1, d2]);\r\n}\r\n\r\nfunction map3(f, d1, d2, d3)\r\n{\r\n\treturn mapMany(f, [d1, d2, d3]);\r\n}\r\n\r\nfunction map4(f, d1, d2, d3, d4)\r\n{\r\n\treturn mapMany(f, [d1, d2, d3, d4]);\r\n}\r\n\r\nfunction map5(f, d1, d2, d3, d4, d5)\r\n{\r\n\treturn mapMany(f, [d1, d2, d3, d4, d5]);\r\n}\r\n\r\nfunction map6(f, d1, d2, d3, d4, d5, d6)\r\n{\r\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6]);\r\n}\r\n\r\nfunction map7(f, d1, d2, d3, d4, d5, d6, d7)\r\n{\r\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\r\n}\r\n\r\nfunction map8(f, d1, d2, d3, d4, d5, d6, d7, d8)\r\n{\r\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\r\n}\r\n\r\n\r\n// DECODE HELPERS\r\n\r\nfunction ok(value)\r\n{\r\n\treturn { tag: 'ok', value: value };\r\n}\r\n\r\nfunction badPrimitive(type, value)\r\n{\r\n\treturn { tag: 'primitive', type: type, value: value };\r\n}\r\n\r\nfunction badIndex(index, nestedProblems)\r\n{\r\n\treturn { tag: 'index', index: index, rest: nestedProblems };\r\n}\r\n\r\nfunction badField(field, nestedProblems)\r\n{\r\n\treturn { tag: 'field', field: field, rest: nestedProblems };\r\n}\r\n\r\nfunction badIndex(index, nestedProblems)\r\n{\r\n\treturn { tag: 'index', index: index, rest: nestedProblems };\r\n}\r\n\r\nfunction badOneOf(problems)\r\n{\r\n\treturn { tag: 'oneOf', problems: problems };\r\n}\r\n\r\nfunction bad(msg)\r\n{\r\n\treturn { tag: 'fail', msg: msg };\r\n}\r\n\r\nfunction badToString(problem)\r\n{\r\n\tvar context = '_';\r\n\twhile (problem)\r\n\t{\r\n\t\tswitch (problem.tag)\r\n\t\t{\r\n\t\t\tcase 'primitive':\r\n\t\t\t\treturn 'Expecting ' + problem.type\r\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\r\n\t\t\t\t\t+ ' but instead got: ' + jsToString(problem.value);\r\n\r\n\t\t\tcase 'index':\r\n\t\t\t\tcontext += '[' + problem.index + ']';\r\n\t\t\t\tproblem = problem.rest;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'field':\r\n\t\t\t\tcontext += '.' + problem.field;\r\n\t\t\t\tproblem = problem.rest;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'oneOf':\r\n\t\t\t\tvar problems = problem.problems;\r\n\t\t\t\tfor (var i = 0; i < problems.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tproblems[i] = badToString(problems[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn 'I ran into the following problems'\r\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\r\n\t\t\t\t\t+ ':\\n\\n' + problems.join('\\n');\r\n\r\n\t\t\tcase 'fail':\r\n\t\t\t\treturn 'I ran into a `fail` decoder'\r\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\r\n\t\t\t\t\t+ ': ' + problem.msg;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction jsToString(value)\r\n{\r\n\treturn value === undefined\r\n\t\t? 'undefined'\r\n\t\t: JSON.stringify(value);\r\n}\r\n\r\n\r\n// DECODE\r\n\r\nfunction runOnString(decoder, string)\r\n{\r\n\tvar json;\r\n\ttry\r\n\t{\r\n\t\tjson = JSON.parse(string);\r\n\t}\r\n\tcatch (e)\r\n\t{\r\n\t\treturn _elm_lang$core$Result$Err('Given an invalid JSON: ' + e.message);\r\n\t}\r\n\treturn run(decoder, json);\r\n}\r\n\r\nfunction run(decoder, value)\r\n{\r\n\tvar result = runHelp(decoder, value);\r\n\treturn (result.tag === 'ok')\r\n\t\t? _elm_lang$core$Result$Ok(result.value)\r\n\t\t: _elm_lang$core$Result$Err(badToString(result));\r\n}\r\n\r\nfunction runHelp(decoder, value)\r\n{\r\n\tswitch (decoder.tag)\r\n\t{\r\n\t\tcase 'bool':\r\n\t\t\treturn (typeof value === 'boolean')\r\n\t\t\t\t? ok(value)\r\n\t\t\t\t: badPrimitive('a Bool', value);\r\n\r\n\t\tcase 'int':\r\n\t\t\tif (typeof value !== 'number') {\r\n\t\t\t\treturn badPrimitive('an Int', value);\r\n\t\t\t}\r\n\r\n\t\t\tif (-2147483647 < value && value < 2147483647 && (value | 0) === value) {\r\n\t\t\t\treturn ok(value);\r\n\t\t\t}\r\n\r\n\t\t\tif (isFinite(value) && !(value % 1)) {\r\n\t\t\t\treturn ok(value);\r\n\t\t\t}\r\n\r\n\t\t\treturn badPrimitive('an Int', value);\r\n\r\n\t\tcase 'float':\r\n\t\t\treturn (typeof value === 'number')\r\n\t\t\t\t? ok(value)\r\n\t\t\t\t: badPrimitive('a Float', value);\r\n\r\n\t\tcase 'string':\r\n\t\t\treturn (typeof value === 'string')\r\n\t\t\t\t? ok(value)\r\n\t\t\t\t: (value instanceof String)\r\n\t\t\t\t\t? ok(value + '')\r\n\t\t\t\t\t: badPrimitive('a String', value);\r\n\r\n\t\tcase 'null':\r\n\t\t\treturn (value === null)\r\n\t\t\t\t? ok(decoder.value)\r\n\t\t\t\t: badPrimitive('null', value);\r\n\r\n\t\tcase 'value':\r\n\t\t\treturn ok(value);\r\n\r\n\t\tcase 'list':\r\n\t\t\tif (!(value instanceof Array))\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('a List', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar list = _elm_lang$core$Native_List.Nil;\r\n\t\t\tfor (var i = value.length; i--; )\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn badIndex(i, result)\r\n\t\t\t\t}\r\n\t\t\t\tlist = _elm_lang$core$Native_List.Cons(result.value, list);\r\n\t\t\t}\r\n\t\t\treturn ok(list);\r\n\r\n\t\tcase 'array':\r\n\t\t\tif (!(value instanceof Array))\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('an Array', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar len = value.length;\r\n\t\t\tvar array = new Array(len);\r\n\t\t\tfor (var i = len; i--; )\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn badIndex(i, result);\r\n\t\t\t\t}\r\n\t\t\t\tarray[i] = result.value;\r\n\t\t\t}\r\n\t\t\treturn ok(_elm_lang$core$Native_Array.fromJSArray(array));\r\n\r\n\t\tcase 'maybe':\r\n\t\t\tvar result = runHelp(decoder.decoder, value);\r\n\t\t\treturn (result.tag === 'ok')\r\n\t\t\t\t? ok(_elm_lang$core$Maybe$Just(result.value))\r\n\t\t\t\t: ok(_elm_lang$core$Maybe$Nothing);\r\n\r\n\t\tcase 'field':\r\n\t\t\tvar field = decoder.field;\r\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('an object with a field named `' + field + '`', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar result = runHelp(decoder.decoder, value[field]);\r\n\t\t\treturn (result.tag === 'ok') ? result : badField(field, result);\r\n\r\n\t\tcase 'index':\r\n\t\t\tvar index = decoder.index;\r\n\t\t\tif (!(value instanceof Array))\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('an array', value);\r\n\t\t\t}\r\n\t\t\tif (index >= value.length)\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('a longer array. Need index ' + index + ' but there are only ' + value.length + ' entries', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar result = runHelp(decoder.decoder, value[index]);\r\n\t\t\treturn (result.tag === 'ok') ? result : badIndex(index, result);\r\n\r\n\t\tcase 'key-value':\r\n\t\t\tif (typeof value !== 'object' || value === null || value instanceof Array)\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('an object', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar keyValuePairs = _elm_lang$core$Native_List.Nil;\r\n\t\t\tfor (var key in value)\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoder.decoder, value[key]);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn badField(key, result);\r\n\t\t\t\t}\r\n\t\t\t\tvar pair = _elm_lang$core$Native_Utils.Tuple2(key, result.value);\r\n\t\t\t\tkeyValuePairs = _elm_lang$core$Native_List.Cons(pair, keyValuePairs);\r\n\t\t\t}\r\n\t\t\treturn ok(keyValuePairs);\r\n\r\n\t\tcase 'map-many':\r\n\t\t\tvar answer = decoder.func;\r\n\t\t\tvar decoders = decoder.decoders;\r\n\t\t\tfor (var i = 0; i < decoders.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoders[i], value);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tanswer = answer(result.value);\r\n\t\t\t}\r\n\t\t\treturn ok(answer);\r\n\r\n\t\tcase 'andThen':\r\n\t\t\tvar result = runHelp(decoder.decoder, value);\r\n\t\t\treturn (result.tag !== 'ok')\r\n\t\t\t\t? result\r\n\t\t\t\t: runHelp(decoder.callback(result.value), value);\r\n\r\n\t\tcase 'oneOf':\r\n\t\t\tvar errors = [];\r\n\t\t\tvar temp = decoder.decoders;\r\n\t\t\twhile (temp.ctor !== '[]')\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(temp._0, value);\r\n\r\n\t\t\t\tif (result.tag === 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\terrors.push(result);\r\n\r\n\t\t\t\ttemp = temp._1;\r\n\t\t\t}\r\n\t\t\treturn badOneOf(errors);\r\n\r\n\t\tcase 'fail':\r\n\t\t\treturn bad(decoder.msg);\r\n\r\n\t\tcase 'succeed':\r\n\t\t\treturn ok(decoder.msg);\r\n\t}\r\n}\r\n\r\n\r\n// EQUALITY\r\n\r\nfunction equality(a, b)\r\n{\r\n\tif (a === b)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (a.tag !== b.tag)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tswitch (a.tag)\r\n\t{\r\n\t\tcase 'succeed':\r\n\t\tcase 'fail':\r\n\t\t\treturn a.msg === b.msg;\r\n\r\n\t\tcase 'bool':\r\n\t\tcase 'int':\r\n\t\tcase 'float':\r\n\t\tcase 'string':\r\n\t\tcase 'value':\r\n\t\t\treturn true;\r\n\r\n\t\tcase 'null':\r\n\t\t\treturn a.value === b.value;\r\n\r\n\t\tcase 'list':\r\n\t\tcase 'array':\r\n\t\tcase 'maybe':\r\n\t\tcase 'key-value':\r\n\t\t\treturn equality(a.decoder, b.decoder);\r\n\r\n\t\tcase 'field':\r\n\t\t\treturn a.field === b.field && equality(a.decoder, b.decoder);\r\n\r\n\t\tcase 'index':\r\n\t\t\treturn a.index === b.index && equality(a.decoder, b.decoder);\r\n\r\n\t\tcase 'map-many':\r\n\t\t\tif (a.func !== b.func)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn listEquality(a.decoders, b.decoders);\r\n\r\n\t\tcase 'andThen':\r\n\t\t\treturn a.callback === b.callback && equality(a.decoder, b.decoder);\r\n\r\n\t\tcase 'oneOf':\r\n\t\t\treturn listEquality(a.decoders, b.decoders);\r\n\t}\r\n}\r\n\r\nfunction listEquality(aDecoders, bDecoders)\r\n{\r\n\tvar len = aDecoders.length;\r\n\tif (len !== bDecoders.length)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < len; i++)\r\n\t{\r\n\t\tif (!equality(aDecoders[i], bDecoders[i]))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n\r\n// ENCODE\r\n\r\nfunction encode(indentLevel, value)\r\n{\r\n\treturn JSON.stringify(value, null, indentLevel);\r\n}\r\n\r\nfunction identity(value)\r\n{\r\n\treturn value;\r\n}\r\n\r\nfunction encodeObject(keyValuePairs)\r\n{\r\n\tvar obj = {};\r\n\twhile (keyValuePairs.ctor !== '[]')\r\n\t{\r\n\t\tvar pair = keyValuePairs._0;\r\n\t\tobj[pair._0] = pair._1;\r\n\t\tkeyValuePairs = keyValuePairs._1;\r\n\t}\r\n\treturn obj;\r\n}\r\n\r\nreturn {\r\n\tencode: F2(encode),\r\n\trunOnString: F2(runOnString),\r\n\trun: F2(run),\r\n\r\n\tdecodeNull: decodeNull,\r\n\tdecodePrimitive: decodePrimitive,\r\n\tdecodeContainer: F2(decodeContainer),\r\n\r\n\tdecodeField: F2(decodeField),\r\n\tdecodeIndex: F2(decodeIndex),\r\n\r\n\tmap1: F2(map1),\r\n\tmap2: F3(map2),\r\n\tmap3: F4(map3),\r\n\tmap4: F5(map4),\r\n\tmap5: F6(map5),\r\n\tmap6: F7(map6),\r\n\tmap7: F8(map7),\r\n\tmap8: F9(map8),\r\n\tdecodeKeyValuePairs: decodeKeyValuePairs,\r\n\r\n\tandThen: F2(andThen),\r\n\tfail: fail,\r\n\tsucceed: succeed,\r\n\toneOf: oneOf,\r\n\r\n\tidentity: identity,\r\n\tencodeNull: null,\r\n\tencodeArray: _elm_lang$core$Native_Array.toJSArray,\r\n\tencodeList: _elm_lang$core$Native_List.toArray,\r\n\tencodeObject: encodeObject,\r\n\r\n\tequality: equality\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$core$Json_Encode$list = _elm_lang$core$Native_Json.encodeList;\r\nvar _elm_lang$core$Json_Encode$array = _elm_lang$core$Native_Json.encodeArray;\r\nvar _elm_lang$core$Json_Encode$object = _elm_lang$core$Native_Json.encodeObject;\r\nvar _elm_lang$core$Json_Encode$null = _elm_lang$core$Native_Json.encodeNull;\r\nvar _elm_lang$core$Json_Encode$bool = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$float = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$int = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$string = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$encode = _elm_lang$core$Native_Json.encode;\r\nvar _elm_lang$core$Json_Encode$Value = {ctor: 'Value'};\r\n\r\nvar _elm_lang$core$Json_Decode$null = _elm_lang$core$Native_Json.decodeNull;\r\nvar _elm_lang$core$Json_Decode$value = _elm_lang$core$Native_Json.decodePrimitive('value');\r\nvar _elm_lang$core$Json_Decode$andThen = _elm_lang$core$Native_Json.andThen;\r\nvar _elm_lang$core$Json_Decode$fail = _elm_lang$core$Native_Json.fail;\r\nvar _elm_lang$core$Json_Decode$succeed = _elm_lang$core$Native_Json.succeed;\r\nvar _elm_lang$core$Json_Decode$lazy = function (thunk) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Json_Decode$andThen,\r\n\t\tthunk,\r\n\t\t_elm_lang$core$Json_Decode$succeed(\r\n\t\t\t{ctor: '_Tuple0'}));\r\n};\r\nvar _elm_lang$core$Json_Decode$decodeValue = _elm_lang$core$Native_Json.run;\r\nvar _elm_lang$core$Json_Decode$decodeString = _elm_lang$core$Native_Json.runOnString;\r\nvar _elm_lang$core$Json_Decode$map8 = _elm_lang$core$Native_Json.map8;\r\nvar _elm_lang$core$Json_Decode$map7 = _elm_lang$core$Native_Json.map7;\r\nvar _elm_lang$core$Json_Decode$map6 = _elm_lang$core$Native_Json.map6;\r\nvar _elm_lang$core$Json_Decode$map5 = _elm_lang$core$Native_Json.map5;\r\nvar _elm_lang$core$Json_Decode$map4 = _elm_lang$core$Native_Json.map4;\r\nvar _elm_lang$core$Json_Decode$map3 = _elm_lang$core$Native_Json.map3;\r\nvar _elm_lang$core$Json_Decode$map2 = _elm_lang$core$Native_Json.map2;\r\nvar _elm_lang$core$Json_Decode$map = _elm_lang$core$Native_Json.map1;\r\nvar _elm_lang$core$Json_Decode$oneOf = _elm_lang$core$Native_Json.oneOf;\r\nvar _elm_lang$core$Json_Decode$maybe = function (decoder) {\r\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'maybe', decoder);\r\n};\r\nvar _elm_lang$core$Json_Decode$index = _elm_lang$core$Native_Json.decodeIndex;\r\nvar _elm_lang$core$Json_Decode$field = _elm_lang$core$Native_Json.decodeField;\r\nvar _elm_lang$core$Json_Decode$at = F2(\r\n\tfunction (fields, decoder) {\r\n\t\treturn A3(_elm_lang$core$List$foldr, _elm_lang$core$Json_Decode$field, decoder, fields);\r\n\t});\r\nvar _elm_lang$core$Json_Decode$keyValuePairs = _elm_lang$core$Native_Json.decodeKeyValuePairs;\r\nvar _elm_lang$core$Json_Decode$dict = function (decoder) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Json_Decode$map,\r\n\t\t_elm_lang$core$Dict$fromList,\r\n\t\t_elm_lang$core$Json_Decode$keyValuePairs(decoder));\r\n};\r\nvar _elm_lang$core$Json_Decode$array = function (decoder) {\r\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'array', decoder);\r\n};\r\nvar _elm_lang$core$Json_Decode$list = function (decoder) {\r\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'list', decoder);\r\n};\r\nvar _elm_lang$core$Json_Decode$nullable = function (decoder) {\r\n\treturn _elm_lang$core$Json_Decode$oneOf(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, decoder),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$core$Json_Decode$float = _elm_lang$core$Native_Json.decodePrimitive('float');\r\nvar _elm_lang$core$Json_Decode$int = _elm_lang$core$Native_Json.decodePrimitive('int');\r\nvar _elm_lang$core$Json_Decode$bool = _elm_lang$core$Native_Json.decodePrimitive('bool');\r\nvar _elm_lang$core$Json_Decode$string = _elm_lang$core$Native_Json.decodePrimitive('string');\r\nvar _elm_lang$core$Json_Decode$Decoder = {ctor: 'Decoder'};\r\n\r\nvar _elm_lang$core$Process$kill = _elm_lang$core$Native_Scheduler.kill;\r\nvar _elm_lang$core$Process$sleep = _elm_lang$core$Native_Scheduler.sleep;\r\nvar _elm_lang$core$Process$spawn = _elm_lang$core$Native_Scheduler.spawn;\r\n\r\nvar _elm_lang$core$Tuple$mapSecond = F2(\r\n\tfunction (func, _p0) {\r\n\t\tvar _p1 = _p0;\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _p1._0,\r\n\t\t\t_1: func(_p1._1)\r\n\t\t};\r\n\t});\r\nvar _elm_lang$core$Tuple$mapFirst = F2(\r\n\tfunction (func, _p2) {\r\n\t\tvar _p3 = _p2;\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: func(_p3._0),\r\n\t\t\t_1: _p3._1\r\n\t\t};\r\n\t});\r\nvar _elm_lang$core$Tuple$second = function (_p4) {\r\n\tvar _p5 = _p4;\r\n\treturn _p5._1;\r\n};\r\nvar _elm_lang$core$Tuple$first = function (_p6) {\r\n\tvar _p7 = _p6;\r\n\treturn _p7._0;\r\n};\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrap;\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags;\r\n\r\nvar _elm_lang$virtual_dom$Native_VirtualDom = function() {\r\n\r\nvar STYLE_KEY = 'STYLE';\r\nvar EVENT_KEY = 'EVENT';\r\nvar ATTR_KEY = 'ATTR';\r\nvar ATTR_NS_KEY = 'ATTR_NS';\r\n\r\nvar localDoc = typeof document !== 'undefined' ? document : {};\r\n\r\n\r\n////////////  VIRTUAL DOM NODES  ////////////\r\n\r\n\r\nfunction text(string)\r\n{\r\n\treturn {\r\n\t\ttype: 'text',\r\n\t\ttext: string\r\n\t};\r\n}\r\n\r\n\r\nfunction node(tag)\r\n{\r\n\treturn F2(function(factList, kidList) {\r\n\t\treturn nodeHelp(tag, factList, kidList);\r\n\t});\r\n}\r\n\r\n\r\nfunction nodeHelp(tag, factList, kidList)\r\n{\r\n\tvar organized = organizeFacts(factList);\r\n\tvar namespace = organized.namespace;\r\n\tvar facts = organized.facts;\r\n\r\n\tvar children = [];\r\n\tvar descendantsCount = 0;\r\n\twhile (kidList.ctor !== '[]')\r\n\t{\r\n\t\tvar kid = kidList._0;\r\n\t\tdescendantsCount += (kid.descendantsCount || 0);\r\n\t\tchildren.push(kid);\r\n\t\tkidList = kidList._1;\r\n\t}\r\n\tdescendantsCount += children.length;\r\n\r\n\treturn {\r\n\t\ttype: 'node',\r\n\t\ttag: tag,\r\n\t\tfacts: facts,\r\n\t\tchildren: children,\r\n\t\tnamespace: namespace,\r\n\t\tdescendantsCount: descendantsCount\r\n\t};\r\n}\r\n\r\n\r\nfunction keyedNode(tag, factList, kidList)\r\n{\r\n\tvar organized = organizeFacts(factList);\r\n\tvar namespace = organized.namespace;\r\n\tvar facts = organized.facts;\r\n\r\n\tvar children = [];\r\n\tvar descendantsCount = 0;\r\n\twhile (kidList.ctor !== '[]')\r\n\t{\r\n\t\tvar kid = kidList._0;\r\n\t\tdescendantsCount += (kid._1.descendantsCount || 0);\r\n\t\tchildren.push(kid);\r\n\t\tkidList = kidList._1;\r\n\t}\r\n\tdescendantsCount += children.length;\r\n\r\n\treturn {\r\n\t\ttype: 'keyed-node',\r\n\t\ttag: tag,\r\n\t\tfacts: facts,\r\n\t\tchildren: children,\r\n\t\tnamespace: namespace,\r\n\t\tdescendantsCount: descendantsCount\r\n\t};\r\n}\r\n\r\n\r\nfunction custom(factList, model, impl)\r\n{\r\n\tvar facts = organizeFacts(factList).facts;\r\n\r\n\treturn {\r\n\t\ttype: 'custom',\r\n\t\tfacts: facts,\r\n\t\tmodel: model,\r\n\t\timpl: impl\r\n\t};\r\n}\r\n\r\n\r\nfunction map(tagger, node)\r\n{\r\n\treturn {\r\n\t\ttype: 'tagger',\r\n\t\ttagger: tagger,\r\n\t\tnode: node,\r\n\t\tdescendantsCount: 1 + (node.descendantsCount || 0)\r\n\t};\r\n}\r\n\r\n\r\nfunction thunk(func, args, thunk)\r\n{\r\n\treturn {\r\n\t\ttype: 'thunk',\r\n\t\tfunc: func,\r\n\t\targs: args,\r\n\t\tthunk: thunk,\r\n\t\tnode: undefined\r\n\t};\r\n}\r\n\r\nfunction lazy(fn, a)\r\n{\r\n\treturn thunk(fn, [a], function() {\r\n\t\treturn fn(a);\r\n\t});\r\n}\r\n\r\nfunction lazy2(fn, a, b)\r\n{\r\n\treturn thunk(fn, [a,b], function() {\r\n\t\treturn A2(fn, a, b);\r\n\t});\r\n}\r\n\r\nfunction lazy3(fn, a, b, c)\r\n{\r\n\treturn thunk(fn, [a,b,c], function() {\r\n\t\treturn A3(fn, a, b, c);\r\n\t});\r\n}\r\n\r\n\r\n\r\n// FACTS\r\n\r\n\r\nfunction organizeFacts(factList)\r\n{\r\n\tvar namespace, facts = {};\r\n\r\n\twhile (factList.ctor !== '[]')\r\n\t{\r\n\t\tvar entry = factList._0;\r\n\t\tvar key = entry.key;\r\n\r\n\t\tif (key === ATTR_KEY || key === ATTR_NS_KEY || key === EVENT_KEY)\r\n\t\t{\r\n\t\t\tvar subFacts = facts[key] || {};\r\n\t\t\tsubFacts[entry.realKey] = entry.value;\r\n\t\t\tfacts[key] = subFacts;\r\n\t\t}\r\n\t\telse if (key === STYLE_KEY)\r\n\t\t{\r\n\t\t\tvar styles = facts[key] || {};\r\n\t\t\tvar styleList = entry.value;\r\n\t\t\twhile (styleList.ctor !== '[]')\r\n\t\t\t{\r\n\t\t\t\tvar style = styleList._0;\r\n\t\t\t\tstyles[style._0] = style._1;\r\n\t\t\t\tstyleList = styleList._1;\r\n\t\t\t}\r\n\t\t\tfacts[key] = styles;\r\n\t\t}\r\n\t\telse if (key === 'namespace')\r\n\t\t{\r\n\t\t\tnamespace = entry.value;\r\n\t\t}\r\n\t\telse if (key === 'className')\r\n\t\t{\r\n\t\t\tvar classes = facts[key];\r\n\t\t\tfacts[key] = typeof classes === 'undefined'\r\n\t\t\t\t? entry.value\r\n\t\t\t\t: classes + ' ' + entry.value;\r\n\t\t}\r\n \t\telse\r\n\t\t{\r\n\t\t\tfacts[key] = entry.value;\r\n\t\t}\r\n\t\tfactList = factList._1;\r\n\t}\r\n\r\n\treturn {\r\n\t\tfacts: facts,\r\n\t\tnamespace: namespace\r\n\t};\r\n}\r\n\r\n\r\n\r\n////////////  PROPERTIES AND ATTRIBUTES  ////////////\r\n\r\n\r\nfunction style(value)\r\n{\r\n\treturn {\r\n\t\tkey: STYLE_KEY,\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\n\r\nfunction property(key, value)\r\n{\r\n\treturn {\r\n\t\tkey: key,\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\n\r\nfunction attribute(key, value)\r\n{\r\n\treturn {\r\n\t\tkey: ATTR_KEY,\r\n\t\trealKey: key,\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\n\r\nfunction attributeNS(namespace, key, value)\r\n{\r\n\treturn {\r\n\t\tkey: ATTR_NS_KEY,\r\n\t\trealKey: key,\r\n\t\tvalue: {\r\n\t\t\tvalue: value,\r\n\t\t\tnamespace: namespace\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nfunction on(name, options, decoder)\r\n{\r\n\treturn {\r\n\t\tkey: EVENT_KEY,\r\n\t\trealKey: name,\r\n\t\tvalue: {\r\n\t\t\toptions: options,\r\n\t\t\tdecoder: decoder\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nfunction equalEvents(a, b)\r\n{\r\n\tif (a.options !== b.options)\r\n\t{\r\n\t\tif (a.options.stopPropagation !== b.options.stopPropagation || a.options.preventDefault !== b.options.preventDefault)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn _elm_lang$core$Native_Json.equality(a.decoder, b.decoder);\r\n}\r\n\r\n\r\nfunction mapProperty(func, property)\r\n{\r\n\tif (property.key !== EVENT_KEY)\r\n\t{\r\n\t\treturn property;\r\n\t}\r\n\treturn on(\r\n\t\tproperty.realKey,\r\n\t\tproperty.value.options,\r\n\t\tA2(_elm_lang$core$Json_Decode$map, func, property.value.decoder)\r\n\t);\r\n}\r\n\r\n\r\n////////////  RENDER  ////////////\r\n\r\n\r\nfunction render(vNode, eventNode)\r\n{\r\n\tswitch (vNode.type)\r\n\t{\r\n\t\tcase 'thunk':\r\n\t\t\tif (!vNode.node)\r\n\t\t\t{\r\n\t\t\t\tvNode.node = vNode.thunk();\r\n\t\t\t}\r\n\t\t\treturn render(vNode.node, eventNode);\r\n\r\n\t\tcase 'tagger':\r\n\t\t\tvar subNode = vNode.node;\r\n\t\t\tvar tagger = vNode.tagger;\r\n\r\n\t\t\twhile (subNode.type === 'tagger')\r\n\t\t\t{\r\n\t\t\t\ttypeof tagger !== 'object'\r\n\t\t\t\t\t? tagger = [tagger, subNode.tagger]\r\n\t\t\t\t\t: tagger.push(subNode.tagger);\r\n\r\n\t\t\t\tsubNode = subNode.node;\r\n\t\t\t}\r\n\r\n\t\t\tvar subEventRoot = { tagger: tagger, parent: eventNode };\r\n\t\t\tvar domNode = render(subNode, subEventRoot);\r\n\t\t\tdomNode.elm_event_node_ref = subEventRoot;\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'text':\r\n\t\t\treturn localDoc.createTextNode(vNode.text);\r\n\r\n\t\tcase 'node':\r\n\t\t\tvar domNode = vNode.namespace\r\n\t\t\t\t? localDoc.createElementNS(vNode.namespace, vNode.tag)\r\n\t\t\t\t: localDoc.createElement(vNode.tag);\r\n\r\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\r\n\r\n\t\t\tvar children = vNode.children;\r\n\r\n\t\t\tfor (var i = 0; i < children.length; i++)\r\n\t\t\t{\r\n\t\t\t\tdomNode.appendChild(render(children[i], eventNode));\r\n\t\t\t}\r\n\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'keyed-node':\r\n\t\t\tvar domNode = vNode.namespace\r\n\t\t\t\t? localDoc.createElementNS(vNode.namespace, vNode.tag)\r\n\t\t\t\t: localDoc.createElement(vNode.tag);\r\n\r\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\r\n\r\n\t\t\tvar children = vNode.children;\r\n\r\n\t\t\tfor (var i = 0; i < children.length; i++)\r\n\t\t\t{\r\n\t\t\t\tdomNode.appendChild(render(children[i]._1, eventNode));\r\n\t\t\t}\r\n\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'custom':\r\n\t\t\tvar domNode = vNode.impl.render(vNode.model);\r\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\r\n\t\t\treturn domNode;\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  APPLY FACTS  ////////////\r\n\r\n\r\nfunction applyFacts(domNode, eventNode, facts)\r\n{\r\n\tfor (var key in facts)\r\n\t{\r\n\t\tvar value = facts[key];\r\n\r\n\t\tswitch (key)\r\n\t\t{\r\n\t\t\tcase STYLE_KEY:\r\n\t\t\t\tapplyStyles(domNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase EVENT_KEY:\r\n\t\t\t\tapplyEvents(domNode, eventNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ATTR_KEY:\r\n\t\t\t\tapplyAttrs(domNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ATTR_NS_KEY:\r\n\t\t\t\tapplyAttrsNS(domNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'value':\r\n\t\t\t\tif (domNode[key] !== value)\r\n\t\t\t\t{\r\n\t\t\t\t\tdomNode[key] = value;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tdomNode[key] = value;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyStyles(domNode, styles)\r\n{\r\n\tvar domNodeStyle = domNode.style;\r\n\r\n\tfor (var key in styles)\r\n\t{\r\n\t\tdomNodeStyle[key] = styles[key];\r\n\t}\r\n}\r\n\r\nfunction applyEvents(domNode, eventNode, events)\r\n{\r\n\tvar allHandlers = domNode.elm_handlers || {};\r\n\r\n\tfor (var key in events)\r\n\t{\r\n\t\tvar handler = allHandlers[key];\r\n\t\tvar value = events[key];\r\n\r\n\t\tif (typeof value === 'undefined')\r\n\t\t{\r\n\t\t\tdomNode.removeEventListener(key, handler);\r\n\t\t\tallHandlers[key] = undefined;\r\n\t\t}\r\n\t\telse if (typeof handler === 'undefined')\r\n\t\t{\r\n\t\t\tvar handler = makeEventHandler(eventNode, value);\r\n\t\t\tdomNode.addEventListener(key, handler);\r\n\t\t\tallHandlers[key] = handler;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\thandler.info = value;\r\n\t\t}\r\n\t}\r\n\r\n\tdomNode.elm_handlers = allHandlers;\r\n}\r\n\r\nfunction makeEventHandler(eventNode, info)\r\n{\r\n\tfunction eventHandler(event)\r\n\t{\r\n\t\tvar info = eventHandler.info;\r\n\r\n\t\tvar value = A2(_elm_lang$core$Native_Json.run, info.decoder, event);\r\n\r\n\t\tif (value.ctor === 'Ok')\r\n\t\t{\r\n\t\t\tvar options = info.options;\r\n\t\t\tif (options.stopPropagation)\r\n\t\t\t{\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t}\r\n\t\t\tif (options.preventDefault)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tvar message = value._0;\r\n\r\n\t\t\tvar currentEventNode = eventNode;\r\n\t\t\twhile (currentEventNode)\r\n\t\t\t{\r\n\t\t\t\tvar tagger = currentEventNode.tagger;\r\n\t\t\t\tif (typeof tagger === 'function')\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = tagger(message);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = tagger.length; i--; )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessage = tagger[i](message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcurrentEventNode = currentEventNode.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\teventHandler.info = info;\r\n\r\n\treturn eventHandler;\r\n}\r\n\r\nfunction applyAttrs(domNode, attrs)\r\n{\r\n\tfor (var key in attrs)\r\n\t{\r\n\t\tvar value = attrs[key];\r\n\t\tif (typeof value === 'undefined')\r\n\t\t{\r\n\t\t\tdomNode.removeAttribute(key);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tdomNode.setAttribute(key, value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyAttrsNS(domNode, nsAttrs)\r\n{\r\n\tfor (var key in nsAttrs)\r\n\t{\r\n\t\tvar pair = nsAttrs[key];\r\n\t\tvar namespace = pair.namespace;\r\n\t\tvar value = pair.value;\r\n\r\n\t\tif (typeof value === 'undefined')\r\n\t\t{\r\n\t\t\tdomNode.removeAttributeNS(namespace, key);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tdomNode.setAttributeNS(namespace, key, value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  DIFF  ////////////\r\n\r\n\r\nfunction diff(a, b)\r\n{\r\n\tvar patches = [];\r\n\tdiffHelp(a, b, patches, 0);\r\n\treturn patches;\r\n}\r\n\r\n\r\nfunction makePatch(type, index, data)\r\n{\r\n\treturn {\r\n\t\tindex: index,\r\n\t\ttype: type,\r\n\t\tdata: data,\r\n\t\tdomNode: undefined,\r\n\t\teventNode: undefined\r\n\t};\r\n}\r\n\r\n\r\nfunction diffHelp(a, b, patches, index)\r\n{\r\n\tif (a === b)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar aType = a.type;\r\n\tvar bType = b.type;\r\n\r\n\t// Bail if you run into different types of nodes. Implies that the\r\n\t// structure has changed significantly and it's not worth a diff.\r\n\tif (aType !== bType)\r\n\t{\r\n\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Now we know that both nodes are the same type.\r\n\tswitch (bType)\r\n\t{\r\n\t\tcase 'thunk':\r\n\t\t\tvar aArgs = a.args;\r\n\t\t\tvar bArgs = b.args;\r\n\t\t\tvar i = aArgs.length;\r\n\t\t\tvar same = a.func === b.func && i === bArgs.length;\r\n\t\t\twhile (same && i--)\r\n\t\t\t{\r\n\t\t\t\tsame = aArgs[i] === bArgs[i];\r\n\t\t\t}\r\n\t\t\tif (same)\r\n\t\t\t{\r\n\t\t\t\tb.node = a.node;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tb.node = b.thunk();\r\n\t\t\tvar subPatches = [];\r\n\t\t\tdiffHelp(a.node, b.node, subPatches, 0);\r\n\t\t\tif (subPatches.length > 0)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-thunk', index, subPatches));\r\n\t\t\t}\r\n\t\t\treturn;\r\n\r\n\t\tcase 'tagger':\r\n\t\t\t// gather nested taggers\r\n\t\t\tvar aTaggers = a.tagger;\r\n\t\t\tvar bTaggers = b.tagger;\r\n\t\t\tvar nesting = false;\r\n\r\n\t\t\tvar aSubNode = a.node;\r\n\t\t\twhile (aSubNode.type === 'tagger')\r\n\t\t\t{\r\n\t\t\t\tnesting = true;\r\n\r\n\t\t\t\ttypeof aTaggers !== 'object'\r\n\t\t\t\t\t? aTaggers = [aTaggers, aSubNode.tagger]\r\n\t\t\t\t\t: aTaggers.push(aSubNode.tagger);\r\n\r\n\t\t\t\taSubNode = aSubNode.node;\r\n\t\t\t}\r\n\r\n\t\t\tvar bSubNode = b.node;\r\n\t\t\twhile (bSubNode.type === 'tagger')\r\n\t\t\t{\r\n\t\t\t\tnesting = true;\r\n\r\n\t\t\t\ttypeof bTaggers !== 'object'\r\n\t\t\t\t\t? bTaggers = [bTaggers, bSubNode.tagger]\r\n\t\t\t\t\t: bTaggers.push(bSubNode.tagger);\r\n\r\n\t\t\t\tbSubNode = bSubNode.node;\r\n\t\t\t}\r\n\r\n\t\t\t// Just bail if different numbers of taggers. This implies the\r\n\t\t\t// structure of the virtual DOM has changed.\r\n\t\t\tif (nesting && aTaggers.length !== bTaggers.length)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// check if taggers are \"the same\"\r\n\t\t\tif (nesting ? !pairwiseRefEqual(aTaggers, bTaggers) : aTaggers !== bTaggers)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-tagger', index, bTaggers));\r\n\t\t\t}\r\n\r\n\t\t\t// diff everything below the taggers\r\n\t\t\tdiffHelp(aSubNode, bSubNode, patches, index + 1);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'text':\r\n\t\t\tif (a.text !== b.text)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-text', index, b.text));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\tcase 'node':\r\n\t\t\t// Bail if obvious indicators have changed. Implies more serious\r\n\t\t\t// structural changes such that it's not worth it to diff.\r\n\t\t\tif (a.tag !== b.tag || a.namespace !== b.namespace)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\r\n\r\n\t\t\tif (typeof factsDiff !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\r\n\t\t\t}\r\n\r\n\t\t\tdiffChildren(a, b, patches, index);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'keyed-node':\r\n\t\t\t// Bail if obvious indicators have changed. Implies more serious\r\n\t\t\t// structural changes such that it's not worth it to diff.\r\n\t\t\tif (a.tag !== b.tag || a.namespace !== b.namespace)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\r\n\r\n\t\t\tif (typeof factsDiff !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\r\n\t\t\t}\r\n\r\n\t\t\tdiffKeyedChildren(a, b, patches, index);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'custom':\r\n\t\t\tif (a.impl !== b.impl)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\r\n\t\t\tif (typeof factsDiff !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\r\n\t\t\t}\r\n\r\n\t\t\tvar patch = b.impl.diff(a,b);\r\n\t\t\tif (patch)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-custom', index, patch));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t}\r\n}\r\n\r\n\r\n// assumes the incoming arrays are the same length\r\nfunction pairwiseRefEqual(as, bs)\r\n{\r\n\tfor (var i = 0; i < as.length; i++)\r\n\t{\r\n\t\tif (as[i] !== bs[i])\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n\r\n// TODO Instead of creating a new diff object, it's possible to just test if\r\n// there *is* a diff. During the actual patch, do the diff again and make the\r\n// modifications directly. This way, there's no new allocations. Worth it?\r\nfunction diffFacts(a, b, category)\r\n{\r\n\tvar diff;\r\n\r\n\t// look for changes and removals\r\n\tfor (var aKey in a)\r\n\t{\r\n\t\tif (aKey === STYLE_KEY || aKey === EVENT_KEY || aKey === ATTR_KEY || aKey === ATTR_NS_KEY)\r\n\t\t{\r\n\t\t\tvar subDiff = diffFacts(a[aKey], b[aKey] || {}, aKey);\r\n\t\t\tif (subDiff)\r\n\t\t\t{\r\n\t\t\t\tdiff = diff || {};\r\n\t\t\t\tdiff[aKey] = subDiff;\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// remove if not in the new facts\r\n\t\tif (!(aKey in b))\r\n\t\t{\r\n\t\t\tdiff = diff || {};\r\n\t\t\tdiff[aKey] =\r\n\t\t\t\t(typeof category === 'undefined')\r\n\t\t\t\t\t? (typeof a[aKey] === 'string' ? '' : null)\r\n\t\t\t\t\t:\r\n\t\t\t\t(category === STYLE_KEY)\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t:\r\n\t\t\t\t(category === EVENT_KEY || category === ATTR_KEY)\r\n\t\t\t\t\t? undefined\r\n\t\t\t\t\t:\r\n\t\t\t\t{ namespace: a[aKey].namespace, value: undefined };\r\n\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvar aValue = a[aKey];\r\n\t\tvar bValue = b[aKey];\r\n\r\n\t\t// reference equal, so don't worry about it\r\n\t\tif (aValue === bValue && aKey !== 'value'\r\n\t\t\t|| category === EVENT_KEY && equalEvents(aValue, bValue))\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tdiff = diff || {};\r\n\t\tdiff[aKey] = bValue;\r\n\t}\r\n\r\n\t// add new stuff\r\n\tfor (var bKey in b)\r\n\t{\r\n\t\tif (!(bKey in a))\r\n\t\t{\r\n\t\t\tdiff = diff || {};\r\n\t\t\tdiff[bKey] = b[bKey];\r\n\t\t}\r\n\t}\r\n\r\n\treturn diff;\r\n}\r\n\r\n\r\nfunction diffChildren(aParent, bParent, patches, rootIndex)\r\n{\r\n\tvar aChildren = aParent.children;\r\n\tvar bChildren = bParent.children;\r\n\r\n\tvar aLen = aChildren.length;\r\n\tvar bLen = bChildren.length;\r\n\r\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\r\n\r\n\tif (aLen > bLen)\r\n\t{\r\n\t\tpatches.push(makePatch('p-remove-last', rootIndex, aLen - bLen));\r\n\t}\r\n\telse if (aLen < bLen)\r\n\t{\r\n\t\tpatches.push(makePatch('p-append', rootIndex, bChildren.slice(aLen)));\r\n\t}\r\n\r\n\t// PAIRWISE DIFF EVERYTHING ELSE\r\n\r\n\tvar index = rootIndex;\r\n\tvar minLen = aLen < bLen ? aLen : bLen;\r\n\tfor (var i = 0; i < minLen; i++)\r\n\t{\r\n\t\tindex++;\r\n\t\tvar aChild = aChildren[i];\r\n\t\tdiffHelp(aChild, bChildren[i], patches, index);\r\n\t\tindex += aChild.descendantsCount || 0;\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  KEYED DIFF  ////////////\r\n\r\n\r\nfunction diffKeyedChildren(aParent, bParent, patches, rootIndex)\r\n{\r\n\tvar localPatches = [];\r\n\r\n\tvar changes = {}; // Dict String Entry\r\n\tvar inserts = []; // Array { index : Int, entry : Entry }\r\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\r\n\r\n\tvar aChildren = aParent.children;\r\n\tvar bChildren = bParent.children;\r\n\tvar aLen = aChildren.length;\r\n\tvar bLen = bChildren.length;\r\n\tvar aIndex = 0;\r\n\tvar bIndex = 0;\r\n\r\n\tvar index = rootIndex;\r\n\r\n\twhile (aIndex < aLen && bIndex < bLen)\r\n\t{\r\n\t\tvar a = aChildren[aIndex];\r\n\t\tvar b = bChildren[bIndex];\r\n\r\n\t\tvar aKey = a._0;\r\n\t\tvar bKey = b._0;\r\n\t\tvar aNode = a._1;\r\n\t\tvar bNode = b._1;\r\n\r\n\t\t// check if keys match\r\n\r\n\t\tif (aKey === bKey)\r\n\t\t{\r\n\t\t\tindex++;\r\n\t\t\tdiffHelp(aNode, bNode, localPatches, index);\r\n\t\t\tindex += aNode.descendantsCount || 0;\r\n\r\n\t\t\taIndex++;\r\n\t\t\tbIndex++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// look ahead 1 to detect insertions and removals.\r\n\r\n\t\tvar aLookAhead = aIndex + 1 < aLen;\r\n\t\tvar bLookAhead = bIndex + 1 < bLen;\r\n\r\n\t\tif (aLookAhead)\r\n\t\t{\r\n\t\t\tvar aNext = aChildren[aIndex + 1];\r\n\t\t\tvar aNextKey = aNext._0;\r\n\t\t\tvar aNextNode = aNext._1;\r\n\t\t\tvar oldMatch = bKey === aNextKey;\r\n\t\t}\r\n\r\n\t\tif (bLookAhead)\r\n\t\t{\r\n\t\t\tvar bNext = bChildren[bIndex + 1];\r\n\t\t\tvar bNextKey = bNext._0;\r\n\t\t\tvar bNextNode = bNext._1;\r\n\t\t\tvar newMatch = aKey === bNextKey;\r\n\t\t}\r\n\r\n\r\n\t\t// swap a and b\r\n\t\tif (aLookAhead && bLookAhead && newMatch && oldMatch)\r\n\t\t{\r\n\t\t\tindex++;\r\n\t\t\tdiffHelp(aNode, bNextNode, localPatches, index);\r\n\t\t\tinsertNode(changes, localPatches, aKey, bNode, bIndex, inserts);\r\n\t\t\tindex += aNode.descendantsCount || 0;\r\n\r\n\t\t\tindex++;\r\n\t\t\tremoveNode(changes, localPatches, aKey, aNextNode, index);\r\n\t\t\tindex += aNextNode.descendantsCount || 0;\r\n\r\n\t\t\taIndex += 2;\r\n\t\t\tbIndex += 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// insert b\r\n\t\tif (bLookAhead && newMatch)\r\n\t\t{\r\n\t\t\tindex++;\r\n\t\t\tinsertNode(changes, localPatches, bKey, bNode, bIndex, inserts);\r\n\t\t\tdiffHelp(aNode, bNextNode, localPatches, index);\r\n\t\t\tindex += aNode.descendantsCount || 0;\r\n\r\n\t\t\taIndex += 1;\r\n\t\t\tbIndex += 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// remove a\r\n\t\tif (aLookAhead && oldMatch)\r\n\t\t{\r\n\t\t\tindex++;\r\n\t\t\tremoveNode(changes, localPatches, aKey, aNode, index);\r\n\t\t\tindex += aNode.descendantsCount || 0;\r\n\r\n\t\t\tindex++;\r\n\t\t\tdiffHelp(aNextNode, bNode, localPatches, index);\r\n\t\t\tindex += aNextNode.descendantsCount || 0;\r\n\r\n\t\t\taIndex += 2;\r\n\t\t\tbIndex += 1;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// remove a, insert b\r\n\t\tif (aLookAhead && bLookAhead && aNextKey === bNextKey)\r\n\t\t{\r\n\t\t\tindex++;\r\n\t\t\tremoveNode(changes, localPatches, aKey, aNode, index);\r\n\t\t\tinsertNode(changes, localPatches, bKey, bNode, bIndex, inserts);\r\n\t\t\tindex += aNode.descendantsCount || 0;\r\n\r\n\t\t\tindex++;\r\n\t\t\tdiffHelp(aNextNode, bNextNode, localPatches, index);\r\n\t\t\tindex += aNextNode.descendantsCount || 0;\r\n\r\n\t\t\taIndex += 2;\r\n\t\t\tbIndex += 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tbreak;\r\n\t}\r\n\r\n\t// eat up any remaining nodes with removeNode and insertNode\r\n\r\n\twhile (aIndex < aLen)\r\n\t{\r\n\t\tindex++;\r\n\t\tvar a = aChildren[aIndex];\r\n\t\tvar aNode = a._1;\r\n\t\tremoveNode(changes, localPatches, a._0, aNode, index);\r\n\t\tindex += aNode.descendantsCount || 0;\r\n\t\taIndex++;\r\n\t}\r\n\r\n\tvar endInserts;\r\n\twhile (bIndex < bLen)\r\n\t{\r\n\t\tendInserts = endInserts || [];\r\n\t\tvar b = bChildren[bIndex];\r\n\t\tinsertNode(changes, localPatches, b._0, b._1, undefined, endInserts);\r\n\t\tbIndex++;\r\n\t}\r\n\r\n\tif (localPatches.length > 0 || inserts.length > 0 || typeof endInserts !== 'undefined')\r\n\t{\r\n\t\tpatches.push(makePatch('p-reorder', rootIndex, {\r\n\t\t\tpatches: localPatches,\r\n\t\t\tinserts: inserts,\r\n\t\t\tendInserts: endInserts\r\n\t\t}));\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  CHANGES FROM KEYED DIFF  ////////////\r\n\r\n\r\nvar POSTFIX = '_elmW6BL';\r\n\r\n\r\nfunction insertNode(changes, localPatches, key, vnode, bIndex, inserts)\r\n{\r\n\tvar entry = changes[key];\r\n\r\n\t// never seen this key before\r\n\tif (typeof entry === 'undefined')\r\n\t{\r\n\t\tentry = {\r\n\t\t\ttag: 'insert',\r\n\t\t\tvnode: vnode,\r\n\t\t\tindex: bIndex,\r\n\t\t\tdata: undefined\r\n\t\t};\r\n\r\n\t\tinserts.push({ index: bIndex, entry: entry });\r\n\t\tchanges[key] = entry;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t// this key was removed earlier, a match!\r\n\tif (entry.tag === 'remove')\r\n\t{\r\n\t\tinserts.push({ index: bIndex, entry: entry });\r\n\r\n\t\tentry.tag = 'move';\r\n\t\tvar subPatches = [];\r\n\t\tdiffHelp(entry.vnode, vnode, subPatches, entry.index);\r\n\t\tentry.index = bIndex;\r\n\t\tentry.data.data = {\r\n\t\t\tpatches: subPatches,\r\n\t\t\tentry: entry\r\n\t\t};\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t// this key has already been inserted or moved, a duplicate!\r\n\tinsertNode(changes, localPatches, key + POSTFIX, vnode, bIndex, inserts);\r\n}\r\n\r\n\r\nfunction removeNode(changes, localPatches, key, vnode, index)\r\n{\r\n\tvar entry = changes[key];\r\n\r\n\t// never seen this key before\r\n\tif (typeof entry === 'undefined')\r\n\t{\r\n\t\tvar patch = makePatch('p-remove', index, undefined);\r\n\t\tlocalPatches.push(patch);\r\n\r\n\t\tchanges[key] = {\r\n\t\t\ttag: 'remove',\r\n\t\t\tvnode: vnode,\r\n\t\t\tindex: index,\r\n\t\t\tdata: patch\r\n\t\t};\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t// this key was inserted earlier, a match!\r\n\tif (entry.tag === 'insert')\r\n\t{\r\n\t\tentry.tag = 'move';\r\n\t\tvar subPatches = [];\r\n\t\tdiffHelp(vnode, entry.vnode, subPatches, index);\r\n\r\n\t\tvar patch = makePatch('p-remove', index, {\r\n\t\t\tpatches: subPatches,\r\n\t\t\tentry: entry\r\n\t\t});\r\n\t\tlocalPatches.push(patch);\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t// this key has already been removed or moved, a duplicate!\r\n\tremoveNode(changes, localPatches, key + POSTFIX, vnode, index);\r\n}\r\n\r\n\r\n\r\n////////////  ADD DOM NODES  ////////////\r\n//\r\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\r\n// to minimize our crawl over the actual DOM, so these indexes (along with the\r\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\r\n// the DOM if we know there are no patches there.\r\n\r\n\r\nfunction addDomNodes(domNode, vNode, patches, eventNode)\r\n{\r\n\taddDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.descendantsCount, eventNode);\r\n}\r\n\r\n\r\n// assumes `patches` is non-empty and indexes increase monotonically.\r\nfunction addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\r\n{\r\n\tvar patch = patches[i];\r\n\tvar index = patch.index;\r\n\r\n\twhile (index === low)\r\n\t{\r\n\t\tvar patchType = patch.type;\r\n\r\n\t\tif (patchType === 'p-thunk')\r\n\t\t{\r\n\t\t\taddDomNodes(domNode, vNode.node, patch.data, eventNode);\r\n\t\t}\r\n\t\telse if (patchType === 'p-reorder')\r\n\t\t{\r\n\t\t\tpatch.domNode = domNode;\r\n\t\t\tpatch.eventNode = eventNode;\r\n\r\n\t\t\tvar subPatches = patch.data.patches;\r\n\t\t\tif (subPatches.length > 0)\r\n\t\t\t{\r\n\t\t\t\taddDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (patchType === 'p-remove')\r\n\t\t{\r\n\t\t\tpatch.domNode = domNode;\r\n\t\t\tpatch.eventNode = eventNode;\r\n\r\n\t\t\tvar data = patch.data;\r\n\t\t\tif (typeof data !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tdata.entry.data = domNode;\r\n\t\t\t\tvar subPatches = data.patches;\r\n\t\t\t\tif (subPatches.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\taddDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tpatch.domNode = domNode;\r\n\t\t\tpatch.eventNode = eventNode;\r\n\t\t}\r\n\r\n\t\ti++;\r\n\r\n\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\r\n\t\t{\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (vNode.type)\r\n\t{\r\n\t\tcase 'tagger':\r\n\t\t\tvar subNode = vNode.node;\r\n\r\n\t\t\twhile (subNode.type === \"tagger\")\r\n\t\t\t{\r\n\t\t\t\tsubNode = subNode.node;\r\n\t\t\t}\r\n\r\n\t\t\treturn addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\r\n\r\n\t\tcase 'node':\r\n\t\t\tvar vChildren = vNode.children;\r\n\t\t\tvar childNodes = domNode.childNodes;\r\n\t\t\tfor (var j = 0; j < vChildren.length; j++)\r\n\t\t\t{\r\n\t\t\t\tlow++;\r\n\t\t\t\tvar vChild = vChildren[j];\r\n\t\t\t\tvar nextLow = low + (vChild.descendantsCount || 0);\r\n\t\t\t\tif (low <= index && index <= nextLow)\r\n\t\t\t\t{\r\n\t\t\t\t\ti = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);\r\n\t\t\t\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlow = nextLow;\r\n\t\t\t}\r\n\t\t\treturn i;\r\n\r\n\t\tcase 'keyed-node':\r\n\t\t\tvar vChildren = vNode.children;\r\n\t\t\tvar childNodes = domNode.childNodes;\r\n\t\t\tfor (var j = 0; j < vChildren.length; j++)\r\n\t\t\t{\r\n\t\t\t\tlow++;\r\n\t\t\t\tvar vChild = vChildren[j]._1;\r\n\t\t\t\tvar nextLow = low + (vChild.descendantsCount || 0);\r\n\t\t\t\tif (low <= index && index <= nextLow)\r\n\t\t\t\t{\r\n\t\t\t\t\ti = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);\r\n\t\t\t\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlow = nextLow;\r\n\t\t\t}\r\n\t\t\treturn i;\r\n\r\n\t\tcase 'text':\r\n\t\tcase 'thunk':\r\n\t\t\tthrow new Error('should never traverse `text` or `thunk` nodes like this');\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  APPLY PATCHES  ////////////\r\n\r\n\r\nfunction applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\r\n{\r\n\tif (patches.length === 0)\r\n\t{\r\n\t\treturn rootDomNode;\r\n\t}\r\n\r\n\taddDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\r\n\treturn applyPatchesHelp(rootDomNode, patches);\r\n}\r\n\r\nfunction applyPatchesHelp(rootDomNode, patches)\r\n{\r\n\tfor (var i = 0; i < patches.length; i++)\r\n\t{\r\n\t\tvar patch = patches[i];\r\n\t\tvar localDomNode = patch.domNode\r\n\t\tvar newNode = applyPatch(localDomNode, patch);\r\n\t\tif (localDomNode === rootDomNode)\r\n\t\t{\r\n\t\t\trootDomNode = newNode;\r\n\t\t}\r\n\t}\r\n\treturn rootDomNode;\r\n}\r\n\r\nfunction applyPatch(domNode, patch)\r\n{\r\n\tswitch (patch.type)\r\n\t{\r\n\t\tcase 'p-redraw':\r\n\t\t\treturn applyPatchRedraw(domNode, patch.data, patch.eventNode);\r\n\r\n\t\tcase 'p-facts':\r\n\t\t\tapplyFacts(domNode, patch.eventNode, patch.data);\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-text':\r\n\t\t\tdomNode.replaceData(0, domNode.length, patch.data);\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-thunk':\r\n\t\t\treturn applyPatchesHelp(domNode, patch.data);\r\n\r\n\t\tcase 'p-tagger':\r\n\t\t\tif (typeof domNode.elm_event_node_ref !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tdomNode.elm_event_node_ref.tagger = patch.data;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdomNode.elm_event_node_ref = { tagger: patch.data, parent: patch.eventNode };\r\n\t\t\t}\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-remove-last':\r\n\t\t\tvar i = patch.data;\r\n\t\t\twhile (i--)\r\n\t\t\t{\r\n\t\t\t\tdomNode.removeChild(domNode.lastChild);\r\n\t\t\t}\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-append':\r\n\t\t\tvar newNodes = patch.data;\r\n\t\t\tfor (var i = 0; i < newNodes.length; i++)\r\n\t\t\t{\r\n\t\t\t\tdomNode.appendChild(render(newNodes[i], patch.eventNode));\r\n\t\t\t}\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-remove':\r\n\t\t\tvar data = patch.data;\r\n\t\t\tif (typeof data === 'undefined')\r\n\t\t\t{\r\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\r\n\t\t\t\treturn domNode;\r\n\t\t\t}\r\n\t\t\tvar entry = data.entry;\r\n\t\t\tif (typeof entry.index !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\r\n\t\t\t}\r\n\t\t\tentry.data = applyPatchesHelp(domNode, data.patches);\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-reorder':\r\n\t\t\treturn applyPatchReorder(domNode, patch);\r\n\r\n\t\tcase 'p-custom':\r\n\t\t\tvar impl = patch.data;\r\n\t\t\treturn impl.applyPatch(domNode, impl.data);\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Ran into an unknown patch!');\r\n\t}\r\n}\r\n\r\n\r\nfunction applyPatchRedraw(domNode, vNode, eventNode)\r\n{\r\n\tvar parentNode = domNode.parentNode;\r\n\tvar newNode = render(vNode, eventNode);\r\n\r\n\tif (typeof newNode.elm_event_node_ref === 'undefined')\r\n\t{\r\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\r\n\t}\r\n\r\n\tif (parentNode && newNode !== domNode)\r\n\t{\r\n\t\tparentNode.replaceChild(newNode, domNode);\r\n\t}\r\n\treturn newNode;\r\n}\r\n\r\n\r\nfunction applyPatchReorder(domNode, patch)\r\n{\r\n\tvar data = patch.data;\r\n\r\n\t// remove end inserts\r\n\tvar frag = applyPatchReorderEndInsertsHelp(data.endInserts, patch);\r\n\r\n\t// removals\r\n\tdomNode = applyPatchesHelp(domNode, data.patches);\r\n\r\n\t// inserts\r\n\tvar inserts = data.inserts;\r\n\tfor (var i = 0; i < inserts.length; i++)\r\n\t{\r\n\t\tvar insert = inserts[i];\r\n\t\tvar entry = insert.entry;\r\n\t\tvar node = entry.tag === 'move'\r\n\t\t\t? entry.data\r\n\t\t\t: render(entry.vnode, patch.eventNode);\r\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.index]);\r\n\t}\r\n\r\n\t// add end inserts\r\n\tif (typeof frag !== 'undefined')\r\n\t{\r\n\t\tdomNode.appendChild(frag);\r\n\t}\r\n\r\n\treturn domNode;\r\n}\r\n\r\n\r\nfunction applyPatchReorderEndInsertsHelp(endInserts, patch)\r\n{\r\n\tif (typeof endInserts === 'undefined')\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar frag = localDoc.createDocumentFragment();\r\n\tfor (var i = 0; i < endInserts.length; i++)\r\n\t{\r\n\t\tvar insert = endInserts[i];\r\n\t\tvar entry = insert.entry;\r\n\t\tfrag.appendChild(entry.tag === 'move'\r\n\t\t\t? entry.data\r\n\t\t\t: render(entry.vnode, patch.eventNode)\r\n\t\t);\r\n\t}\r\n\treturn frag;\r\n}\r\n\r\n\r\n// PROGRAMS\r\n\r\nvar program = makeProgram(checkNoFlags);\r\nvar programWithFlags = makeProgram(checkYesFlags);\r\n\r\nfunction makeProgram(flagChecker)\r\n{\r\n\treturn F2(function(debugWrap, impl)\r\n\t{\r\n\t\treturn function(flagDecoder)\r\n\t\t{\r\n\t\t\treturn function(object, moduleName, debugMetadata)\r\n\t\t\t{\r\n\t\t\t\tvar checker = flagChecker(flagDecoder, moduleName);\r\n\t\t\t\tif (typeof debugMetadata === 'undefined')\r\n\t\t\t\t{\r\n\t\t\t\t\tnormalSetup(impl, object, moduleName, checker);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tdebugSetup(A2(debugWrap, debugMetadata, impl), object, moduleName, checker);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t});\r\n}\r\n\r\nfunction staticProgram(vNode)\r\n{\r\n\tvar nothing = _elm_lang$core$Native_Utils.Tuple2(\r\n\t\t_elm_lang$core$Native_Utils.Tuple0,\r\n\t\t_elm_lang$core$Platform_Cmd$none\r\n\t);\r\n\treturn A2(program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, {\r\n\t\tinit: nothing,\r\n\t\tview: function() { return vNode; },\r\n\t\tupdate: F2(function() { return nothing; }),\r\n\t\tsubscriptions: function() { return _elm_lang$core$Platform_Sub$none; }\r\n\t})();\r\n}\r\n\r\n\r\n// FLAG CHECKERS\r\n\r\nfunction checkNoFlags(flagDecoder, moduleName)\r\n{\r\n\treturn function(init, flags, domNode)\r\n\t{\r\n\t\tif (typeof flags === 'undefined')\r\n\t\t{\r\n\t\t\treturn init;\r\n\t\t}\r\n\r\n\t\tvar errorMessage =\r\n\t\t\t'The `' + moduleName + '` module does not need flags.\\n'\r\n\t\t\t+ 'Initialize it with no arguments and you should be all set!';\r\n\r\n\t\tcrash(errorMessage, domNode);\r\n\t};\r\n}\r\n\r\nfunction checkYesFlags(flagDecoder, moduleName)\r\n{\r\n\treturn function(init, flags, domNode)\r\n\t{\r\n\t\tif (typeof flagDecoder === 'undefined')\r\n\t\t{\r\n\t\t\tvar errorMessage =\r\n\t\t\t\t'Are you trying to sneak a Never value into Elm? Trickster!\\n'\r\n\t\t\t\t+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\\n'\r\n\t\t\t\t+ 'Use `program` instead if you do not want flags.'\r\n\r\n\t\t\tcrash(errorMessage, domNode);\r\n\t\t}\r\n\r\n\t\tvar result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);\r\n\t\tif (result.ctor === 'Ok')\r\n\t\t{\r\n\t\t\treturn init(result._0);\r\n\t\t}\r\n\r\n\t\tvar errorMessage =\r\n\t\t\t'Trying to initialize the `' + moduleName + '` module with an unexpected flag.\\n'\r\n\t\t\t+ 'I tried to convert it to an Elm value, but ran into this problem:\\n\\n'\r\n\t\t\t+ result._0;\r\n\r\n\t\tcrash(errorMessage, domNode);\r\n\t};\r\n}\r\n\r\nfunction crash(errorMessage, domNode)\r\n{\r\n\tif (domNode)\r\n\t{\r\n\t\tdomNode.innerHTML =\r\n\t\t\t'<div style=\"padding-left:1em;\">'\r\n\t\t\t+ '<h2 style=\"font-weight:normal;\"><b>Oops!</b> Something went wrong when starting your Elm program.</h2>'\r\n\t\t\t+ '<pre style=\"padding-left:1em;\">' + errorMessage + '</pre>'\r\n\t\t\t+ '</div>';\r\n\t}\r\n\r\n\tthrow new Error(errorMessage);\r\n}\r\n\r\n\r\n//  NORMAL SETUP\r\n\r\nfunction normalSetup(impl, object, moduleName, flagChecker)\r\n{\r\n\tobject['embed'] = function embed(node, flags)\r\n\t{\r\n\t\twhile (node.lastChild)\r\n\t\t{\r\n\t\t\tnode.removeChild(node.lastChild);\r\n\t\t}\r\n\r\n\t\treturn _elm_lang$core$Native_Platform.initialize(\r\n\t\t\tflagChecker(impl.init, flags, node),\r\n\t\t\timpl.update,\r\n\t\t\timpl.subscriptions,\r\n\t\t\tnormalRenderer(node, impl.view)\r\n\t\t);\r\n\t};\r\n\r\n\tobject['fullscreen'] = function fullscreen(flags)\r\n\t{\r\n\t\treturn _elm_lang$core$Native_Platform.initialize(\r\n\t\t\tflagChecker(impl.init, flags, document.body),\r\n\t\t\timpl.update,\r\n\t\t\timpl.subscriptions,\r\n\t\t\tnormalRenderer(document.body, impl.view)\r\n\t\t);\r\n\t};\r\n}\r\n\r\nfunction normalRenderer(parentNode, view)\r\n{\r\n\treturn function(tagger, initialModel)\r\n\t{\r\n\t\tvar eventNode = { tagger: tagger, parent: undefined };\r\n\t\tvar initialVirtualNode = view(initialModel);\r\n\t\tvar domNode = render(initialVirtualNode, eventNode);\r\n\t\tparentNode.appendChild(domNode);\r\n\t\treturn makeStepper(domNode, view, initialVirtualNode, eventNode);\r\n\t};\r\n}\r\n\r\n\r\n// STEPPER\r\n\r\nvar rAF =\r\n\ttypeof requestAnimationFrame !== 'undefined'\r\n\t\t? requestAnimationFrame\r\n\t\t: function(callback) { setTimeout(callback, 1000 / 60); };\r\n\r\nfunction makeStepper(domNode, view, initialVirtualNode, eventNode)\r\n{\r\n\tvar state = 'NO_REQUEST';\r\n\tvar currNode = initialVirtualNode;\r\n\tvar nextModel;\r\n\r\n\tfunction updateIfNeeded()\r\n\t{\r\n\t\tswitch (state)\r\n\t\t{\r\n\t\t\tcase 'NO_REQUEST':\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t'Unexpected draw callback.\\n' +\r\n\t\t\t\t\t'Please report this to <https://github.com/elm-lang/virtual-dom/issues>.'\r\n\t\t\t\t);\r\n\r\n\t\t\tcase 'PENDING_REQUEST':\r\n\t\t\t\trAF(updateIfNeeded);\r\n\t\t\t\tstate = 'EXTRA_REQUEST';\r\n\r\n\t\t\t\tvar nextNode = view(nextModel);\r\n\t\t\t\tvar patches = diff(currNode, nextNode);\r\n\t\t\t\tdomNode = applyPatches(domNode, currNode, patches, eventNode);\r\n\t\t\t\tcurrNode = nextNode;\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\tcase 'EXTRA_REQUEST':\r\n\t\t\t\tstate = 'NO_REQUEST';\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\treturn function stepper(model)\r\n\t{\r\n\t\tif (state === 'NO_REQUEST')\r\n\t\t{\r\n\t\t\trAF(updateIfNeeded);\r\n\t\t}\r\n\t\tstate = 'PENDING_REQUEST';\r\n\t\tnextModel = model;\r\n\t};\r\n}\r\n\r\n\r\n// DEBUG SETUP\r\n\r\nfunction debugSetup(impl, object, moduleName, flagChecker)\r\n{\r\n\tobject['fullscreen'] = function fullscreen(flags)\r\n\t{\r\n\t\tvar popoutRef = { doc: undefined };\r\n\t\treturn _elm_lang$core$Native_Platform.initialize(\r\n\t\t\tflagChecker(impl.init, flags, document.body),\r\n\t\t\timpl.update(scrollTask(popoutRef)),\r\n\t\t\timpl.subscriptions,\r\n\t\t\tdebugRenderer(moduleName, document.body, popoutRef, impl.view, impl.viewIn, impl.viewOut)\r\n\t\t);\r\n\t};\r\n\r\n\tobject['embed'] = function fullscreen(node, flags)\r\n\t{\r\n\t\tvar popoutRef = { doc: undefined };\r\n\t\treturn _elm_lang$core$Native_Platform.initialize(\r\n\t\t\tflagChecker(impl.init, flags, node),\r\n\t\t\timpl.update(scrollTask(popoutRef)),\r\n\t\t\timpl.subscriptions,\r\n\t\t\tdebugRenderer(moduleName, node, popoutRef, impl.view, impl.viewIn, impl.viewOut)\r\n\t\t);\r\n\t};\r\n}\r\n\r\nfunction scrollTask(popoutRef)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\tvar doc = popoutRef.doc;\r\n\t\tif (doc)\r\n\t\t{\r\n\t\t\tvar msgs = doc.getElementsByClassName('debugger-sidebar-messages')[0];\r\n\t\t\tif (msgs)\r\n\t\t\t{\r\n\t\t\t\tmsgs.scrollTop = msgs.scrollHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t});\r\n}\r\n\r\n\r\nfunction debugRenderer(moduleName, parentNode, popoutRef, view, viewIn, viewOut)\r\n{\r\n\treturn function(tagger, initialModel)\r\n\t{\r\n\t\tvar appEventNode = { tagger: tagger, parent: undefined };\r\n\t\tvar eventNode = { tagger: tagger, parent: undefined };\r\n\r\n\t\t// make normal stepper\r\n\t\tvar appVirtualNode = view(initialModel);\r\n\t\tvar appNode = render(appVirtualNode, appEventNode);\r\n\t\tparentNode.appendChild(appNode);\r\n\t\tvar appStepper = makeStepper(appNode, view, appVirtualNode, appEventNode);\r\n\r\n\t\t// make overlay stepper\r\n\t\tvar overVirtualNode = viewIn(initialModel)._1;\r\n\t\tvar overNode = render(overVirtualNode, eventNode);\r\n\t\tparentNode.appendChild(overNode);\r\n\t\tvar wrappedViewIn = wrapViewIn(appEventNode, overNode, viewIn);\r\n\t\tvar overStepper = makeStepper(overNode, wrappedViewIn, overVirtualNode, eventNode);\r\n\r\n\t\t// make debugger stepper\r\n\t\tvar debugStepper = makeDebugStepper(initialModel, viewOut, eventNode, parentNode, moduleName, popoutRef);\r\n\r\n\t\treturn function stepper(model)\r\n\t\t{\r\n\t\t\tappStepper(model);\r\n\t\t\toverStepper(model);\r\n\t\t\tdebugStepper(model);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction makeDebugStepper(initialModel, view, eventNode, parentNode, moduleName, popoutRef)\r\n{\r\n\tvar curr;\r\n\tvar domNode;\r\n\r\n\treturn function stepper(model)\r\n\t{\r\n\t\tif (!model.isDebuggerOpen)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!popoutRef.doc)\r\n\t\t{\r\n\t\t\tcurr = view(model);\r\n\t\t\tdomNode = openDebugWindow(moduleName, popoutRef, curr, eventNode);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// switch to document of popout\r\n\t\tlocalDoc = popoutRef.doc;\r\n\r\n\t\tvar next = view(model);\r\n\t\tvar patches = diff(curr, next);\r\n\t\tdomNode = applyPatches(domNode, curr, patches, eventNode);\r\n\t\tcurr = next;\r\n\r\n\t\t// switch back to normal document\r\n\t\tlocalDoc = document;\r\n\t};\r\n}\r\n\r\nfunction openDebugWindow(moduleName, popoutRef, virtualNode, eventNode)\r\n{\r\n\tvar w = 900;\r\n\tvar h = 360;\r\n\tvar x = screen.width - w;\r\n\tvar y = screen.height - h;\r\n\tvar debugWindow = window.open('', '', 'width=' + w + ',height=' + h + ',left=' + x + ',top=' + y);\r\n\r\n\t// switch to window document\r\n\tlocalDoc = debugWindow.document;\r\n\r\n\tpopoutRef.doc = localDoc;\r\n\tlocalDoc.title = 'Debugger - ' + moduleName;\r\n\tlocalDoc.body.style.margin = '0';\r\n\tlocalDoc.body.style.padding = '0';\r\n\tvar domNode = render(virtualNode, eventNode);\r\n\tlocalDoc.body.appendChild(domNode);\r\n\r\n\tlocalDoc.addEventListener('keydown', function(event) {\r\n\t\tif (event.metaKey && event.which === 82)\r\n\t\t{\r\n\t\t\twindow.location.reload();\r\n\t\t}\r\n\t\tif (event.which === 38)\r\n\t\t{\r\n\t\t\teventNode.tagger({ ctor: 'Up' });\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.which === 40)\r\n\t\t{\r\n\t\t\teventNode.tagger({ ctor: 'Down' });\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t});\r\n\r\n\tfunction close()\r\n\t{\r\n\t\tpopoutRef.doc = undefined;\r\n\t\tdebugWindow.close();\r\n\t}\r\n\twindow.addEventListener('unload', close);\r\n\tdebugWindow.addEventListener('unload', function() {\r\n\t\tpopoutRef.doc = undefined;\r\n\t\twindow.removeEventListener('unload', close);\r\n\t\teventNode.tagger({ ctor: 'Close' });\r\n\t});\r\n\r\n\t// switch back to the normal document\r\n\tlocalDoc = document;\r\n\r\n\treturn domNode;\r\n}\r\n\r\n\r\n// BLOCK EVENTS\r\n\r\nfunction wrapViewIn(appEventNode, overlayNode, viewIn)\r\n{\r\n\tvar ignorer = makeIgnorer(overlayNode);\r\n\tvar blocking = 'Normal';\r\n\tvar overflow;\r\n\r\n\tvar normalTagger = appEventNode.tagger;\r\n\tvar blockTagger = function() {};\r\n\r\n\treturn function(model)\r\n\t{\r\n\t\tvar tuple = viewIn(model);\r\n\t\tvar newBlocking = tuple._0.ctor;\r\n\t\tappEventNode.tagger = newBlocking === 'Normal' ? normalTagger : blockTagger;\r\n\t\tif (blocking !== newBlocking)\r\n\t\t{\r\n\t\t\ttraverse('removeEventListener', ignorer, blocking);\r\n\t\t\ttraverse('addEventListener', ignorer, newBlocking);\r\n\r\n\t\t\tif (blocking === 'Normal')\r\n\t\t\t{\r\n\t\t\t\toverflow = document.body.style.overflow;\r\n\t\t\t\tdocument.body.style.overflow = 'hidden';\r\n\t\t\t}\r\n\r\n\t\t\tif (newBlocking === 'Normal')\r\n\t\t\t{\r\n\t\t\t\tdocument.body.style.overflow = overflow;\r\n\t\t\t}\r\n\r\n\t\t\tblocking = newBlocking;\r\n\t\t}\r\n\t\treturn tuple._1;\r\n\t}\r\n}\r\n\r\nfunction traverse(verbEventListener, ignorer, blocking)\r\n{\r\n\tswitch(blocking)\r\n\t{\r\n\t\tcase 'Normal':\r\n\t\t\treturn;\r\n\r\n\t\tcase 'Pause':\r\n\t\t\treturn traverseHelp(verbEventListener, ignorer, mostEvents);\r\n\r\n\t\tcase 'Message':\r\n\t\t\treturn traverseHelp(verbEventListener, ignorer, allEvents);\r\n\t}\r\n}\r\n\r\nfunction traverseHelp(verbEventListener, handler, eventNames)\r\n{\r\n\tfor (var i = 0; i < eventNames.length; i++)\r\n\t{\r\n\t\tdocument.body[verbEventListener](eventNames[i], handler, true);\r\n\t}\r\n}\r\n\r\nfunction makeIgnorer(overlayNode)\r\n{\r\n\treturn function(event)\r\n\t{\r\n\t\tif (event.type === 'keydown' && event.metaKey && event.which === 82)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar isScroll = event.type === 'scroll' || event.type === 'wheel';\r\n\r\n\t\tvar node = event.target;\r\n\t\twhile (node !== null)\r\n\t\t{\r\n\t\t\tif (node.className === 'elm-overlay-message-details' && isScroll)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (node === overlayNode && !isScroll)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tnode = node.parentNode;\r\n\t\t}\r\n\r\n\t\tevent.stopPropagation();\r\n\t\tevent.preventDefault();\r\n\t}\r\n}\r\n\r\nvar mostEvents = [\r\n\t'click', 'dblclick', 'mousemove',\r\n\t'mouseup', 'mousedown', 'mouseenter', 'mouseleave',\r\n\t'touchstart', 'touchend', 'touchcancel', 'touchmove',\r\n\t'pointerdown', 'pointerup', 'pointerover', 'pointerout',\r\n\t'pointerenter', 'pointerleave', 'pointermove', 'pointercancel',\r\n\t'dragstart', 'drag', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop',\r\n\t'keyup', 'keydown', 'keypress',\r\n\t'input', 'change',\r\n\t'focus', 'blur'\r\n];\r\n\r\nvar allEvents = mostEvents.concat('wheel', 'scroll');\r\n\r\n\r\nreturn {\r\n\tnode: node,\r\n\ttext: text,\r\n\tcustom: custom,\r\n\tmap: F2(map),\r\n\r\n\ton: F3(on),\r\n\tstyle: style,\r\n\tproperty: F2(property),\r\n\tattribute: F2(attribute),\r\n\tattributeNS: F3(attributeNS),\r\n\tmapProperty: F2(mapProperty),\r\n\r\n\tlazy: F2(lazy),\r\n\tlazy2: F3(lazy2),\r\n\tlazy3: F4(lazy3),\r\n\tkeyedNode: F3(keyedNode),\r\n\r\n\tprogram: program,\r\n\tprogramWithFlags: programWithFlags,\r\n\tstaticProgram: staticProgram\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$virtual_dom$Native_Debug = function() {\r\n\r\n\r\n// IMPORT / EXPORT\r\n\r\nfunction unsafeCoerce(value)\r\n{\r\n\treturn value;\r\n}\r\n\r\nvar upload = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n{\r\n\tvar element = document.createElement('input');\r\n\telement.setAttribute('type', 'file');\r\n\telement.setAttribute('accept', 'text/json');\r\n\telement.style.display = 'none';\r\n\telement.addEventListener('change', function(event)\r\n\t{\r\n\t\tvar fileReader = new FileReader();\r\n\t\tfileReader.onload = function(e)\r\n\t\t{\r\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(e.target.result));\r\n\t\t};\r\n\t\tfileReader.readAsText(event.target.files[0]);\r\n\t\tdocument.body.removeChild(element);\r\n\t});\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n});\r\n\r\nfunction download(historyLength, json)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\tvar fileName = 'history-' + historyLength + '.txt';\r\n\t\tvar jsonString = JSON.stringify(json);\r\n\t\tvar mime = 'text/plain;charset=utf-8';\r\n\t\tvar done = _elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0);\r\n\r\n\t\t// for IE10+\r\n\t\tif (navigator.msSaveBlob)\r\n\t\t{\r\n\t\t\tnavigator.msSaveBlob(new Blob([jsonString], {type: mime}), fileName);\r\n\t\t\treturn callback(done);\r\n\t\t}\r\n\r\n\t\t// for HTML5\r\n\t\tvar element = document.createElement('a');\r\n\t\telement.setAttribute('href', 'data:' + mime + ',' + encodeURIComponent(jsonString));\r\n\t\telement.setAttribute('download', fileName);\r\n\t\telement.style.display = 'none';\r\n\t\tdocument.body.appendChild(element);\r\n\t\telement.click();\r\n\t\tdocument.body.removeChild(element);\r\n\t\tcallback(done);\r\n\t});\r\n}\r\n\r\n\r\n// POPOUT\r\n\r\nfunction messageToString(value)\r\n{\r\n\tswitch (typeof value)\r\n\t{\r\n\t\tcase 'boolean':\r\n\t\t\treturn value ? 'True' : 'False';\r\n\t\tcase 'number':\r\n\t\t\treturn value + '';\r\n\t\tcase 'string':\r\n\t\t\treturn '\"' + addSlashes(value, false) + '\"';\r\n\t}\r\n\tif (value instanceof String)\r\n\t{\r\n\t\treturn '\\'' + addSlashes(value, true) + '\\'';\r\n\t}\r\n\tif (typeof value !== 'object' || value === null || !('ctor' in value))\r\n\t{\r\n\t\treturn '…';\r\n\t}\r\n\r\n\tvar ctorStarter = value.ctor.substring(0, 5);\r\n\tif (ctorStarter === '_Tupl' || ctorStarter === '_Task')\r\n\t{\r\n\t\treturn '…'\r\n\t}\r\n\tif (['_Array', '<decoder>', '_Process', '::', '[]', 'Set_elm_builtin', 'RBNode_elm_builtin', 'RBEmpty_elm_builtin'].indexOf(value.ctor) >= 0)\r\n\t{\r\n\t\treturn '…';\r\n\t}\r\n\r\n\tvar keys = Object.keys(value);\r\n\tswitch (keys.length)\r\n\t{\r\n\t\tcase 1:\r\n\t\t\treturn value.ctor;\r\n\t\tcase 2:\r\n\t\t\treturn value.ctor + ' ' + messageToString(value._0);\r\n\t\tdefault:\r\n\t\t\treturn value.ctor + ' … ' + messageToString(value[keys[keys.length - 1]]);\r\n\t}\r\n}\r\n\r\n\r\nfunction primitive(str)\r\n{\r\n\treturn { ctor: 'Primitive', _0: str };\r\n}\r\n\r\n\r\nfunction init(value)\r\n{\r\n\tvar type = typeof value;\r\n\r\n\tif (type === 'boolean')\r\n\t{\r\n\t\treturn {\r\n\t\t\tctor: 'Constructor',\r\n\t\t\t_0: _elm_lang$core$Maybe$Just(value ? 'True' : 'False'),\r\n\t\t\t_1: true,\r\n\t\t\t_2: _elm_lang$core$Native_List.Nil\r\n\t\t};\r\n\t}\r\n\r\n\tif (type === 'number')\r\n\t{\r\n\t\treturn primitive(value + '');\r\n\t}\r\n\r\n\tif (type === 'string')\r\n\t{\r\n\t\treturn { ctor: 'S', _0: '\"' + addSlashes(value, false) + '\"' };\r\n\t}\r\n\r\n\tif (value instanceof String)\r\n\t{\r\n\t\treturn { ctor: 'S', _0: \"'\" + addSlashes(value, true) + \"'\" };\r\n\t}\r\n\r\n\tif (value instanceof Date)\r\n\t{\r\n\t\treturn primitive('<' + value.toString() + '>');\r\n\t}\r\n\r\n\tif (value === null)\r\n\t{\r\n\t\treturn primitive('XXX');\r\n\t}\r\n\r\n\tif (type === 'object' && 'ctor' in value)\r\n\t{\r\n\t\tvar ctor = value.ctor;\r\n\r\n\t\tif (ctor === '::' || ctor === '[]')\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tctor: 'Sequence',\r\n\t\t\t\t_0: {ctor: 'ListSeq'},\r\n\t\t\t\t_1: true,\r\n\t\t\t\t_2: A2(_elm_lang$core$List$map, init, value)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (ctor === 'Set_elm_builtin')\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tctor: 'Sequence',\r\n\t\t\t\t_0: {ctor: 'SetSeq'},\r\n\t\t\t\t_1: true,\r\n\t\t\t\t_2: A3(_elm_lang$core$Set$foldr, initCons, _elm_lang$core$Native_List.Nil, value)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (ctor === 'RBNode_elm_builtin' || ctor == 'RBEmpty_elm_builtin')\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tctor: 'Dictionary',\r\n\t\t\t\t_0: true,\r\n\t\t\t\t_1: A3(_elm_lang$core$Dict$foldr, initKeyValueCons, _elm_lang$core$Native_List.Nil, value)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Array')\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tctor: 'Sequence',\r\n\t\t\t\t_0: {ctor: 'ArraySeq'},\r\n\t\t\t\t_1: true,\r\n\t\t\t\t_2: A3(_elm_lang$core$Array$foldr, initCons, _elm_lang$core$Native_List.Nil, value)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar ctorStarter = value.ctor.substring(0, 5);\r\n\t\tif (ctorStarter === '_Task')\r\n\t\t{\r\n\t\t\treturn primitive('<task>');\r\n\t\t}\r\n\r\n\t\tif (ctor === '<decoder>')\r\n\t\t{\r\n\t\t\treturn primitive(ctor);\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Process')\r\n\t\t{\r\n\t\t\treturn primitive('<process>');\r\n\t\t}\r\n\r\n\t\tvar list = _elm_lang$core$Native_List.Nil;\r\n\t\tfor (var i in value)\r\n\t\t{\r\n\t\t\tif (i === 'ctor') continue;\r\n\t\t\tlist = _elm_lang$core$Native_List.Cons(init(value[i]), list);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tctor: 'Constructor',\r\n\t\t\t_0: ctorStarter === '_Tupl' ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(ctor),\r\n\t\t\t_1: true,\r\n\t\t\t_2: _elm_lang$core$List$reverse(list)\r\n\t\t};\r\n\t}\r\n\r\n\tif (type === 'object')\r\n\t{\r\n\t\tvar dict = _elm_lang$core$Dict$empty;\r\n\t\tfor (var i in value)\r\n\t\t{\r\n\t\t\tdict = A3(_elm_lang$core$Dict$insert, i, init(value[i]), dict);\r\n\t\t}\r\n\t\treturn { ctor: 'Record', _0: true, _1: dict };\r\n\t}\r\n\r\n\treturn primitive('XXX');\r\n}\r\n\r\nvar initCons = F2(initConsHelp);\r\n\r\nfunction initConsHelp(value, list)\r\n{\r\n\treturn _elm_lang$core$Native_List.Cons(init(value), list);\r\n}\r\n\r\nvar initKeyValueCons = F3(initKeyValueConsHelp);\r\n\r\nfunction initKeyValueConsHelp(key, value, list)\r\n{\r\n\treturn _elm_lang$core$Native_List.Cons(\r\n\t\t_elm_lang$core$Native_Utils.Tuple2(init(key), init(value)),\r\n\t\tlist\r\n\t);\r\n}\r\n\r\nfunction addSlashes(str, isChar)\r\n{\r\n\tvar s = str.replace(/\\\\/g, '\\\\\\\\')\r\n\t\t\t  .replace(/\\n/g, '\\\\n')\r\n\t\t\t  .replace(/\\t/g, '\\\\t')\r\n\t\t\t  .replace(/\\r/g, '\\\\r')\r\n\t\t\t  .replace(/\\v/g, '\\\\v')\r\n\t\t\t  .replace(/\\0/g, '\\\\0');\r\n\tif (isChar)\r\n\t{\r\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\r\n\t}\r\n}\r\n\r\n\r\nreturn {\r\n\tupload: upload,\r\n\tdownload: F2(download),\r\n\tunsafeCoerce: unsafeCoerce,\r\n\tmessageToString: messageToString,\r\n\tinit: init\r\n}\r\n\r\n}();\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$defaultOptions = {stopPropagation: false, preventDefault: false};\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$on = F2(\r\n\tfunction (eventName, decoder) {\r\n\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_Helpers$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom_Helpers$defaultOptions, decoder);\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$onClick = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$on,\r\n\t\t'click',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$style = _elm_lang$virtual_dom$Native_VirtualDom.style;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$id = _elm_lang$virtual_dom$VirtualDom_Helpers$attribute('id');\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$property = _elm_lang$virtual_dom$Native_VirtualDom.property;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$class = function (name) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$property,\r\n\t\t'className',\r\n\t\t_elm_lang$core$Json_Encode$string(name));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$href = function (name) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$property,\r\n\t\t'href',\r\n\t\t_elm_lang$core$Json_Encode$string(name));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$map = _elm_lang$virtual_dom$Native_VirtualDom.map;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$text = _elm_lang$virtual_dom$Native_VirtualDom.text;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$node = _elm_lang$virtual_dom$Native_VirtualDom.node;\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$div = _elm_lang$virtual_dom$VirtualDom_Helpers$node('div');\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$span = _elm_lang$virtual_dom$VirtualDom_Helpers$node('span');\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$a = _elm_lang$virtual_dom$VirtualDom_Helpers$node('a');\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$h1 = _elm_lang$virtual_dom$VirtualDom_Helpers$node('h1');\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$Options = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {stopPropagation: a, preventDefault: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$Node = {ctor: 'Node'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Helpers$Property = {ctor: 'Property'};\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$purple = _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: {ctor: '_Tuple2', _0: 'color', _1: 'rgb(136, 19, 145)'},\r\n\t\t_1: {ctor: '[]'}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$blue = _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: {ctor: '_Tuple2', _0: 'color', _1: 'rgb(28, 0, 207)'},\r\n\t\t_1: {ctor: '[]'}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$red = _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: {ctor: '_Tuple2', _0: 'color', _1: 'rgb(196, 26, 22)'},\r\n\t\t_1: {ctor: '[]'}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$leftPad = function (maybeKey) {\r\n\tvar _p0 = maybeKey;\r\n\tif (_p0.ctor === 'Nothing') {\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t\t\t{ctor: '[]'});\r\n\t} else {\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '4ch'},\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t});\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow = function (arrow) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'color', _1: '#777'},\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '2ch'},\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'width', _1: '2ch'},\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(arrow),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$lineStarter = F3(\r\n\tfunction (maybeKey, maybeIsClosed, description) {\r\n\t\tvar arrow = function () {\r\n\t\t\tvar _p1 = maybeIsClosed;\r\n\t\t\tif (_p1.ctor === 'Nothing') {\r\n\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow('');\r\n\t\t\t} else {\r\n\t\t\t\tif (_p1._0 === true) {\r\n\t\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow('▸');\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow('▾');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}();\r\n\t\tvar _p2 = maybeKey;\r\n\t\tif (_p2.ctor === 'Nothing') {\r\n\t\t\treturn {ctor: '::', _0: arrow, _1: description};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: arrow,\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$purple,\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p2._0),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' = '),\r\n\t\t\t\t\t\t_1: description\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTinyRecord = F3(\r\n\tfunction (length, starter, entries) {\r\n\t\tvar _p3 = entries;\r\n\t\tif (_p3.ctor === '[]') {\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: length + 1,\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('}'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tvar _p5 = _p3._0;\r\n\t\t\tvar nextLength = (length + _elm_lang$core$String$length(_p5)) + 1;\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(nextLength, 18) > 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: length + 2,\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('…}'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tvar _p4 = A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTinyRecord, nextLength, ',', _p3._1);\r\n\t\t\t\tvar finalLength = _p4._0;\r\n\t\t\t\tvar otherNodes = _p4._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: finalLength,\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$purple,\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p5),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t_1: otherNodes\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$elideMiddle = function (str) {\r\n\treturn (_elm_lang$core$Native_Utils.cmp(\r\n\t\t_elm_lang$core$String$length(str),\r\n\t\t18) < 1) ? str : A2(\r\n\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\tA2(_elm_lang$core$String$left, 8, str),\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t'...',\r\n\t\t\tA2(_elm_lang$core$String$right, 8, str)));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp = function (str) {\r\n\treturn {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: _elm_lang$core$String$length(str),\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(str),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t}\r\n\t};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$updateIndex = F3(\r\n\tfunction (n, func, list) {\r\n\t\tvar _p6 = list;\r\n\t\tif (_p6.ctor === '[]') {\r\n\t\t\treturn {ctor: '[]'};\r\n\t\t} else {\r\n\t\t\tvar _p8 = _p6._1;\r\n\t\t\tvar _p7 = _p6._0;\r\n\t\t\treturn (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) ? {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: func(_p7),\r\n\t\t\t\t_1: _p8\r\n\t\t\t} : {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _p7,\r\n\t\t\t\t_1: A3(_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex, n - 1, func, _p8)\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$seqTypeToString = F2(\r\n\tfunction (n, seqType) {\r\n\t\tvar _p9 = seqType;\r\n\t\tswitch (_p9.ctor) {\r\n\t\t\tcase 'ListSeq':\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t'List(',\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(n),\r\n\t\t\t\t\t\t')'));\r\n\t\t\tcase 'SetSeq':\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t'Set(',\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(n),\r\n\t\t\t\t\t\t')'));\r\n\t\t\tdefault:\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t'Array(',\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(n),\r\n\t\t\t\t\t\t')'));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewTiny = function (value) {\r\n\tvar _p10 = value;\r\n\tswitch (_p10.ctor) {\r\n\t\tcase 'S':\r\n\t\t\tvar str = _elm_lang$virtual_dom$VirtualDom_Expando$elideMiddle(_p10._0);\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: _elm_lang$core$String$length(str),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$red,\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(str),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tcase 'Primitive':\r\n\t\t\tvar _p11 = _p10._0;\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: _elm_lang$core$String$length(_p11),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$blue,\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p11),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tcase 'Sequence':\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$seqTypeToString,\r\n\t\t\t\t\t_elm_lang$core$List$length(_p10._2),\r\n\t\t\t\t\t_p10._0));\r\n\t\tcase 'Dictionary':\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t'Dict(',\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(\r\n\t\t\t\t\t\t\t_elm_lang$core$List$length(_p10._1)),\r\n\t\t\t\t\t\t')')));\r\n\t\tcase 'Record':\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecord(_p10._1);\r\n\t\tdefault:\r\n\t\t\tif (_p10._2.ctor === '[]') {\r\n\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(\r\n\t\t\t\t\tA2(_elm_lang$core$Maybe$withDefault, 'Unit', _p10._0));\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tvar _p12 = _p10._0;\r\n\t\t\t\t\t\tif (_p12.ctor === 'Nothing') {\r\n\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t'Tuple(',\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$core$List$length(_p10._2)),\r\n\t\t\t\t\t\t\t\t\t')'));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn A2(_elm_lang$core$Basics_ops['++'], _p12._0, ' …');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}());\r\n\t\t\t}\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecord = function (record) {\r\n\treturn _elm_lang$core$Dict$isEmpty(record) ? {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: 2,\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('{}'),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t}\r\n\t} : A3(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecordHelp,\r\n\t\t0,\r\n\t\t'{ ',\r\n\t\t_elm_lang$core$Dict$toList(record));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecordHelp = F3(\r\n\tfunction (length, starter, entries) {\r\n\t\tvar _p13 = entries;\r\n\t\tif (_p13.ctor === '[]') {\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: length + 2,\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' }'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tvar _p16 = _p13._0._0;\r\n\t\t\tvar _p14 = _elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTiny(_p13._0._1);\r\n\t\t\tvar valueLen = _p14._0;\r\n\t\t\tvar valueNodes = _p14._1;\r\n\t\t\tvar fieldLen = _elm_lang$core$String$length(_p16);\r\n\t\t\tvar newLength = ((length + fieldLen) + valueLen) + 5;\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(newLength, 60) > 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: length + 4,\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', … }'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tvar _p15 = A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecordHelp, newLength, ', ', _p13._1);\r\n\t\t\t\tvar finalLength = _p15._0;\r\n\t\t\t\tvar otherNodes = _p15._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: finalLength,\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$purple,\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p16),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' = '),\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t\tvalueNodes),\r\n\t\t\t\t\t\t\t\t\t_1: otherNodes\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTiny = function (value) {\r\n\tvar _p17 = value;\r\n\tif (_p17.ctor === 'Record') {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTinyRecord,\r\n\t\t\t0,\r\n\t\t\t'{',\r\n\t\t\t_elm_lang$core$Dict$keys(_p17._1));\r\n\t} else {\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom_Expando$viewTiny(value);\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Constructor = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {ctor: 'Constructor', _0: a, _1: b, _2: c};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Record = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Record', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Dictionary = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Dictionary', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Sequence = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {ctor: 'Sequence', _0: a, _1: b, _2: c};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$initHelp = F2(\r\n\tfunction (isOuter, expando) {\r\n\t\tvar _p18 = expando;\r\n\t\tswitch (_p18.ctor) {\r\n\t\t\tcase 'S':\r\n\t\t\t\treturn expando;\r\n\t\t\tcase 'Primitive':\r\n\t\t\t\treturn expando;\r\n\t\t\tcase 'Sequence':\r\n\t\t\t\tvar _p20 = _p18._0;\r\n\t\t\t\tvar _p19 = _p18._2;\r\n\t\t\t\treturn isOuter ? A3(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Sequence,\r\n\t\t\t\t\t_p20,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$initHelp(false),\r\n\t\t\t\t\t\t_p19)) : ((_elm_lang$core$Native_Utils.cmp(\r\n\t\t\t\t\t_elm_lang$core$List$length(_p19),\r\n\t\t\t\t\t8) < 1) ? A3(_elm_lang$virtual_dom$VirtualDom_Expando$Sequence, _p20, false, _p19) : expando);\r\n\t\t\tcase 'Dictionary':\r\n\t\t\t\tvar _p23 = _p18._1;\r\n\t\t\t\treturn isOuter ? A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t\tfunction (_p21) {\r\n\t\t\t\t\t\t\tvar _p22 = _p21;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _p22._0,\r\n\t\t\t\t\t\t\t\t_1: A2(_elm_lang$virtual_dom$VirtualDom_Expando$initHelp, false, _p22._1)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t_p23)) : ((_elm_lang$core$Native_Utils.cmp(\r\n\t\t\t\t\t_elm_lang$core$List$length(_p23),\r\n\t\t\t\t\t8) < 1) ? A2(_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary, false, _p23) : expando);\r\n\t\t\tcase 'Record':\r\n\t\t\t\tvar _p25 = _p18._1;\r\n\t\t\t\treturn isOuter ? A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Record,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$map,\r\n\t\t\t\t\t\tF2(\r\n\t\t\t\t\t\t\tfunction (_p24, v) {\r\n\t\t\t\t\t\t\t\treturn A2(_elm_lang$virtual_dom$VirtualDom_Expando$initHelp, false, v);\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t_p25)) : ((_elm_lang$core$Native_Utils.cmp(\r\n\t\t\t\t\t_elm_lang$core$Dict$size(_p25),\r\n\t\t\t\t\t4) < 1) ? A2(_elm_lang$virtual_dom$VirtualDom_Expando$Record, false, _p25) : expando);\r\n\t\t\tdefault:\r\n\t\t\t\tvar _p27 = _p18._0;\r\n\t\t\t\tvar _p26 = _p18._2;\r\n\t\t\t\treturn isOuter ? A3(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Constructor,\r\n\t\t\t\t\t_p27,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$initHelp(false),\r\n\t\t\t\t\t\t_p26)) : ((_elm_lang$core$Native_Utils.cmp(\r\n\t\t\t\t\t_elm_lang$core$List$length(_p26),\r\n\t\t\t\t\t4) < 1) ? A3(_elm_lang$virtual_dom$VirtualDom_Expando$Constructor, _p27, false, _p26) : expando);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$init = function (value) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Expando$initHelp,\r\n\t\ttrue,\r\n\t\t_elm_lang$virtual_dom$Native_Debug.init(value));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp = F2(\r\n\tfunction (old, $new) {\r\n\t\tvar _p28 = {ctor: '_Tuple2', _0: old, _1: $new};\r\n\t\t_v12_6:\r\n\t\tdo {\r\n\t\t\tif (_p28.ctor === '_Tuple2') {\r\n\t\t\t\tswitch (_p28._1.ctor) {\r\n\t\t\t\t\tcase 'S':\r\n\t\t\t\t\t\treturn $new;\r\n\t\t\t\t\tcase 'Primitive':\r\n\t\t\t\t\t\treturn $new;\r\n\t\t\t\t\tcase 'Sequence':\r\n\t\t\t\t\t\tif (_p28._0.ctor === 'Sequence') {\r\n\t\t\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Sequence,\r\n\t\t\t\t\t\t\t\t_p28._1._0,\r\n\t\t\t\t\t\t\t\t_p28._0._1,\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp, _p28._0._2, _p28._1._2));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak _v12_6;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase 'Dictionary':\r\n\t\t\t\t\t\tif (_p28._0.ctor === 'Dictionary') {\r\n\t\t\t\t\t\t\treturn A2(_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary, _p28._0._0, _p28._1._1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak _v12_6;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase 'Record':\r\n\t\t\t\t\t\tif (_p28._0.ctor === 'Record') {\r\n\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Record,\r\n\t\t\t\t\t\t\t\t_p28._0._0,\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$map,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$mergeDictHelp(_p28._0._1),\r\n\t\t\t\t\t\t\t\t\t_p28._1._1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak _v12_6;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (_p28._0.ctor === 'Constructor') {\r\n\t\t\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Constructor,\r\n\t\t\t\t\t\t\t\t_p28._1._0,\r\n\t\t\t\t\t\t\t\t_p28._0._1,\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp, _p28._0._2, _p28._1._2));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak _v12_6;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak _v12_6;\r\n\t\t\t}\r\n\t\t} while(false);\r\n\t\treturn $new;\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$mergeDictHelp = F3(\r\n\tfunction (oldDict, key, value) {\r\n\t\tvar _p29 = A2(_elm_lang$core$Dict$get, key, oldDict);\r\n\t\tif (_p29.ctor === 'Nothing') {\r\n\t\t\treturn value;\r\n\t\t} else {\r\n\t\t\treturn A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp, _p29._0, value);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp = F2(\r\n\tfunction (olds, news) {\r\n\t\tvar _p30 = {ctor: '_Tuple2', _0: olds, _1: news};\r\n\t\tif (_p30._0.ctor === '[]') {\r\n\t\t\treturn news;\r\n\t\t} else {\r\n\t\t\tif (_p30._1.ctor === '[]') {\r\n\t\t\t\treturn news;\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp, _p30._0._0, _p30._1._0),\r\n\t\t\t\t\t_1: A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp, _p30._0._1, _p30._1._1)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$merge = F2(\r\n\tfunction (value, expando) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp,\r\n\t\t\texpando,\r\n\t\t\t_elm_lang$virtual_dom$Native_Debug.init(value));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$update = F2(\r\n\tfunction (msg, value) {\r\n\t\tvar _p31 = value;\r\n\t\tswitch (_p31.ctor) {\r\n\t\t\tcase 'S':\r\n\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstart: {line: 168, column: 3},\r\n\t\t\t\t\t\tend: {line: 235, column: 50}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t_p31)('No messages for primitives');\r\n\t\t\tcase 'Primitive':\r\n\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstart: {line: 168, column: 3},\r\n\t\t\t\t\t\tend: {line: 235, column: 50}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t_p31)('No messages for primitives');\r\n\t\t\tcase 'Sequence':\r\n\t\t\t\tvar _p39 = _p31._2;\r\n\t\t\t\tvar _p38 = _p31._0;\r\n\t\t\t\tvar _p37 = _p31._1;\r\n\t\t\t\tvar _p34 = msg;\r\n\t\t\t\tswitch (_p34.ctor) {\r\n\t\t\t\t\tcase 'Toggle':\r\n\t\t\t\t\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_Expando$Sequence, _p38, !_p37, _p39);\r\n\t\t\t\t\tcase 'Index':\r\n\t\t\t\t\t\tif (_p34._0.ctor === 'None') {\r\n\t\t\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Sequence,\r\n\t\t\t\t\t\t\t\t_p38,\r\n\t\t\t\t\t\t\t\t_p37,\r\n\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,\r\n\t\t\t\t\t\t\t\t\t_p34._1,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$update(_p34._2),\r\n\t\t\t\t\t\t\t\t\t_p39));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tstart: {line: 176, column: 7},\r\n\t\t\t\t\t\t\t\t\tend: {line: 188, column: 46}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t_p34)('No redirected indexes on sequences');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstart: {line: 176, column: 7},\r\n\t\t\t\t\t\t\t\tend: {line: 188, column: 46}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t_p34)('No field on sequences');\r\n\t\t\t\t}\r\n\t\t\tcase 'Dictionary':\r\n\t\t\t\tvar _p51 = _p31._1;\r\n\t\t\t\tvar _p50 = _p31._0;\r\n\t\t\t\tvar _p40 = msg;\r\n\t\t\t\tswitch (_p40.ctor) {\r\n\t\t\t\t\tcase 'Toggle':\r\n\t\t\t\t\t\treturn A2(_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary, !_p50, _p51);\r\n\t\t\t\t\tcase 'Index':\r\n\t\t\t\t\t\tvar _p48 = _p40._2;\r\n\t\t\t\t\t\tvar _p47 = _p40._1;\r\n\t\t\t\t\t\tvar _p41 = _p40._0;\r\n\t\t\t\t\t\tswitch (_p41.ctor) {\r\n\t\t\t\t\t\t\tcase 'None':\r\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tstart: {line: 196, column: 11},\r\n\t\t\t\t\t\t\t\t\t\tend: {line: 206, column: 81}\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t_p41)('must have redirect for dictionaries');\r\n\t\t\t\t\t\t\tcase 'Key':\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary,\r\n\t\t\t\t\t\t\t\t\t_p50,\r\n\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,\r\n\t\t\t\t\t\t\t\t\t\t_p47,\r\n\t\t\t\t\t\t\t\t\t\tfunction (_p43) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar _p44 = _p43;\r\n\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Expando$update, _p48, _p44._0),\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: _p44._1\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t_p51));\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary,\r\n\t\t\t\t\t\t\t\t\t_p50,\r\n\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,\r\n\t\t\t\t\t\t\t\t\t\t_p47,\r\n\t\t\t\t\t\t\t\t\t\tfunction (_p45) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar _p46 = _p45;\r\n\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p46._0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: A2(_elm_lang$virtual_dom$VirtualDom_Expando$update, _p48, _p46._1)\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t_p51));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstart: {line: 191, column: 7},\r\n\t\t\t\t\t\t\t\tend: {line: 209, column: 50}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t_p40)('no field for dictionaries');\r\n\t\t\t\t}\r\n\t\t\tcase 'Record':\r\n\t\t\t\tvar _p55 = _p31._1;\r\n\t\t\t\tvar _p54 = _p31._0;\r\n\t\t\t\tvar _p52 = msg;\r\n\t\t\t\tswitch (_p52.ctor) {\r\n\t\t\t\t\tcase 'Toggle':\r\n\t\t\t\t\t\treturn A2(_elm_lang$virtual_dom$VirtualDom_Expando$Record, !_p54, _p55);\r\n\t\t\t\t\tcase 'Index':\r\n\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstart: {line: 212, column: 7},\r\n\t\t\t\t\t\t\t\tend: {line: 220, column: 77}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t_p52)('No index for records');\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Record,\r\n\t\t\t\t\t\t\t_p54,\r\n\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\t\t\t\t\t\t_p52._0,\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$updateField(_p52._1),\r\n\t\t\t\t\t\t\t\t_p55));\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tvar _p61 = _p31._2;\r\n\t\t\t\tvar _p60 = _p31._0;\r\n\t\t\t\tvar _p59 = _p31._1;\r\n\t\t\t\tvar _p56 = msg;\r\n\t\t\t\tswitch (_p56.ctor) {\r\n\t\t\t\t\tcase 'Toggle':\r\n\t\t\t\t\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_Expando$Constructor, _p60, !_p59, _p61);\r\n\t\t\t\t\tcase 'Index':\r\n\t\t\t\t\t\tif (_p56._0.ctor === 'None') {\r\n\t\t\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Constructor,\r\n\t\t\t\t\t\t\t\t_p60,\r\n\t\t\t\t\t\t\t\t_p59,\r\n\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,\r\n\t\t\t\t\t\t\t\t\t_p56._1,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$update(_p56._2),\r\n\t\t\t\t\t\t\t\t\t_p61));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tstart: {line: 223, column: 7},\r\n\t\t\t\t\t\t\t\t\tend: {line: 235, column: 50}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t_p56)('No redirected indexes on sequences');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstart: {line: 223, column: 7},\r\n\t\t\t\t\t\t\t\tend: {line: 235, column: 50}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t_p56)('No field for constructors');\r\n\t\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$updateField = F2(\r\n\tfunction (msg, maybeExpando) {\r\n\t\tvar _p62 = maybeExpando;\r\n\t\tif (_p62.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t'VirtualDom.Expando',\r\n\t\t\t\t{\r\n\t\t\t\t\tstart: {line: 253, column: 3},\r\n\t\t\t\t\tend: {line: 258, column: 32}\r\n\t\t\t\t},\r\n\t\t\t\t_p62)('key does not exist');\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$update, msg, _p62._0));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Primitive = function (a) {\r\n\treturn {ctor: 'Primitive', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$S = function (a) {\r\n\treturn {ctor: 'S', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$ArraySeq = {ctor: 'ArraySeq'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$SetSeq = {ctor: 'SetSeq'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$ListSeq = {ctor: 'ListSeq'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Field = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Field', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Index = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {ctor: 'Index', _0: a, _1: b, _2: c};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Toggle = {ctor: 'Toggle'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Value = {ctor: 'Value'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$Key = {ctor: 'Key'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$None = {ctor: 'None'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorEntry = F2(\r\n\tfunction (index, value) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, index),\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$view,\r\n\t\t\t\t_elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t_elm_lang$core$Basics$toString(index)),\r\n\t\t\t\tvalue));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$view = F2(\r\n\tfunction (maybeKey, expando) {\r\n\t\tvar _p64 = expando;\r\n\t\tswitch (_p64.ctor) {\r\n\t\t\tcase 'S':\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,\r\n\t\t\t\t\t\tmaybeKey,\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Nothing,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$red,\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p64._0),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}));\r\n\t\t\tcase 'Primitive':\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,\r\n\t\t\t\t\t\tmaybeKey,\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Nothing,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$blue,\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p64._0),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}));\r\n\t\t\tcase 'Sequence':\r\n\t\t\t\treturn A4(_elm_lang$virtual_dom$VirtualDom_Expando$viewSequence, maybeKey, _p64._0, _p64._1, _p64._2);\r\n\t\t\tcase 'Dictionary':\r\n\t\t\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewDictionary, maybeKey, _p64._0, _p64._1);\r\n\t\t\tcase 'Record':\r\n\t\t\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewRecord, maybeKey, _p64._0, _p64._1);\r\n\t\t\tdefault:\r\n\t\t\t\treturn A4(_elm_lang$virtual_dom$VirtualDom_Expando$viewConstructor, maybeKey, _p64._0, _p64._1, _p64._2);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructor = F4(\r\n\tfunction (maybeKey, maybeName, isClosed, valueList) {\r\n\t\tvar _p65 = function () {\r\n\t\t\tvar _p66 = valueList;\r\n\t\t\tif (_p66.ctor === '[]') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Maybe$Nothing,\r\n\t\t\t\t\t_1: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t{ctor: '[]'})\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tif (_p66._1.ctor === '[]') {\r\n\t\t\t\t\tvar _p67 = _p66._0;\r\n\t\t\t\t\tswitch (_p67.ctor) {\r\n\t\t\t\t\t\tcase 'S':\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Maybe$Nothing,\r\n\t\t\t\t\t\t\t\t_1: A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'})\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcase 'Primitive':\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Maybe$Nothing,\r\n\t\t\t\t\t\t\t\t_1: A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'})\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcase 'Sequence':\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\t\t\t_1: isClosed ? A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'}) : A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewSequenceOpen(_p67._2))\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcase 'Dictionary':\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\t\t\t_1: isClosed ? A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'}) : A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryOpen(_p67._1))\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcase 'Record':\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\t\t\t_1: isClosed ? A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'}) : A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewRecordOpen(_p67._1))\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\t\t\t_1: isClosed ? A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'}) : A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorOpen(_p67._2))\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\t_1: isClosed ? A2(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t{ctor: '[]'}) : _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorOpen(valueList)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}();\r\n\t\tvar maybeIsClosed = _p65._0;\r\n\t\tvar openHtml = _p65._1;\r\n\t\tvar tinyArgs = A2(\r\n\t\t\t_elm_lang$core$List$map,\r\n\t\t\tfunction (_p68) {\r\n\t\t\t\treturn _elm_lang$core$Tuple$second(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTiny(_p68));\r\n\t\t\t},\r\n\t\t\tvalueList);\r\n\t\tvar description = function () {\r\n\t\t\tvar _p69 = {ctor: '_Tuple2', _0: maybeName, _1: tinyArgs};\r\n\t\t\tif (_p69._0.ctor === 'Nothing') {\r\n\t\t\t\tif (_p69._1.ctor === '[]') {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('()'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('( '),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t_p69._1._0),\r\n\t\t\t\t\t\t\t_1: A3(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t\t\t\t\t\tF2(\r\n\t\t\t\t\t\t\t\t\tfunction (args, rest) {\r\n\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', '),\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\targs),\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: rest\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' )'),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t_p69._1._1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (_p69._1.ctor === '[]') {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p69._0._0),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(\r\n\t\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], _p69._0._0, ' ')),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t_p69._1._0),\r\n\t\t\t\t\t\t\t_1: A3(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t\t\t\t\t\tF2(\r\n\t\t\t\t\t\t\t\t\tfunction (args, rest) {\r\n\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' '),\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\targs),\r\n\t\t\t\t\t\t\t\t\t\t\t\t_1: rest\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t_p69._1._1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}();\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA3(_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter, maybeKey, maybeIsClosed, description)),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: openHtml,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorOpen = function (valueList) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{ctor: '[]'},\r\n\t\tA2(_elm_lang$core$List$indexedMap, _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorEntry, valueList));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryOpen = function (keyValuePairs) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{ctor: '[]'},\r\n\t\tA2(_elm_lang$core$List$indexedMap, _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryEntry, keyValuePairs));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryEntry = F2(\r\n\tfunction (index, _p70) {\r\n\t\tvar _p71 = _p70;\r\n\t\tvar _p74 = _p71._1;\r\n\t\tvar _p73 = _p71._0;\r\n\t\tvar _p72 = _p73;\r\n\t\tswitch (_p72.ctor) {\r\n\t\t\tcase 'S':\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Value, index),\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$view,\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Just(_p72._0),\r\n\t\t\t\t\t\t_p74));\r\n\t\t\tcase 'Primitive':\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Value, index),\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$view,\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Just(_p72._0),\r\n\t\t\t\t\t\t_p74));\r\n\t\t\tdefault:\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Key, index),\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$view,\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just('key'),\r\n\t\t\t\t\t\t\t\t_p73)),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Value, index),\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$view,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just('value'),\r\n\t\t\t\t\t\t\t\t\t_p74)),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewRecordOpen = function (record) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{ctor: '[]'},\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$List$map,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewRecordEntry,\r\n\t\t\t_elm_lang$core$Dict$toList(record)));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewRecordEntry = function (_p75) {\r\n\tvar _p76 = _p75;\r\n\tvar _p77 = _p76._0;\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Expando$Field(_p77),\r\n\t\tA2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$view,\r\n\t\t\t_elm_lang$core$Maybe$Just(_p77),\r\n\t\t\t_p76._1));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewSequenceOpen = function (values) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{ctor: '[]'},\r\n\t\tA2(_elm_lang$core$List$indexedMap, _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorEntry, values));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionary = F3(\r\n\tfunction (maybeKey, isClosed, keyValuePairs) {\r\n\t\tvar starter = A2(\r\n\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t'Dict(',\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t_elm_lang$core$Basics$toString(\r\n\t\t\t\t\t_elm_lang$core$List$length(keyValuePairs)),\r\n\t\t\t\t')'));\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,\r\n\t\t\t\t\t\tmaybeKey,\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: isClosed ? _elm_lang$virtual_dom$VirtualDom_Helpers$text('') : _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryOpen(keyValuePairs),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewRecord = F3(\r\n\tfunction (maybeKey, isClosed, record) {\r\n\t\tvar _p78 = isClosed ? {\r\n\t\t\tctor: '_Tuple3',\r\n\t\t\t_0: _elm_lang$core$Tuple$second(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecord(record)),\r\n\t\t\t_1: _elm_lang$virtual_dom$VirtualDom_Helpers$text(''),\r\n\t\t\t_2: _elm_lang$virtual_dom$VirtualDom_Helpers$text('')\r\n\t\t} : {\r\n\t\t\tctor: '_Tuple3',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('{'),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t_1: _elm_lang$virtual_dom$VirtualDom_Expando$viewRecordOpen(record),\r\n\t\t\t_2: A2(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t\t\t{ctor: '_Tuple0'})),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('}'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t})\r\n\t\t};\r\n\t\tvar start = _p78._0;\r\n\t\tvar middle = _p78._1;\r\n\t\tvar end = _p78._2;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,\r\n\t\t\t\t\t\tmaybeKey,\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\tstart)),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: middle,\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: end,\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Expando$viewSequence = F4(\r\n\tfunction (maybeKey, seqType, isClosed, valueList) {\r\n\t\tvar starter = A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$seqTypeToString,\r\n\t\t\t_elm_lang$core$List$length(valueList),\r\n\t\t\tseqType);\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,\r\n\t\t\t\t\t\tmaybeKey,\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$Just(isClosed),\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: isClosed ? _elm_lang$virtual_dom$VirtualDom_Helpers$text('') : _elm_lang$virtual_dom$VirtualDom_Expando$viewSequenceOpen(valueList),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$some = function (list) {\r\n\treturn !_elm_lang$core$List$isEmpty(list);\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$TagChanges = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {removed: a, changed: b, added: c, argsMatch: d};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$emptyTagChanges = function (argsMatch) {\r\n\treturn A4(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Report$TagChanges,\r\n\t\t{ctor: '[]'},\r\n\t\t{ctor: '[]'},\r\n\t\t{ctor: '[]'},\r\n\t\targsMatch);\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$hasTagChanges = function (tagChanges) {\r\n\treturn _elm_lang$core$Native_Utils.eq(\r\n\t\ttagChanges,\r\n\t\tA4(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Report$TagChanges,\r\n\t\t\t{ctor: '[]'},\r\n\t\t\t{ctor: '[]'},\r\n\t\t\t{ctor: '[]'},\r\n\t\t\ttrue));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$SomethingChanged = function (a) {\r\n\treturn {ctor: 'SomethingChanged', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$MessageChanged = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'MessageChanged', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$VersionChanged = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'VersionChanged', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$CorruptHistory = {ctor: 'CorruptHistory'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$UnionChange = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'UnionChange', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$AliasChange = function (a) {\r\n\treturn {ctor: 'AliasChange', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$Fine = {ctor: 'Fine'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$Risky = {ctor: 'Risky'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$Impossible = {ctor: 'Impossible'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$worstCase = F2(\r\n\tfunction (status, statusList) {\r\n\t\tworstCase:\r\n\t\twhile (true) {\r\n\t\t\tvar _p0 = statusList;\r\n\t\t\tif (_p0.ctor === '[]') {\r\n\t\t\t\treturn status;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (_p0._0.ctor) {\r\n\t\t\t\t\tcase 'Impossible':\r\n\t\t\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Report$Impossible;\r\n\t\t\t\t\tcase 'Risky':\r\n\t\t\t\t\t\tvar _v1 = _elm_lang$virtual_dom$VirtualDom_Report$Risky,\r\n\t\t\t\t\t\t\t_v2 = _p0._1;\r\n\t\t\t\t\t\tstatus = _v1;\r\n\t\t\t\t\t\tstatusList = _v2;\r\n\t\t\t\t\t\tcontinue worstCase;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvar _v3 = status,\r\n\t\t\t\t\t\t\t_v4 = _p0._1;\r\n\t\t\t\t\t\tstatus = _v3;\r\n\t\t\t\t\t\tstatusList = _v4;\r\n\t\t\t\t\t\tcontinue worstCase;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$evaluateChange = function (change) {\r\n\tvar _p1 = change;\r\n\tif (_p1.ctor === 'AliasChange') {\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom_Report$Impossible;\r\n\t} else {\r\n\t\treturn ((!_p1._1.argsMatch) || (_elm_lang$virtual_dom$VirtualDom_Report$some(_p1._1.changed) || _elm_lang$virtual_dom$VirtualDom_Report$some(_p1._1.removed))) ? _elm_lang$virtual_dom$VirtualDom_Report$Impossible : (_elm_lang$virtual_dom$VirtualDom_Report$some(_p1._1.added) ? _elm_lang$virtual_dom$VirtualDom_Report$Risky : _elm_lang$virtual_dom$VirtualDom_Report$Fine);\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Report$evaluate = function (report) {\r\n\tvar _p2 = report;\r\n\tswitch (_p2.ctor) {\r\n\t\tcase 'CorruptHistory':\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Report$Impossible;\r\n\t\tcase 'VersionChanged':\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Report$Impossible;\r\n\t\tcase 'MessageChanged':\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Report$Impossible;\r\n\t\tdefault:\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Report$worstCase,\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Report$Fine,\r\n\t\t\t\tA2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Report$evaluateChange, _p2._0));\r\n\t}\r\n};\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict = F2(\r\n\tfunction (f, dict) {\r\n\t\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t\t_elm_lang$core$Dict$toList(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Dict$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (key, value) {\r\n\t\t\t\t\t\t\treturn f(value);\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\tdict)));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$encodeUnion = function (_p0) {\r\n\tvar _p1 = _p0;\r\n\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: 'args',\r\n\t\t\t\t_1: _elm_lang$core$Json_Encode$list(\r\n\t\t\t\t\tA2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, _p1.args))\r\n\t\t\t},\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'tags',\r\n\t\t\t\t\t_1: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict,\r\n\t\t\t\t\t\tfunction (_p2) {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Json_Encode$list(\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, _p2));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t_p1.tags)\r\n\t\t\t\t},\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$encodeAlias = function (_p3) {\r\n\tvar _p4 = _p3;\r\n\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: 'args',\r\n\t\t\t\t_1: _elm_lang$core$Json_Encode$list(\r\n\t\t\t\t\tA2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, _p4.args))\r\n\t\t\t},\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'type',\r\n\t\t\t\t\t_1: _elm_lang$core$Json_Encode$string(_p4.tipe)\r\n\t\t\t\t},\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$encodeTypes = function (_p5) {\r\n\tvar _p6 = _p5;\r\n\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: 'message',\r\n\t\t\t\t_1: _elm_lang$core$Json_Encode$string(_p6.message)\r\n\t\t\t},\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'aliases',\r\n\t\t\t\t\t_1: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict, _elm_lang$virtual_dom$VirtualDom_Metadata$encodeAlias, _p6.aliases)\r\n\t\t\t\t},\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: 'unions',\r\n\t\t\t\t\t\t_1: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict, _elm_lang$virtual_dom$VirtualDom_Metadata$encodeUnion, _p6.unions)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$encodeVersions = function (_p7) {\r\n\tvar _p8 = _p7;\r\n\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: 'elm',\r\n\t\t\t\t_1: _elm_lang$core$Json_Encode$string(_p8.elm)\r\n\t\t\t},\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$encode = function (_p9) {\r\n\tvar _p10 = _p9;\r\n\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: 'versions',\r\n\t\t\t\t_1: _elm_lang$virtual_dom$VirtualDom_Metadata$encodeVersions(_p10.versions)\r\n\t\t\t},\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'types',\r\n\t\t\t\t\t_1: _elm_lang$virtual_dom$VirtualDom_Metadata$encodeTypes(_p10.types)\r\n\t\t\t\t},\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$checkTag = F4(\r\n\tfunction (tag, old, $new, changes) {\r\n\t\treturn _elm_lang$core$Native_Utils.eq(old, $new) ? changes : _elm_lang$core$Native_Utils.update(\r\n\t\t\tchanges,\r\n\t\t\t{\r\n\t\t\t\tchanged: {ctor: '::', _0: tag, _1: changes.changed}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$addTag = F3(\r\n\tfunction (tag, _p11, changes) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchanges,\r\n\t\t\t{\r\n\t\t\t\tadded: {ctor: '::', _0: tag, _1: changes.added}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$removeTag = F3(\r\n\tfunction (tag, _p12, changes) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchanges,\r\n\t\t\t{\r\n\t\t\t\tremoved: {ctor: '::', _0: tag, _1: changes.removed}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$checkUnion = F4(\r\n\tfunction (name, old, $new, changes) {\r\n\t\tvar tagChanges = A6(\r\n\t\t\t_elm_lang$core$Dict$merge,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$removeTag,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$checkTag,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$addTag,\r\n\t\t\told.tags,\r\n\t\t\t$new.tags,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Report$emptyTagChanges(\r\n\t\t\t\t_elm_lang$core$Native_Utils.eq(old.args, $new.args)));\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom_Report$hasTagChanges(tagChanges) ? changes : {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Report$UnionChange, name, tagChanges),\r\n\t\t\t_1: changes\r\n\t\t};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$checkAlias = F4(\r\n\tfunction (name, old, $new, changes) {\r\n\t\treturn (_elm_lang$core$Native_Utils.eq(old.tipe, $new.tipe) && _elm_lang$core$Native_Utils.eq(old.args, $new.args)) ? changes : {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Report$AliasChange(name),\r\n\t\t\t_1: changes\r\n\t\t};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$ignore = F3(\r\n\tfunction (key, value, report) {\r\n\t\treturn report;\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$checkTypes = F2(\r\n\tfunction (old, $new) {\r\n\t\treturn (!_elm_lang$core$Native_Utils.eq(old.message, $new.message)) ? A2(_elm_lang$virtual_dom$VirtualDom_Report$MessageChanged, old.message, $new.message) : _elm_lang$virtual_dom$VirtualDom_Report$SomethingChanged(\r\n\t\t\tA6(\r\n\t\t\t\t_elm_lang$core$Dict$merge,\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$checkUnion,\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,\r\n\t\t\t\told.unions,\r\n\t\t\t\t$new.unions,\r\n\t\t\t\tA6(\r\n\t\t\t\t\t_elm_lang$core$Dict$merge,\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$checkAlias,\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,\r\n\t\t\t\t\told.aliases,\r\n\t\t\t\t\t$new.aliases,\r\n\t\t\t\t\t{ctor: '[]'})));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$check = F2(\r\n\tfunction (old, $new) {\r\n\t\treturn (!_elm_lang$core$Native_Utils.eq(old.versions.elm, $new.versions.elm)) ? A2(_elm_lang$virtual_dom$VirtualDom_Report$VersionChanged, old.versions.elm, $new.versions.elm) : A2(_elm_lang$virtual_dom$VirtualDom_Metadata$checkTypes, old.types, $new.types);\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$hasProblem = F2(\r\n\tfunction (tipe, _p13) {\r\n\t\tvar _p14 = _p13;\r\n\t\treturn A2(_elm_lang$core$String$contains, _p14._1, tipe) ? _elm_lang$core$Maybe$Just(_p14._0) : _elm_lang$core$Maybe$Nothing;\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Metadata = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {versions: a, types: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Versions = function (a) {\r\n\treturn {elm: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$decodeVersions = A2(\r\n\t_elm_lang$core$Json_Decode$map,\r\n\t_elm_lang$virtual_dom$VirtualDom_Metadata$Versions,\r\n\tA2(_elm_lang$core$Json_Decode$field, 'elm', _elm_lang$core$Json_Decode$string));\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Types = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {message: a, aliases: b, unions: c};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Alias = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {args: a, tipe: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$decodeAlias = A3(\r\n\t_elm_lang$core$Json_Decode$map2,\r\n\t_elm_lang$virtual_dom$VirtualDom_Metadata$Alias,\r\n\tA2(\r\n\t\t_elm_lang$core$Json_Decode$field,\r\n\t\t'args',\r\n\t\t_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string));\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Union = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {args: a, tags: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$decodeUnion = A3(\r\n\t_elm_lang$core$Json_Decode$map2,\r\n\t_elm_lang$virtual_dom$VirtualDom_Metadata$Union,\r\n\tA2(\r\n\t\t_elm_lang$core$Json_Decode$field,\r\n\t\t'args',\r\n\t\t_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)),\r\n\tA2(\r\n\t\t_elm_lang$core$Json_Decode$field,\r\n\t\t'tags',\r\n\t\t_elm_lang$core$Json_Decode$dict(\r\n\t\t\t_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))));\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$decodeTypes = A4(\r\n\t_elm_lang$core$Json_Decode$map3,\r\n\t_elm_lang$virtual_dom$VirtualDom_Metadata$Types,\r\n\tA2(_elm_lang$core$Json_Decode$field, 'message', _elm_lang$core$Json_Decode$string),\r\n\tA2(\r\n\t\t_elm_lang$core$Json_Decode$field,\r\n\t\t'aliases',\r\n\t\t_elm_lang$core$Json_Decode$dict(_elm_lang$virtual_dom$VirtualDom_Metadata$decodeAlias)),\r\n\tA2(\r\n\t\t_elm_lang$core$Json_Decode$field,\r\n\t\t'unions',\r\n\t\t_elm_lang$core$Json_Decode$dict(_elm_lang$virtual_dom$VirtualDom_Metadata$decodeUnion)));\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$decoder = A3(\r\n\t_elm_lang$core$Json_Decode$map2,\r\n\t_elm_lang$virtual_dom$VirtualDom_Metadata$Metadata,\r\n\tA2(_elm_lang$core$Json_Decode$field, 'versions', _elm_lang$virtual_dom$VirtualDom_Metadata$decodeVersions),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'types', _elm_lang$virtual_dom$VirtualDom_Metadata$decodeTypes));\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Error = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {message: a, problems: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$ProblemType = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {name: a, problems: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$VirtualDom = {ctor: 'VirtualDom'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Program = {ctor: 'Program'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Request = {ctor: 'Request'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Socket = {ctor: 'Socket'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Process = {ctor: 'Process'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Task = {ctor: 'Task'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Decoder = {ctor: 'Decoder'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$Function = {ctor: 'Function'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$problemTable = {\r\n\tctor: '::',\r\n\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Function, _1: '->'},\r\n\t_1: {\r\n\t\tctor: '::',\r\n\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Decoder, _1: 'Json.Decode.Decoder'},\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Task, _1: 'Task.Task'},\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Process, _1: 'Process.Id'},\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Socket, _1: 'WebSocket.LowLevel.WebSocket'},\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Request, _1: 'Http.Request'},\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Program, _1: 'Platform.Program'},\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$VirtualDom, _1: 'VirtualDom.Node'},\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$VirtualDom, _1: 'VirtualDom.Attribute'},\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$findProblems = function (tipe) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$List$filterMap,\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$hasProblem(tipe),\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$problemTable);\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$collectBadAliases = F3(\r\n\tfunction (name, _p15, list) {\r\n\t\tvar _p16 = _p15;\r\n\t\tvar _p17 = _elm_lang$virtual_dom$VirtualDom_Metadata$findProblems(_p16.tipe);\r\n\t\tif (_p17.ctor === '[]') {\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$ProblemType, name, _p17),\r\n\t\t\t\t_1: list\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$collectBadUnions = F3(\r\n\tfunction (name, _p18, list) {\r\n\t\tvar _p19 = _p18;\r\n\t\tvar _p20 = A2(\r\n\t\t\t_elm_lang$core$List$concatMap,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$findProblems,\r\n\t\t\t_elm_lang$core$List$concat(\r\n\t\t\t\t_elm_lang$core$Dict$values(_p19.tags)));\r\n\t\tif (_p20.ctor === '[]') {\r\n\t\t\treturn list;\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$ProblemType, name, _p20),\r\n\t\t\t\t_1: list\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$isPortable = function (_p21) {\r\n\tvar _p22 = _p21;\r\n\tvar _p24 = _p22.types;\r\n\tvar badAliases = A3(\r\n\t\t_elm_lang$core$Dict$foldl,\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Metadata$collectBadAliases,\r\n\t\t{ctor: '[]'},\r\n\t\t_p24.aliases);\r\n\tvar _p23 = A3(_elm_lang$core$Dict$foldl, _elm_lang$virtual_dom$VirtualDom_Metadata$collectBadUnions, badAliases, _p24.unions);\r\n\tif (_p23.ctor === '[]') {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Metadata$Error, _p24.message, _p23));\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Metadata$decode = function (value) {\r\n\tvar _p25 = A2(_elm_lang$core$Json_Decode$decodeValue, _elm_lang$virtual_dom$VirtualDom_Metadata$decoder, value);\r\n\tif (_p25.ctor === 'Err') {\r\n\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t'VirtualDom.Metadata',\r\n\t\t\t{\r\n\t\t\t\tstart: {line: 229, column: 3},\r\n\t\t\t\tend: {line: 239, column: 20}\r\n\t\t\t},\r\n\t\t\t_p25)('Compiler is generating bad metadata. Report this at <https://github.com/elm-lang/virtual-dom/issues>.');\r\n\t} else {\r\n\t\tvar _p28 = _p25._0;\r\n\t\tvar _p27 = _elm_lang$virtual_dom$VirtualDom_Metadata$isPortable(_p28);\r\n\t\tif (_p27.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Result$Ok(_p28);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p27._0);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_History$viewMessage = F3(\r\n\tfunction (currentIndex, index, msg) {\r\n\t\tvar messageName = _elm_lang$virtual_dom$Native_Debug.messageToString(msg);\r\n\t\tvar className = _elm_lang$core$Native_Utils.eq(currentIndex, index) ? 'messages-entry messages-entry-selected' : 'messages-entry';\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class(className),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$on,\r\n\t\t\t\t\t\t'click',\r\n\t\t\t\t\t\t_elm_lang$core$Json_Decode$succeed(index)),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('messages-entry-content'),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Helpers$attribute, 'title', messageName),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(messageName),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('messages-entry-index'),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(index)),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$consMsg = F3(\r\n\tfunction (currentIndex, msg, _p0) {\r\n\t\tvar _p1 = _p0;\r\n\t\tvar _p2 = _p1._0;\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _p2 - 1,\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A4(_elm_lang$virtual_dom$VirtualDom_Helpers$lazy3, _elm_lang$virtual_dom$VirtualDom_History$viewMessage, currentIndex, _p2, msg),\r\n\t\t\t\t_1: _p1._1\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$viewSnapshot = F3(\r\n\tfunction (currentIndex, index, _p3) {\r\n\t\tvar _p4 = _p3;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{ctor: '[]'},\r\n\t\t\t_elm_lang$core$Tuple$second(\r\n\t\t\t\tA3(\r\n\t\t\t\t\t_elm_lang$core$Array$foldl,\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$consMsg(currentIndex),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: index - 1,\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t_p4.messages)));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$undone = function (getResult) {\r\n\tvar _p5 = getResult;\r\n\tif (_p5.ctor === 'Done') {\r\n\t\treturn {ctor: '_Tuple2', _0: _p5._1, _1: _p5._0};\r\n\t} else {\r\n\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t'VirtualDom.History',\r\n\t\t\t{\r\n\t\t\t\tstart: {line: 195, column: 3},\r\n\t\t\t\tend: {line: 200, column: 39}\r\n\t\t\t},\r\n\t\t\t_p5)('Bug in History.get');\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_History$elmToJs = _elm_lang$virtual_dom$Native_Debug.unsafeCoerce;\r\nvar _elm_lang$virtual_dom$VirtualDom_History$encodeHelp = F2(\r\n\tfunction (snapshot, allMessages) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Array$foldl,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (elm, msgs) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_History$elmToJs(elm),\r\n\t\t\t\t\t\t_1: msgs\r\n\t\t\t\t\t};\r\n\t\t\t\t}),\r\n\t\t\tallMessages,\r\n\t\t\tsnapshot.messages);\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$encode = function (_p7) {\r\n\tvar _p8 = _p7;\r\n\tvar recentJson = A2(\r\n\t\t_elm_lang$core$List$map,\r\n\t\t_elm_lang$virtual_dom$VirtualDom_History$elmToJs,\r\n\t\t_elm_lang$core$List$reverse(_p8.recent.messages));\r\n\treturn _elm_lang$core$Json_Encode$list(\r\n\t\tA3(_elm_lang$core$Array$foldr, _elm_lang$virtual_dom$VirtualDom_History$encodeHelp, recentJson, _p8.snapshots));\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_History$jsToElm = _elm_lang$virtual_dom$Native_Debug.unsafeCoerce;\r\nvar _elm_lang$virtual_dom$VirtualDom_History$initialModel = function (_p9) {\r\n\tvar _p10 = _p9;\r\n\tvar _p11 = A2(_elm_lang$core$Array$get, 0, _p10.snapshots);\r\n\tif (_p11.ctor === 'Just') {\r\n\t\treturn _p11._0.model;\r\n\t} else {\r\n\t\treturn _p10.recent.model;\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_History$size = function (history) {\r\n\treturn history.numMessages;\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize = 64;\r\nvar _elm_lang$virtual_dom$VirtualDom_History$consSnapshot = F3(\r\n\tfunction (currentIndex, snapshot, _p12) {\r\n\t\tvar _p13 = _p12;\r\n\t\tvar _p14 = _p13._0;\r\n\t\tvar nextIndex = _p14 - _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize;\r\n\t\tvar currentIndexHelp = ((_elm_lang$core$Native_Utils.cmp(nextIndex, currentIndex) < 1) && (_elm_lang$core$Native_Utils.cmp(currentIndex, _p14) < 0)) ? currentIndex : -1;\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _p14 - _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize,\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A4(_elm_lang$virtual_dom$VirtualDom_Helpers$lazy3, _elm_lang$virtual_dom$VirtualDom_History$viewSnapshot, currentIndexHelp, _p14, snapshot),\r\n\t\t\t\t_1: _p13._1\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$viewSnapshots = F2(\r\n\tfunction (currentIndex, snapshots) {\r\n\t\tvar highIndex = _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize * _elm_lang$core$Array$length(snapshots);\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{ctor: '[]'},\r\n\t\t\t_elm_lang$core$Tuple$second(\r\n\t\t\t\tA3(\r\n\t\t\t\t\t_elm_lang$core$Array$foldr,\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$consSnapshot(currentIndex),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: highIndex,\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsnapshots)));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$view = F2(\r\n\tfunction (maybeIndex, _p15) {\r\n\t\tvar _p16 = _p15;\r\n\t\tvar _p17 = function () {\r\n\t\t\tvar _p18 = maybeIndex;\r\n\t\t\tif (_p18.ctor === 'Nothing') {\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: -1, _1: 'debugger-sidebar-messages'};\r\n\t\t\t} else {\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: _p18._0, _1: 'debugger-sidebar-messages-paused'};\r\n\t\t\t}\r\n\t\t}();\r\n\t\tvar index = _p17._0;\r\n\t\tvar className = _p17._1;\r\n\t\tvar oldStuff = A3(_elm_lang$virtual_dom$VirtualDom_Helpers$lazy2, _elm_lang$virtual_dom$VirtualDom_History$viewSnapshots, index, _p16.snapshots);\r\n\t\tvar newStuff = _elm_lang$core$Tuple$second(\r\n\t\t\tA3(\r\n\t\t\t\t_elm_lang$core$List$foldl,\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$consMsg(index),\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _p16.numMessages - 1,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\t_p16.recent.messages));\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class(className),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t{ctor: '::', _0: oldStuff, _1: newStuff});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$History = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {snapshots: a, recent: b, numMessages: c};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$RecentHistory = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {model: a, messages: b, numMessages: c};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$empty = function (model) {\r\n\treturn A3(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_History$History,\r\n\t\t_elm_lang$core$Array$empty,\r\n\t\tA3(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_History$RecentHistory,\r\n\t\t\tmodel,\r\n\t\t\t{ctor: '[]'},\r\n\t\t\t0),\r\n\t\t0);\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_History$Snapshot = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {model: a, messages: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$addRecent = F3(\r\n\tfunction (msg, newModel, _p19) {\r\n\t\tvar _p20 = _p19;\r\n\t\tvar _p23 = _p20.numMessages;\r\n\t\tvar _p22 = _p20.model;\r\n\t\tvar _p21 = _p20.messages;\r\n\t\treturn _elm_lang$core$Native_Utils.eq(_p23, _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize) ? {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$Snapshot,\r\n\t\t\t\t\t_p22,\r\n\t\t\t\t\t_elm_lang$core$Array$fromList(_p21))),\r\n\t\t\t_1: A3(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$RecentHistory,\r\n\t\t\t\tnewModel,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: msg,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\t1)\r\n\t\t} : {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _elm_lang$core$Maybe$Nothing,\r\n\t\t\t_1: A3(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$RecentHistory,\r\n\t\t\t\t_p22,\r\n\t\t\t\t{ctor: '::', _0: msg, _1: _p21},\r\n\t\t\t\t_p23 + 1)\r\n\t\t};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$add = F3(\r\n\tfunction (msg, model, _p24) {\r\n\t\tvar _p25 = _p24;\r\n\t\tvar _p28 = _p25.snapshots;\r\n\t\tvar _p27 = _p25.numMessages;\r\n\t\tvar _p26 = A3(_elm_lang$virtual_dom$VirtualDom_History$addRecent, msg, model, _p25.recent);\r\n\t\tif (_p26._0.ctor === 'Just') {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$History,\r\n\t\t\t\tA2(_elm_lang$core$Array$push, _p26._0._0, _p28),\r\n\t\t\t\t_p26._1,\r\n\t\t\t\t_p27 + 1);\r\n\t\t} else {\r\n\t\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_History$History, _p28, _p26._1, _p27 + 1);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$decoder = F2(\r\n\tfunction (initialModel, update) {\r\n\t\tvar addMessage = F2(\r\n\t\t\tfunction (rawMsg, _p29) {\r\n\t\t\t\tvar _p30 = _p29;\r\n\t\t\t\tvar _p31 = _p30._0;\r\n\t\t\t\tvar msg = _elm_lang$virtual_dom$VirtualDom_History$jsToElm(rawMsg);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A2(update, msg, _p31),\r\n\t\t\t\t\t_1: A3(_elm_lang$virtual_dom$VirtualDom_History$add, msg, _p31, _p30._1)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\tvar updateModel = function (rawMsgs) {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$core$List$foldl,\r\n\t\t\t\taddMessage,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: initialModel,\r\n\t\t\t\t\t_1: _elm_lang$virtual_dom$VirtualDom_History$empty(initialModel)\r\n\t\t\t\t},\r\n\t\t\t\trawMsgs);\r\n\t\t};\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Json_Decode$map,\r\n\t\t\tupdateModel,\r\n\t\t\t_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$Done = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Done', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$Stepping = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Stepping', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$getHelp = F3(\r\n\tfunction (update, msg, getResult) {\r\n\t\tvar _p32 = getResult;\r\n\t\tif (_p32.ctor === 'Done') {\r\n\t\t\treturn getResult;\r\n\t\t} else {\r\n\t\t\tvar _p34 = _p32._0;\r\n\t\t\tvar _p33 = _p32._1;\r\n\t\t\treturn _elm_lang$core$Native_Utils.eq(_p34, 0) ? A2(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$Done,\r\n\t\t\t\tmsg,\r\n\t\t\t\t_elm_lang$core$Tuple$first(\r\n\t\t\t\t\tA2(update, msg, _p33))) : A2(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$Stepping,\r\n\t\t\t\t_p34 - 1,\r\n\t\t\t\t_elm_lang$core$Tuple$first(\r\n\t\t\t\t\tA2(update, msg, _p33)));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_History$get = F3(\r\n\tfunction (update, index, _p35) {\r\n\t\tvar _p36 = _p35;\r\n\t\tvar _p39 = _p36.recent;\r\n\t\tvar snapshotMax = _p36.numMessages - _p39.numMessages;\r\n\t\tif (_elm_lang$core$Native_Utils.cmp(index, snapshotMax) > -1) {\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_History$undone(\r\n\t\t\t\tA3(\r\n\t\t\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$getHelp(update),\r\n\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_History$Stepping, index - snapshotMax, _p39.model),\r\n\t\t\t\t\t_p39.messages));\r\n\t\t} else {\r\n\t\t\tvar _p37 = A2(_elm_lang$core$Array$get, (index / _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize) | 0, _p36.snapshots);\r\n\t\t\tif (_p37.ctor === 'Nothing') {\r\n\t\t\t\treturn _elm_lang$core$Native_Utils.crashCase(\r\n\t\t\t\t\t'VirtualDom.History',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstart: {line: 165, column: 7},\r\n\t\t\t\t\t\tend: {line: 171, column: 95}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t_p37)('UI should only let you ask for real indexes!');\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_History$undone(\r\n\t\t\t\t\tA3(\r\n\t\t\t\t\t\t_elm_lang$core$Array$foldr,\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$getHelp(update),\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$Stepping,\r\n\t\t\t\t\t\t\tA2(_elm_lang$core$Basics$rem, index, _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize),\r\n\t\t\t\t\t\t\t_p37._0.model),\r\n\t\t\t\t\t\t_p37._0.messages));\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$styles = A3(\r\n\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t'style',\r\n\t{ctor: '[]'},\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('\\n\\n.elm-overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  color: white;\\n  pointer-events: none;\\n  font-family: \\'Trebuchet MS\\', \\'Lucida Grande\\', \\'Bitstream Vera Sans\\', \\'Helvetica Neue\\', sans-serif;\\n}\\n\\n.elm-overlay-resume {\\n  width: 100%;\\n  height: 100%;\\n  cursor: pointer;\\n  text-align: center;\\n  pointer-events: auto;\\n  background-color: rgba(200, 200, 200, 0.7);\\n}\\n\\n.elm-overlay-resume-words {\\n  position: absolute;\\n  top: calc(50% - 40px);\\n  font-size: 80px;\\n  line-height: 80px;\\n  height: 80px;\\n  width: 100%;\\n}\\n\\n.elm-mini-controls {\\n  position: fixed;\\n  bottom: 0;\\n  right: 6px;\\n  border-radius: 4px;\\n  background-color: rgb(61, 61, 61);\\n  font-family: monospace;\\n  pointer-events: auto;\\n}\\n\\n.elm-mini-controls-button {\\n  padding: 6px;\\n  cursor: pointer;\\n  text-align: center;\\n  min-width: 24ch;\\n}\\n\\n.elm-mini-controls-import-export {\\n  padding: 4px 0;\\n  font-size: 0.8em;\\n  text-align: center;\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.elm-overlay-message {\\n  position: absolute;\\n  width: 600px;\\n  height: 100%;\\n  padding-left: calc(50% - 300px);\\n  padding-right: calc(50% - 300px);\\n  background-color: rgba(200, 200, 200, 0.7);\\n  pointer-events: auto;\\n}\\n\\n.elm-overlay-message-title {\\n  font-size: 36px;\\n  height: 80px;\\n  background-color: rgb(50, 50, 50);\\n  padding-left: 22px;\\n  vertical-align: middle;\\n  line-height: 80px;\\n}\\n\\n.elm-overlay-message-details {\\n  padding: 8px 20px;\\n  overflow-y: auto;\\n  max-height: calc(100% - 156px);\\n  background-color: rgb(61, 61, 61);\\n}\\n\\n.elm-overlay-message-details-type {\\n  font-size: 1.5em;\\n}\\n\\n.elm-overlay-message-details ul {\\n  list-style-type: none;\\n  padding-left: 20px;\\n}\\n\\n.elm-overlay-message-details ul ul {\\n  list-style-type: disc;\\n  padding-left: 2em;\\n}\\n\\n.elm-overlay-message-details li {\\n  margin: 8px 0;\\n}\\n\\n.elm-overlay-message-buttons {\\n  height: 60px;\\n  line-height: 60px;\\n  text-align: right;\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.elm-overlay-message-buttons button {\\n  margin-right: 20px;\\n}\\n\\n'),\r\n\t\t_1: {ctor: '[]'}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$button = F2(\r\n\tfunction (msg, label) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(msg),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(label),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewImportExport = F3(\r\n\tfunction (props, importMsg, exportMsg) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\tprops,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$button, importMsg, 'Import'),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' / '),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$button, exportMsg, 'Export'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewMiniControls = F2(\r\n\tfunction (config, numMsgs) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-mini-controls'),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(config.open),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-mini-controls-button'),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t'Explore History (',\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(numMsgs),\r\n\t\t\t\t\t\t\t\t\t')'))),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$viewImportExport,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-mini-controls-import-export'),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tconfig.importHistory,\r\n\t\t\t\t\t\tconfig.exportHistory),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$addCommas = function (items) {\r\n\tvar _p0 = items;\r\n\tif (_p0.ctor === '[]') {\r\n\t\treturn '';\r\n\t} else {\r\n\t\tif (_p0._1.ctor === '[]') {\r\n\t\t\treturn _p0._0;\r\n\t\t} else {\r\n\t\t\tif (_p0._1._1.ctor === '[]') {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t_p0._0,\r\n\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], ' and ', _p0._1._0));\r\n\t\t\t} else {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$String$join,\r\n\t\t\t\t\t', ',\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t_p0._1,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(_elm_lang$core$Basics_ops['++'], ' and ', _p0._0),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$problemToString = function (problem) {\r\n\tvar _p1 = problem;\r\n\tswitch (_p1.ctor) {\r\n\t\tcase 'Function':\r\n\t\t\treturn 'functions';\r\n\t\tcase 'Decoder':\r\n\t\t\treturn 'JSON decoders';\r\n\t\tcase 'Task':\r\n\t\t\treturn 'tasks';\r\n\t\tcase 'Process':\r\n\t\t\treturn 'processes';\r\n\t\tcase 'Socket':\r\n\t\t\treturn 'web sockets';\r\n\t\tcase 'Request':\r\n\t\t\treturn 'HTTP requests';\r\n\t\tcase 'Program':\r\n\t\t\treturn 'programs';\r\n\t\tdefault:\r\n\t\t\treturn 'virtual DOM values';\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$goodNews2 = '\\nfunction can pattern match on that data and call whatever functions, JSON\\ndecoders, etc. you need. This makes the code much more explicit and easy to\\nfollow for other readers (or you in a few months!)\\n';\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$goodNews1 = '\\nThe good news is that having values like this in your message type is not\\nso great in the long run. You are better off using simpler data, like\\n';\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode = function (name) {\r\n\treturn A3(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t'code',\r\n\t\t{ctor: '[]'},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(name),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewMention = F2(\r\n\tfunction (tags, verbed) {\r\n\t\tvar _p2 = A2(\r\n\t\t\t_elm_lang$core$List$map,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$viewCode,\r\n\t\t\t_elm_lang$core$List$reverse(tags));\r\n\t\tif (_p2.ctor === '[]') {\r\n\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Helpers$text('');\r\n\t\t} else {\r\n\t\t\tif (_p2._1.ctor === '[]') {\r\n\t\t\t\treturn A3(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t'li',\r\n\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(verbed),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _p2._0,\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('.'),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (_p2._1._1.ctor === '[]') {\r\n\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t'li',\r\n\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(verbed),\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _p2._1._0,\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' and '),\r\n\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: _p2._0,\r\n\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('.'),\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t'li',\r\n\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(verbed),\r\n\t\t\t\t\t\t\t_1: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$List$intersperse,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$text(', '),\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$List$reverse(_p2._1)),\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', and '),\r\n\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: _p2._0,\r\n\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('.'),\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewChange = function (change) {\r\n\treturn A3(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t'li',\r\n\t\t{ctor: '[]'},\r\n\t\tfunction () {\r\n\t\t\tvar _p3 = change;\r\n\t\t\tif (_p3.ctor === 'AliasChange') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-details-type'),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p3._0),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-details-type'),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p3._0),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t\t'ul',\r\n\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMention, _p3._1.removed, 'Removed '),\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMention, _p3._1.changed, 'Changed '),\r\n\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMention, _p3._1.added, 'Added '),\r\n\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _p3._1.argsMatch ? _elm_lang$virtual_dom$VirtualDom_Helpers$text('') : _elm_lang$virtual_dom$VirtualDom_Helpers$text('This may be due to the fact that the type variable names changed.'),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}());\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewProblemType = function (_p4) {\r\n\tvar _p5 = _p4;\r\n\treturn A3(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t'li',\r\n\t\t{ctor: '[]'},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p5.name),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t' can contain ',\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$addCommas(\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Overlay$problemToString, _p5.problems)),\r\n\t\t\t\t\t\t\t'.'))),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewBadMetadata = function (_p6) {\r\n\tvar _p7 = _p6;\r\n\treturn {\r\n\t\tctor: '::',\r\n\t\t_0: A3(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t'p',\r\n\t\t\t{ctor: '[]'},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('The '),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p7.message),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' type of your program cannot be reliably serialized for history files.'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: A3(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t'p',\r\n\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Functions cannot be serialized, nor can values that contain functions. This is a problem in these places:'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A3(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t'ul',\r\n\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\tA2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Overlay$viewProblemType, _p7.problems)),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t'p',\r\n\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_elm_lang$virtual_dom$VirtualDom_Overlay$goodNews1),\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$a,\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$href('https://guide.elm-lang.org/types/union_types.html'),\r\n\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('union types'),\r\n\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', in your messages. From there, your '),\r\n\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode('update'),\r\n\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_elm_lang$virtual_dom$VirtualDom_Overlay$goodNews2),\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$explanationRisky = '\\nThis history seems old. It will work with this program, but some\\nmessages have been added since the history was created:\\n';\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$explanationBad = '\\nThe messages in this history do not match the messages handled by your\\nprogram. I noticed changes in the following types:\\n';\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewReport = F2(\r\n\tfunction (isBad, report) {\r\n\t\tvar _p8 = report;\r\n\t\tswitch (_p8.ctor) {\r\n\t\t\tcase 'CorruptHistory':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Looks like this history file is corrupt. I cannot understand it.'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t};\r\n\t\t\tcase 'VersionChanged':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t'This history was created with Elm ',\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t_p8._0,\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t\t', but you are using Elm ',\r\n\t\t\t\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], _p8._1, ' right now.'))))),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t};\r\n\t\t\tcase 'MessageChanged':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(\r\n\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], 'To import some other history, the overall message type must', ' be the same. The old history has ')),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p8._0),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' messages, but the new program works with '),\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p8._1),\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' messages.'),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t'p',\r\n\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(\r\n\t\t\t\t\t\t\t\tisBad ? _elm_lang$virtual_dom$VirtualDom_Overlay$explanationBad : _elm_lang$virtual_dom$VirtualDom_Overlay$explanationRisky),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t\t'ul',\r\n\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\tA2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Overlay$viewChange, _p8._0)),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewResume = function (config) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-resume'),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(config.resume),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: A2(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-resume-words'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Click to Resume'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$uploadDecoder = A3(\r\n\t_elm_lang$core$Json_Decode$map2,\r\n\tF2(\r\n\t\tfunction (v0, v1) {\r\n\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\r\n\t\t}),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'metadata', _elm_lang$virtual_dom$VirtualDom_Metadata$decoder),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'history', _elm_lang$core$Json_Decode$value));\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$close = F2(\r\n\tfunction (msg, state) {\r\n\t\tvar _p9 = state;\r\n\t\tswitch (_p9.ctor) {\r\n\t\t\tcase 'None':\r\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\tcase 'BadMetadata':\r\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\tcase 'BadImport':\r\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\tdefault:\r\n\t\t\t\tvar _p10 = msg;\r\n\t\t\t\tif (_p10.ctor === 'Cancel') {\r\n\t\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Maybe$Just(_p9._1);\r\n\t\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$isBlocking = function (state) {\r\n\tvar _p11 = state;\r\n\tif (_p11.ctor === 'None') {\r\n\t\treturn false;\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Config = F5(\r\n\tfunction (a, b, c, d, e) {\r\n\t\treturn {resume: a, open: b, importHistory: c, exportHistory: d, wrap: e};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$RiskyImport = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'RiskyImport', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$BadImport = function (a) {\r\n\treturn {ctor: 'BadImport', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$corruptImport = _elm_lang$virtual_dom$VirtualDom_Overlay$BadImport(_elm_lang$virtual_dom$VirtualDom_Report$CorruptHistory);\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$assessImport = F2(\r\n\tfunction (metadata, jsonString) {\r\n\t\tvar _p12 = A2(_elm_lang$core$Json_Decode$decodeString, _elm_lang$virtual_dom$VirtualDom_Overlay$uploadDecoder, jsonString);\r\n\t\tif (_p12.ctor === 'Err') {\r\n\t\t\treturn _elm_lang$core$Result$Err(_elm_lang$virtual_dom$VirtualDom_Overlay$corruptImport);\r\n\t\t} else {\r\n\t\t\tvar _p14 = _p12._0._1;\r\n\t\t\tvar report = A2(_elm_lang$virtual_dom$VirtualDom_Metadata$check, _p12._0._0, metadata);\r\n\t\t\tvar _p13 = _elm_lang$virtual_dom$VirtualDom_Report$evaluate(report);\r\n\t\t\tswitch (_p13.ctor) {\r\n\t\t\t\tcase 'Impossible':\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$BadImport(report));\r\n\t\t\t\tcase 'Risky':\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(\r\n\t\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Overlay$RiskyImport, report, _p14));\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn _elm_lang$core$Result$Ok(_p14);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$BadMetadata = function (a) {\r\n\treturn {ctor: 'BadMetadata', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$badMetadata = _elm_lang$virtual_dom$VirtualDom_Overlay$BadMetadata;\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$None = {ctor: 'None'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$none = _elm_lang$virtual_dom$VirtualDom_Overlay$None;\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Proceed = {ctor: 'Proceed'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Cancel = {ctor: 'Cancel'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewButtons = function (buttons) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-buttons'),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t},\r\n\t\tfunction () {\r\n\t\t\tvar _p15 = buttons;\r\n\t\t\tif (_p15.ctor === 'Accept') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t'button',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Overlay$Proceed),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p15._0),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t'button',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Overlay$Cancel),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p15._0),\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A3(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t\t\t\t\t\t\t'button',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Overlay$Proceed),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p15._1),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}());\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Message = {ctor: 'Message'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage = F4(\r\n\tfunction (config, title, details, buttons) {\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$Message,\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-title'),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(title),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-details'),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tdetails),\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t\t\t\tconfig.wrap,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$viewButtons(buttons)),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Pause = {ctor: 'Pause'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Normal = {ctor: 'Normal'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Choose = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Choose', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$Accept = function (a) {\r\n\treturn {ctor: 'Accept', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$viewHelp = F5(\r\n\tfunction (config, isPaused, isOpen, numMsgs, state) {\r\n\t\tvar _p16 = state;\r\n\t\tswitch (_p16.ctor) {\r\n\t\t\tcase 'None':\r\n\t\t\t\tvar miniControls = isOpen ? {ctor: '[]'} : {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMiniControls, config, numMsgs),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t};\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: isPaused ? _elm_lang$virtual_dom$VirtualDom_Overlay$Pause : _elm_lang$virtual_dom$VirtualDom_Overlay$Normal,\r\n\t\t\t\t\t_1: (isPaused && (!isOpen)) ? {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewResume(config),\r\n\t\t\t\t\t\t_1: miniControls\r\n\t\t\t\t\t} : miniControls\r\n\t\t\t\t};\r\n\t\t\tcase 'BadMetadata':\r\n\t\t\t\treturn A4(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage,\r\n\t\t\t\t\tconfig,\r\n\t\t\t\t\t'Cannot use Import or Export',\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$viewBadMetadata(_p16._0),\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$Accept('Ok'));\r\n\t\t\tcase 'BadImport':\r\n\t\t\t\treturn A4(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage,\r\n\t\t\t\t\tconfig,\r\n\t\t\t\t\t'Cannot Import History',\r\n\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewReport, true, _p16._0),\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$Accept('Ok'));\r\n\t\t\tdefault:\r\n\t\t\t\treturn A4(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage,\r\n\t\t\t\t\tconfig,\r\n\t\t\t\t\t'Warning',\r\n\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewReport, false, _p16._0),\r\n\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_Overlay$Choose, 'Cancel', 'Import Anyway'));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Overlay$view = F5(\r\n\tfunction (config, isPaused, isOpen, numMsgs, state) {\r\n\t\tvar _p17 = A5(_elm_lang$virtual_dom$VirtualDom_Overlay$viewHelp, config, isPaused, isOpen, numMsgs, state);\r\n\t\tvar block = _p17._0;\r\n\t\tvar nodes = _p17._1;\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: block,\r\n\t\t\t_1: A2(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\t{ctor: '::', _0: _elm_lang$virtual_dom$VirtualDom_Overlay$styles, _1: nodes})\r\n\t\t};\r\n\t});\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$styles = A3(\r\n\t_elm_lang$virtual_dom$VirtualDom_Helpers$node,\r\n\t'style',\r\n\t{ctor: '[]'},\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('\\n\\nhtml {\\n    overflow: hidden;\\n    height: 100%;\\n}\\n\\nbody {\\n    height: 100%;\\n    overflow: auto;\\n}\\n\\n#debugger {\\n  width: 100%\\n  height: 100%;\\n  font-family: monospace;\\n}\\n\\n#values {\\n  display: block;\\n  float: left;\\n  height: 100%;\\n  width: calc(100% - 30ch);\\n  margin: 0;\\n  overflow: auto;\\n  cursor: default;\\n}\\n\\n.debugger-sidebar {\\n  display: block;\\n  float: left;\\n  width: 30ch;\\n  height: 100%;\\n  color: white;\\n  background-color: rgb(61, 61, 61);\\n}\\n\\n.debugger-sidebar-controls {\\n  width: 100%;\\n  text-align: center;\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.debugger-sidebar-controls-import-export {\\n  width: 100%;\\n  height: 24px;\\n  line-height: 24px;\\n  font-size: 12px;\\n}\\n\\n.debugger-sidebar-controls-resume {\\n  width: 100%;\\n  height: 30px;\\n  line-height: 30px;\\n  cursor: pointer;\\n}\\n\\n.debugger-sidebar-controls-resume:hover {\\n  background-color: rgb(41, 41, 41);\\n}\\n\\n.debugger-sidebar-messages {\\n  width: 100%;\\n  overflow-y: auto;\\n  height: calc(100% - 24px);\\n}\\n\\n.debugger-sidebar-messages-paused {\\n  width: 100%;\\n  overflow-y: auto;\\n  height: calc(100% - 54px);\\n}\\n\\n.messages-entry {\\n  cursor: pointer;\\n  width: 100%;\\n}\\n\\n.messages-entry:hover {\\n  background-color: rgb(41, 41, 41);\\n}\\n\\n.messages-entry-selected, .messages-entry-selected:hover {\\n  background-color: rgb(10, 10, 10);\\n}\\n\\n.messages-entry-content {\\n  width: calc(100% - 7ch);\\n  padding-top: 4px;\\n  padding-bottom: 4px;\\n  padding-left: 1ch;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  display: inline-block;\\n}\\n\\n.messages-entry-index {\\n  color: #666;\\n  width: 5ch;\\n  padding-top: 4px;\\n  padding-bottom: 4px;\\n  padding-right: 1ch;\\n  text-align: right;\\n  display: block;\\n  float: right;\\n}\\n\\n'),\r\n\t\t_1: {ctor: '[]'}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$button = F2(\r\n\tfunction (msg, label) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$span,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(msg),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$style(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(label),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel = function (state) {\r\n\tvar _p0 = state;\r\n\tif (_p0.ctor === 'Running') {\r\n\t\treturn _p0._0;\r\n\t} else {\r\n\t\treturn _p0._2;\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata = F2(\r\n\tfunction (model, func) {\r\n\t\tvar _p1 = model.metadata;\r\n\t\tif (_p1.ctor === 'Ok') {\r\n\t\t\treturn func(_p1._0);\r\n\t\t} else {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toverlay: _elm_lang$virtual_dom$VirtualDom_Overlay$badMetadata(_p1._0)\r\n\t\t\t\t\t}),\r\n\t\t\t\t{ctor: '[]'});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Model = F6(\r\n\tfunction (a, b, c, d, e, f) {\r\n\t\treturn {history: a, state: b, expando: c, metadata: d, overlay: e, isDebuggerOpen: f};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Paused = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {ctor: 'Paused', _0: a, _1: b, _2: c};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Running = function (a) {\r\n\treturn {ctor: 'Running', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$loadNewHistory = F3(\r\n\tfunction (rawHistory, userUpdate, model) {\r\n\t\tvar pureUserUpdate = F2(\r\n\t\t\tfunction (msg, userModel) {\r\n\t\t\t\treturn _elm_lang$core$Tuple$first(\r\n\t\t\t\t\tA2(userUpdate, msg, userModel));\r\n\t\t\t});\r\n\t\tvar initialUserModel = _elm_lang$virtual_dom$VirtualDom_History$initialModel(model.history);\r\n\t\tvar decoder = A2(_elm_lang$virtual_dom$VirtualDom_History$decoder, initialUserModel, pureUserUpdate);\r\n\t\tvar _p2 = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, rawHistory);\r\n\t\tif (_p2.ctor === 'Err') {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\t{overlay: _elm_lang$virtual_dom$VirtualDom_Overlay$corruptImport}),\r\n\t\t\t\t{ctor: '[]'});\r\n\t\t} else {\r\n\t\t\tvar _p3 = _p2._0._0;\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thistory: _p2._0._1,\r\n\t\t\t\t\t\tstate: _elm_lang$virtual_dom$VirtualDom_Debug$Running(_p3),\r\n\t\t\t\t\t\texpando: _elm_lang$virtual_dom$VirtualDom_Expando$init(_p3),\r\n\t\t\t\t\t\toverlay: _elm_lang$virtual_dom$VirtualDom_Overlay$none\r\n\t\t\t\t\t}),\r\n\t\t\t\t{ctor: '[]'});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$OverlayMsg = function (a) {\r\n\treturn {ctor: 'OverlayMsg', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Upload = function (a) {\r\n\treturn {ctor: 'Upload', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$upload = A2(_elm_lang$core$Task$perform, _elm_lang$virtual_dom$VirtualDom_Debug$Upload, _elm_lang$virtual_dom$Native_Debug.upload);\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Export = {ctor: 'Export'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Import = {ctor: 'Import'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Down = {ctor: 'Down'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Up = {ctor: 'Up'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Close = {ctor: 'Close'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Open = {ctor: 'Open'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Jump = function (a) {\r\n\treturn {ctor: 'Jump', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$Resume = {ctor: 'Resume'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$overlayConfig = {resume: _elm_lang$virtual_dom$VirtualDom_Debug$Resume, open: _elm_lang$virtual_dom$VirtualDom_Debug$Open, importHistory: _elm_lang$virtual_dom$VirtualDom_Debug$Import, exportHistory: _elm_lang$virtual_dom$VirtualDom_Debug$Export, wrap: _elm_lang$virtual_dom$VirtualDom_Debug$OverlayMsg};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$viewIn = function (_p4) {\r\n\tvar _p5 = _p4;\r\n\tvar isPaused = function () {\r\n\t\tvar _p6 = _p5.state;\r\n\t\tif (_p6.ctor === 'Running') {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}();\r\n\treturn A5(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Overlay$view,\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Debug$overlayConfig,\r\n\t\tisPaused,\r\n\t\t_p5.isDebuggerOpen,\r\n\t\t_elm_lang$virtual_dom$VirtualDom_History$size(_p5.history),\r\n\t\t_p5.overlay);\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$resumeButton = A2(\r\n\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Debug$Resume),\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar-controls-resume'),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Resume'),\r\n\t\t_1: {ctor: '[]'}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$viewResumeButton = function (maybeIndex) {\r\n\tvar _p7 = maybeIndex;\r\n\tif (_p7.ctor === 'Nothing') {\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom_Helpers$text('');\r\n\t} else {\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom_Debug$resumeButton;\r\n\t}\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$playButton = function (maybeIndex) {\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar-controls'),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Debug$viewResumeButton(maybeIndex),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar-controls-import-export'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$button, _elm_lang$virtual_dom$VirtualDom_Debug$Import, 'Import'),\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' / '),\r\n\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$button, _elm_lang$virtual_dom$VirtualDom_Debug$Export, 'Export'),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$viewSidebar = F2(\r\n\tfunction (state, history) {\r\n\t\tvar maybeIndex = function () {\r\n\t\t\tvar _p8 = state;\r\n\t\t\tif (_p8.ctor === 'Running') {\r\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Maybe$Just(_p8._0);\r\n\t\t\t}\r\n\t\t}();\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar'),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$Jump,\r\n\t\t\t\t\tA2(_elm_lang$virtual_dom$VirtualDom_History$view, maybeIndex, history)),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Debug$playButton(maybeIndex),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$ExpandoMsg = function (a) {\r\n\treturn {ctor: 'ExpandoMsg', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$viewOut = function (_p9) {\r\n\tvar _p10 = _p9;\r\n\treturn A2(\r\n\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$id('debugger'),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Debug$styles,\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$viewSidebar, _p10.state, _p10.history),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$ExpandoMsg,\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$div,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Helpers$id('values'),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Expando$view, _elm_lang$core$Maybe$Nothing, _p10.expando),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$UserMsg = function (a) {\r\n\treturn {ctor: 'UserMsg', _0: a};\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapInit = F2(\r\n\tfunction (metadata, _p11) {\r\n\t\tvar _p12 = _p11;\r\n\t\tvar _p13 = _p12._0;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t{\r\n\t\t\t\thistory: _elm_lang$virtual_dom$VirtualDom_History$empty(_p13),\r\n\t\t\t\tstate: _elm_lang$virtual_dom$VirtualDom_Debug$Running(_p13),\r\n\t\t\t\texpando: _elm_lang$virtual_dom$VirtualDom_Expando$init(_p13),\r\n\t\t\t\tmetadata: _elm_lang$virtual_dom$VirtualDom_Metadata$decode(metadata),\r\n\t\t\t\toverlay: _elm_lang$virtual_dom$VirtualDom_Overlay$none,\r\n\t\t\t\tisDebuggerOpen: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(_elm_lang$core$Platform_Cmd$map, _elm_lang$virtual_dom$VirtualDom_Debug$UserMsg, _p12._1),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapSubs = F2(\r\n\tfunction (userSubscriptions, _p14) {\r\n\t\tvar _p15 = _p14;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Platform_Sub$map,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$UserMsg,\r\n\t\t\tuserSubscriptions(\r\n\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel(_p15.state)));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapView = F2(\r\n\tfunction (userView, _p16) {\r\n\t\tvar _p17 = _p16;\r\n\t\tvar currentModel = function () {\r\n\t\t\tvar _p18 = _p17.state;\r\n\t\t\tif (_p18.ctor === 'Running') {\r\n\t\t\t\treturn _p18._0;\r\n\t\t\t} else {\r\n\t\t\t\treturn _p18._1;\r\n\t\t\t}\r\n\t\t}();\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Helpers$map,\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$UserMsg,\r\n\t\t\tuserView(currentModel));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$NoOp = {ctor: 'NoOp'};\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$download = F2(\r\n\tfunction (metadata, history) {\r\n\t\tvar json = _elm_lang$core$Json_Encode$object(\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'metadata',\r\n\t\t\t\t\t_1: _elm_lang$virtual_dom$VirtualDom_Metadata$encode(metadata)\r\n\t\t\t\t},\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: 'history',\r\n\t\t\t\t\t\t_1: _elm_lang$virtual_dom$VirtualDom_History$encode(history)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tvar historyLength = _elm_lang$virtual_dom$VirtualDom_History$size(history);\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$perform,\r\n\t\t\tfunction (_p19) {\r\n\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_Debug$NoOp;\r\n\t\t\t},\r\n\t\t\tA2(_elm_lang$virtual_dom$Native_Debug.download, historyLength, json));\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$runIf = F2(\r\n\tfunction (bool, task) {\r\n\t\treturn bool ? A2(\r\n\t\t\t_elm_lang$core$Task$perform,\r\n\t\t\t_elm_lang$core$Basics$always(_elm_lang$virtual_dom$VirtualDom_Debug$NoOp),\r\n\t\t\ttask) : _elm_lang$core$Platform_Cmd$none;\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$updateUserMsg = F4(\r\n\tfunction (userUpdate, scrollTask, userMsg, _p20) {\r\n\t\tvar _p21 = _p20;\r\n\t\tvar _p25 = _p21.state;\r\n\t\tvar _p24 = _p21;\r\n\t\tvar userModel = _elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel(_p25);\r\n\t\tvar newHistory = A3(_elm_lang$virtual_dom$VirtualDom_History$add, userMsg, userModel, _p21.history);\r\n\t\tvar _p22 = A2(userUpdate, userMsg, userModel);\r\n\t\tvar newUserModel = _p22._0;\r\n\t\tvar userCmds = _p22._1;\r\n\t\tvar commands = A2(_elm_lang$core$Platform_Cmd$map, _elm_lang$virtual_dom$VirtualDom_Debug$UserMsg, userCmds);\r\n\t\tvar _p23 = _p25;\r\n\t\tif (_p23.ctor === 'Running') {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p24,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thistory: newHistory,\r\n\t\t\t\t\t\tstate: _elm_lang$virtual_dom$VirtualDom_Debug$Running(newUserModel),\r\n\t\t\t\t\t\texpando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$merge, newUserModel, _p21.expando)\r\n\t\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: commands,\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$runIf, _p24.isDebuggerOpen, scrollTask),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p24,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thistory: newHistory,\r\n\t\t\t\t\t\tstate: A3(_elm_lang$virtual_dom$VirtualDom_Debug$Paused, _p23._0, _p23._1, newUserModel)\r\n\t\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: commands,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapUpdate = F4(\r\n\tfunction (userUpdate, scrollTask, msg, model) {\r\n\t\twrapUpdate:\r\n\t\twhile (true) {\r\n\t\t\tvar _p26 = msg;\r\n\t\t\tswitch (_p26.ctor) {\r\n\t\t\t\tcase 'NoOp':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\tcase 'UserMsg':\r\n\t\t\t\t\treturn A4(_elm_lang$virtual_dom$VirtualDom_Debug$updateUserMsg, userUpdate, scrollTask, _p26._0, model);\r\n\t\t\t\tcase 'ExpandoMsg':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\texpando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$update, _p26._0, model.expando)\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\tcase 'Resume':\r\n\t\t\t\t\tvar _p27 = model.state;\r\n\t\t\t\t\tif (_p27.ctor === 'Running') {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar _p28 = _p27._2;\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tstate: _elm_lang$virtual_dom$VirtualDom_Debug$Running(_p28),\r\n\t\t\t\t\t\t\t\t\texpando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$merge, _p28, model.expando)\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$runIf, model.isDebuggerOpen, scrollTask),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Jump':\r\n\t\t\t\t\tvar _p30 = _p26._0;\r\n\t\t\t\t\tvar _p29 = A3(_elm_lang$virtual_dom$VirtualDom_History$get, userUpdate, _p30, model.history);\r\n\t\t\t\t\tvar indexModel = _p29._0;\r\n\t\t\t\t\tvar indexMsg = _p29._1;\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstate: A3(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$Paused,\r\n\t\t\t\t\t\t\t\t\t_p30,\r\n\t\t\t\t\t\t\t\t\tindexModel,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel(model.state)),\r\n\t\t\t\t\t\t\t\texpando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$merge, indexModel, model.expando)\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\tcase 'Open':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{isDebuggerOpen: true}),\r\n\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\tcase 'Close':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{isDebuggerOpen: false}),\r\n\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\tcase 'Up':\r\n\t\t\t\t\tvar index = function () {\r\n\t\t\t\t\t\tvar _p31 = model.state;\r\n\t\t\t\t\t\tif (_p31.ctor === 'Paused') {\r\n\t\t\t\t\t\t\treturn _p31._0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn _elm_lang$virtual_dom$VirtualDom_History$size(model.history);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}();\r\n\t\t\t\t\tif (_elm_lang$core$Native_Utils.cmp(index, 0) > 0) {\r\n\t\t\t\t\t\tvar _v17 = userUpdate,\r\n\t\t\t\t\t\t\t_v18 = scrollTask,\r\n\t\t\t\t\t\t\t_v19 = _elm_lang$virtual_dom$VirtualDom_Debug$Jump(index - 1),\r\n\t\t\t\t\t\t\t_v20 = model;\r\n\t\t\t\t\t\tuserUpdate = _v17;\r\n\t\t\t\t\t\tscrollTask = _v18;\r\n\t\t\t\t\t\tmsg = _v19;\r\n\t\t\t\t\t\tmodel = _v20;\r\n\t\t\t\t\t\tcontinue wrapUpdate;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Down':\r\n\t\t\t\t\tvar _p32 = model.state;\r\n\t\t\t\t\tif (_p32.ctor === 'Running') {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar _p33 = _p32._0;\r\n\t\t\t\t\t\tif (_elm_lang$core$Native_Utils.eq(\r\n\t\t\t\t\t\t\t_p33,\r\n\t\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_History$size(model.history) - 1)) {\r\n\t\t\t\t\t\t\tvar _v22 = userUpdate,\r\n\t\t\t\t\t\t\t\t_v23 = scrollTask,\r\n\t\t\t\t\t\t\t\t_v24 = _elm_lang$virtual_dom$VirtualDom_Debug$Resume,\r\n\t\t\t\t\t\t\t\t_v25 = model;\r\n\t\t\t\t\t\t\tuserUpdate = _v22;\r\n\t\t\t\t\t\t\tscrollTask = _v23;\r\n\t\t\t\t\t\t\tmsg = _v24;\r\n\t\t\t\t\t\t\tmodel = _v25;\r\n\t\t\t\t\t\t\tcontinue wrapUpdate;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar _v26 = userUpdate,\r\n\t\t\t\t\t\t\t\t_v27 = scrollTask,\r\n\t\t\t\t\t\t\t\t_v28 = _elm_lang$virtual_dom$VirtualDom_Debug$Jump(_p33 + 1),\r\n\t\t\t\t\t\t\t\t_v29 = model;\r\n\t\t\t\t\t\t\tuserUpdate = _v26;\r\n\t\t\t\t\t\t\tscrollTask = _v27;\r\n\t\t\t\t\t\t\tmsg = _v28;\r\n\t\t\t\t\t\t\tmodel = _v29;\r\n\t\t\t\t\t\t\tcontinue wrapUpdate;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Import':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\tfunction (_p34) {\r\n\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$virtual_dom$VirtualDom_Debug$upload,\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\tcase 'Export':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\tfunction (metadata) {\r\n\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$download, metadata, model.history),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\tcase 'Upload':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\tfunction (metadata) {\r\n\t\t\t\t\t\t\tvar _p35 = A2(_elm_lang$virtual_dom$VirtualDom_Overlay$assessImport, metadata, _p26._0);\r\n\t\t\t\t\t\t\tif (_p35.ctor === 'Err') {\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t\t\t\t{overlay: _p35._0}),\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_Debug$loadNewHistory, _p35._0, userUpdate, model);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvar _p36 = A2(_elm_lang$virtual_dom$VirtualDom_Overlay$close, _p26._0, model.overlay);\r\n\t\t\t\t\tif (_p36.ctor === 'Nothing') {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t\t{overlay: _elm_lang$virtual_dom$VirtualDom_Overlay$none}),\r\n\t\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn A3(_elm_lang$virtual_dom$VirtualDom_Debug$loadNewHistory, _p36._0, userUpdate, model);\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrap = F2(\r\n\tfunction (metadata, _p37) {\r\n\t\tvar _p38 = _p37;\r\n\t\treturn {\r\n\t\t\tinit: A2(_elm_lang$virtual_dom$VirtualDom_Debug$wrapInit, metadata, _p38.init),\r\n\t\t\tview: _elm_lang$virtual_dom$VirtualDom_Debug$wrapView(_p38.view),\r\n\t\t\tupdate: _elm_lang$virtual_dom$VirtualDom_Debug$wrapUpdate(_p38.update),\r\n\t\t\tviewIn: _elm_lang$virtual_dom$VirtualDom_Debug$viewIn,\r\n\t\t\tviewOut: _elm_lang$virtual_dom$VirtualDom_Debug$viewOut,\r\n\t\t\tsubscriptions: _elm_lang$virtual_dom$VirtualDom_Debug$wrapSubs(_p38.subscriptions)\r\n\t\t};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags = F2(\r\n\tfunction (metadata, _p39) {\r\n\t\tvar _p40 = _p39;\r\n\t\treturn {\r\n\t\t\tinit: function (flags) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$virtual_dom$VirtualDom_Debug$wrapInit,\r\n\t\t\t\t\tmetadata,\r\n\t\t\t\t\t_p40.init(flags));\r\n\t\t\t},\r\n\t\t\tview: _elm_lang$virtual_dom$VirtualDom_Debug$wrapView(_p40.view),\r\n\t\t\tupdate: _elm_lang$virtual_dom$VirtualDom_Debug$wrapUpdate(_p40.update),\r\n\t\t\tviewIn: _elm_lang$virtual_dom$VirtualDom_Debug$viewIn,\r\n\t\t\tviewOut: _elm_lang$virtual_dom$VirtualDom_Debug$viewOut,\r\n\t\t\tsubscriptions: _elm_lang$virtual_dom$VirtualDom_Debug$wrapSubs(_p40.subscriptions)\r\n\t\t};\r\n\t});\r\n\r\nvar _elm_lang$virtual_dom$VirtualDom$programWithFlags = function (impl) {\r\n\treturn A2(_elm_lang$virtual_dom$Native_VirtualDom.programWithFlags, _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags, impl);\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom$program = function (impl) {\r\n\treturn A2(_elm_lang$virtual_dom$Native_VirtualDom.program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, impl);\r\n};\r\nvar _elm_lang$virtual_dom$VirtualDom$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;\r\nvar _elm_lang$virtual_dom$VirtualDom$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;\r\nvar _elm_lang$virtual_dom$VirtualDom$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;\r\nvar _elm_lang$virtual_dom$VirtualDom$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;\r\nvar _elm_lang$virtual_dom$VirtualDom$defaultOptions = {stopPropagation: false, preventDefault: false};\r\nvar _elm_lang$virtual_dom$VirtualDom$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;\r\nvar _elm_lang$virtual_dom$VirtualDom$on = F2(\r\n\tfunction (eventName, decoder) {\r\n\t\treturn A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom$defaultOptions, decoder);\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom$style = _elm_lang$virtual_dom$Native_VirtualDom.style;\r\nvar _elm_lang$virtual_dom$VirtualDom$mapProperty = _elm_lang$virtual_dom$Native_VirtualDom.mapProperty;\r\nvar _elm_lang$virtual_dom$VirtualDom$attributeNS = _elm_lang$virtual_dom$Native_VirtualDom.attributeNS;\r\nvar _elm_lang$virtual_dom$VirtualDom$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;\r\nvar _elm_lang$virtual_dom$VirtualDom$property = _elm_lang$virtual_dom$Native_VirtualDom.property;\r\nvar _elm_lang$virtual_dom$VirtualDom$map = _elm_lang$virtual_dom$Native_VirtualDom.map;\r\nvar _elm_lang$virtual_dom$VirtualDom$text = _elm_lang$virtual_dom$Native_VirtualDom.text;\r\nvar _elm_lang$virtual_dom$VirtualDom$node = _elm_lang$virtual_dom$Native_VirtualDom.node;\r\nvar _elm_lang$virtual_dom$VirtualDom$Options = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {stopPropagation: a, preventDefault: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom$Node = {ctor: 'Node'};\r\nvar _elm_lang$virtual_dom$VirtualDom$Property = {ctor: 'Property'};\r\n\r\nvar _elm_lang$html$Html$programWithFlags = _elm_lang$virtual_dom$VirtualDom$programWithFlags;\r\nvar _elm_lang$html$Html$program = _elm_lang$virtual_dom$VirtualDom$program;\r\nvar _elm_lang$html$Html$beginnerProgram = function (_p0) {\r\n\tvar _p1 = _p0;\r\n\treturn _elm_lang$html$Html$program(\r\n\t\t{\r\n\t\t\tinit: A2(\r\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t_p1.model,\r\n\t\t\t\t{ctor: '[]'}),\r\n\t\t\tupdate: F2(\r\n\t\t\t\tfunction (msg, model) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\tA2(_p1.update, msg, model),\r\n\t\t\t\t\t\t{ctor: '[]'});\r\n\t\t\t\t}),\r\n\t\t\tview: _p1.view,\r\n\t\t\tsubscriptions: function (_p2) {\r\n\t\t\t\treturn _elm_lang$core$Platform_Sub$none;\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$html$Html$map = _elm_lang$virtual_dom$VirtualDom$map;\r\nvar _elm_lang$html$Html$text = _elm_lang$virtual_dom$VirtualDom$text;\r\nvar _elm_lang$html$Html$node = _elm_lang$virtual_dom$VirtualDom$node;\r\nvar _elm_lang$html$Html$body = _elm_lang$html$Html$node('body');\r\nvar _elm_lang$html$Html$section = _elm_lang$html$Html$node('section');\r\nvar _elm_lang$html$Html$nav = _elm_lang$html$Html$node('nav');\r\nvar _elm_lang$html$Html$article = _elm_lang$html$Html$node('article');\r\nvar _elm_lang$html$Html$aside = _elm_lang$html$Html$node('aside');\r\nvar _elm_lang$html$Html$h1 = _elm_lang$html$Html$node('h1');\r\nvar _elm_lang$html$Html$h2 = _elm_lang$html$Html$node('h2');\r\nvar _elm_lang$html$Html$h3 = _elm_lang$html$Html$node('h3');\r\nvar _elm_lang$html$Html$h4 = _elm_lang$html$Html$node('h4');\r\nvar _elm_lang$html$Html$h5 = _elm_lang$html$Html$node('h5');\r\nvar _elm_lang$html$Html$h6 = _elm_lang$html$Html$node('h6');\r\nvar _elm_lang$html$Html$header = _elm_lang$html$Html$node('header');\r\nvar _elm_lang$html$Html$footer = _elm_lang$html$Html$node('footer');\r\nvar _elm_lang$html$Html$address = _elm_lang$html$Html$node('address');\r\nvar _elm_lang$html$Html$main_ = _elm_lang$html$Html$node('main');\r\nvar _elm_lang$html$Html$p = _elm_lang$html$Html$node('p');\r\nvar _elm_lang$html$Html$hr = _elm_lang$html$Html$node('hr');\r\nvar _elm_lang$html$Html$pre = _elm_lang$html$Html$node('pre');\r\nvar _elm_lang$html$Html$blockquote = _elm_lang$html$Html$node('blockquote');\r\nvar _elm_lang$html$Html$ol = _elm_lang$html$Html$node('ol');\r\nvar _elm_lang$html$Html$ul = _elm_lang$html$Html$node('ul');\r\nvar _elm_lang$html$Html$li = _elm_lang$html$Html$node('li');\r\nvar _elm_lang$html$Html$dl = _elm_lang$html$Html$node('dl');\r\nvar _elm_lang$html$Html$dt = _elm_lang$html$Html$node('dt');\r\nvar _elm_lang$html$Html$dd = _elm_lang$html$Html$node('dd');\r\nvar _elm_lang$html$Html$figure = _elm_lang$html$Html$node('figure');\r\nvar _elm_lang$html$Html$figcaption = _elm_lang$html$Html$node('figcaption');\r\nvar _elm_lang$html$Html$div = _elm_lang$html$Html$node('div');\r\nvar _elm_lang$html$Html$a = _elm_lang$html$Html$node('a');\r\nvar _elm_lang$html$Html$em = _elm_lang$html$Html$node('em');\r\nvar _elm_lang$html$Html$strong = _elm_lang$html$Html$node('strong');\r\nvar _elm_lang$html$Html$small = _elm_lang$html$Html$node('small');\r\nvar _elm_lang$html$Html$s = _elm_lang$html$Html$node('s');\r\nvar _elm_lang$html$Html$cite = _elm_lang$html$Html$node('cite');\r\nvar _elm_lang$html$Html$q = _elm_lang$html$Html$node('q');\r\nvar _elm_lang$html$Html$dfn = _elm_lang$html$Html$node('dfn');\r\nvar _elm_lang$html$Html$abbr = _elm_lang$html$Html$node('abbr');\r\nvar _elm_lang$html$Html$time = _elm_lang$html$Html$node('time');\r\nvar _elm_lang$html$Html$code = _elm_lang$html$Html$node('code');\r\nvar _elm_lang$html$Html$var = _elm_lang$html$Html$node('var');\r\nvar _elm_lang$html$Html$samp = _elm_lang$html$Html$node('samp');\r\nvar _elm_lang$html$Html$kbd = _elm_lang$html$Html$node('kbd');\r\nvar _elm_lang$html$Html$sub = _elm_lang$html$Html$node('sub');\r\nvar _elm_lang$html$Html$sup = _elm_lang$html$Html$node('sup');\r\nvar _elm_lang$html$Html$i = _elm_lang$html$Html$node('i');\r\nvar _elm_lang$html$Html$b = _elm_lang$html$Html$node('b');\r\nvar _elm_lang$html$Html$u = _elm_lang$html$Html$node('u');\r\nvar _elm_lang$html$Html$mark = _elm_lang$html$Html$node('mark');\r\nvar _elm_lang$html$Html$ruby = _elm_lang$html$Html$node('ruby');\r\nvar _elm_lang$html$Html$rt = _elm_lang$html$Html$node('rt');\r\nvar _elm_lang$html$Html$rp = _elm_lang$html$Html$node('rp');\r\nvar _elm_lang$html$Html$bdi = _elm_lang$html$Html$node('bdi');\r\nvar _elm_lang$html$Html$bdo = _elm_lang$html$Html$node('bdo');\r\nvar _elm_lang$html$Html$span = _elm_lang$html$Html$node('span');\r\nvar _elm_lang$html$Html$br = _elm_lang$html$Html$node('br');\r\nvar _elm_lang$html$Html$wbr = _elm_lang$html$Html$node('wbr');\r\nvar _elm_lang$html$Html$ins = _elm_lang$html$Html$node('ins');\r\nvar _elm_lang$html$Html$del = _elm_lang$html$Html$node('del');\r\nvar _elm_lang$html$Html$img = _elm_lang$html$Html$node('img');\r\nvar _elm_lang$html$Html$iframe = _elm_lang$html$Html$node('iframe');\r\nvar _elm_lang$html$Html$embed = _elm_lang$html$Html$node('embed');\r\nvar _elm_lang$html$Html$object = _elm_lang$html$Html$node('object');\r\nvar _elm_lang$html$Html$param = _elm_lang$html$Html$node('param');\r\nvar _elm_lang$html$Html$video = _elm_lang$html$Html$node('video');\r\nvar _elm_lang$html$Html$audio = _elm_lang$html$Html$node('audio');\r\nvar _elm_lang$html$Html$source = _elm_lang$html$Html$node('source');\r\nvar _elm_lang$html$Html$track = _elm_lang$html$Html$node('track');\r\nvar _elm_lang$html$Html$canvas = _elm_lang$html$Html$node('canvas');\r\nvar _elm_lang$html$Html$math = _elm_lang$html$Html$node('math');\r\nvar _elm_lang$html$Html$table = _elm_lang$html$Html$node('table');\r\nvar _elm_lang$html$Html$caption = _elm_lang$html$Html$node('caption');\r\nvar _elm_lang$html$Html$colgroup = _elm_lang$html$Html$node('colgroup');\r\nvar _elm_lang$html$Html$col = _elm_lang$html$Html$node('col');\r\nvar _elm_lang$html$Html$tbody = _elm_lang$html$Html$node('tbody');\r\nvar _elm_lang$html$Html$thead = _elm_lang$html$Html$node('thead');\r\nvar _elm_lang$html$Html$tfoot = _elm_lang$html$Html$node('tfoot');\r\nvar _elm_lang$html$Html$tr = _elm_lang$html$Html$node('tr');\r\nvar _elm_lang$html$Html$td = _elm_lang$html$Html$node('td');\r\nvar _elm_lang$html$Html$th = _elm_lang$html$Html$node('th');\r\nvar _elm_lang$html$Html$form = _elm_lang$html$Html$node('form');\r\nvar _elm_lang$html$Html$fieldset = _elm_lang$html$Html$node('fieldset');\r\nvar _elm_lang$html$Html$legend = _elm_lang$html$Html$node('legend');\r\nvar _elm_lang$html$Html$label = _elm_lang$html$Html$node('label');\r\nvar _elm_lang$html$Html$input = _elm_lang$html$Html$node('input');\r\nvar _elm_lang$html$Html$button = _elm_lang$html$Html$node('button');\r\nvar _elm_lang$html$Html$select = _elm_lang$html$Html$node('select');\r\nvar _elm_lang$html$Html$datalist = _elm_lang$html$Html$node('datalist');\r\nvar _elm_lang$html$Html$optgroup = _elm_lang$html$Html$node('optgroup');\r\nvar _elm_lang$html$Html$option = _elm_lang$html$Html$node('option');\r\nvar _elm_lang$html$Html$textarea = _elm_lang$html$Html$node('textarea');\r\nvar _elm_lang$html$Html$keygen = _elm_lang$html$Html$node('keygen');\r\nvar _elm_lang$html$Html$output = _elm_lang$html$Html$node('output');\r\nvar _elm_lang$html$Html$progress = _elm_lang$html$Html$node('progress');\r\nvar _elm_lang$html$Html$meter = _elm_lang$html$Html$node('meter');\r\nvar _elm_lang$html$Html$details = _elm_lang$html$Html$node('details');\r\nvar _elm_lang$html$Html$summary = _elm_lang$html$Html$node('summary');\r\nvar _elm_lang$html$Html$menuitem = _elm_lang$html$Html$node('menuitem');\r\nvar _elm_lang$html$Html$menu = _elm_lang$html$Html$node('menu');\r\n\r\nvar _elm_lang$html$Html_Attributes$map = _elm_lang$virtual_dom$VirtualDom$mapProperty;\r\nvar _elm_lang$html$Html_Attributes$attribute = _elm_lang$virtual_dom$VirtualDom$attribute;\r\nvar _elm_lang$html$Html_Attributes$contextmenu = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'contextmenu', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$draggable = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'draggable', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$itemprop = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'itemprop', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$tabindex = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'tabIndex',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$charset = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'charset', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$height = function (value) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'height',\r\n\t\t_elm_lang$core$Basics$toString(value));\r\n};\r\nvar _elm_lang$html$Html_Attributes$width = function (value) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'width',\r\n\t\t_elm_lang$core$Basics$toString(value));\r\n};\r\nvar _elm_lang$html$Html_Attributes$formaction = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'formAction', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$list = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'list', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$minlength = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'minLength',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$maxlength = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'maxlength',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$size = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'size',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$form = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'form', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$cols = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'cols',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$rows = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'rows',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$challenge = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'challenge', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$media = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'media', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$rel = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'rel', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$datetime = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'datetime', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$pubdate = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'pubdate', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$colspan = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'colspan',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$rowspan = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$attribute,\r\n\t\t'rowspan',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$manifest = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'manifest', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$property = _elm_lang$virtual_dom$VirtualDom$property;\r\nvar _elm_lang$html$Html_Attributes$stringProperty = F2(\r\n\tfunction (name, string) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$html$Html_Attributes$property,\r\n\t\t\tname,\r\n\t\t\t_elm_lang$core$Json_Encode$string(string));\r\n\t});\r\nvar _elm_lang$html$Html_Attributes$class = function (name) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'className', name);\r\n};\r\nvar _elm_lang$html$Html_Attributes$id = function (name) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'id', name);\r\n};\r\nvar _elm_lang$html$Html_Attributes$title = function (name) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'title', name);\r\n};\r\nvar _elm_lang$html$Html_Attributes$accesskey = function ($char) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'accessKey',\r\n\t\t_elm_lang$core$String$fromChar($char));\r\n};\r\nvar _elm_lang$html$Html_Attributes$dir = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dir', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$dropzone = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dropzone', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$lang = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'lang', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$content = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'content', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$httpEquiv = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'httpEquiv', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$language = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'language', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$src = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'src', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$alt = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'alt', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$preload = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'preload', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$poster = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'poster', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$kind = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'kind', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$srclang = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srclang', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$sandbox = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'sandbox', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$srcdoc = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srcdoc', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$type_ = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'type', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$value = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'value', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$defaultValue = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'defaultValue', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$placeholder = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'placeholder', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$accept = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'accept', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$acceptCharset = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'acceptCharset', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$action = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'action', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$autocomplete = function (bool) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'autocomplete',\r\n\t\tbool ? 'on' : 'off');\r\n};\r\nvar _elm_lang$html$Html_Attributes$enctype = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'enctype', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$method = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'method', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$name = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'name', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$pattern = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'pattern', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$for = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'htmlFor', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$max = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'max', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$min = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'min', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$step = function (n) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'step', n);\r\n};\r\nvar _elm_lang$html$Html_Attributes$wrap = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'wrap', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$usemap = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'useMap', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$shape = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'shape', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$coords = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'coords', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$keytype = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'keytype', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$align = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'align', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$cite = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'cite', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$href = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'href', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$target = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'target', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$downloadAs = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'download', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$hreflang = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'hreflang', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$ping = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'ping', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$start = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'start',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$headers = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'headers', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$scope = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'scope', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$boolProperty = F2(\r\n\tfunction (name, bool) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$html$Html_Attributes$property,\r\n\t\t\tname,\r\n\t\t\t_elm_lang$core$Json_Encode$bool(bool));\r\n\t});\r\nvar _elm_lang$html$Html_Attributes$hidden = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'hidden', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$contenteditable = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'contentEditable', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$spellcheck = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'spellcheck', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$async = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'async', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$defer = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'defer', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$scoped = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'scoped', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$autoplay = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autoplay', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$controls = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'controls', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$loop = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'loop', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$default = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'default', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$seamless = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'seamless', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$checked = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'checked', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$selected = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'selected', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$autofocus = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autofocus', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$disabled = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'disabled', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$multiple = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'multiple', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$novalidate = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'noValidate', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$readonly = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'readOnly', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$required = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'required', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$ismap = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'isMap', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$download = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'download', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$reversed = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'reversed', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$classList = function (list) {\r\n\treturn _elm_lang$html$Html_Attributes$class(\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$String$join,\r\n\t\t\t' ',\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t_elm_lang$core$Tuple$first,\r\n\t\t\t\tA2(_elm_lang$core$List$filter, _elm_lang$core$Tuple$second, list))));\r\n};\r\nvar _elm_lang$html$Html_Attributes$style = _elm_lang$virtual_dom$VirtualDom$style;\r\n\r\nvar _elm_lang$html$Html_Events$keyCode = A2(_elm_lang$core$Json_Decode$field, 'keyCode', _elm_lang$core$Json_Decode$int);\r\nvar _elm_lang$html$Html_Events$targetChecked = A2(\r\n\t_elm_lang$core$Json_Decode$at,\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: 'target',\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: 'checked',\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t}\r\n\t},\r\n\t_elm_lang$core$Json_Decode$bool);\r\nvar _elm_lang$html$Html_Events$targetValue = A2(\r\n\t_elm_lang$core$Json_Decode$at,\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: 'target',\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: 'value',\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t}\r\n\t},\r\n\t_elm_lang$core$Json_Decode$string);\r\nvar _elm_lang$html$Html_Events$defaultOptions = _elm_lang$virtual_dom$VirtualDom$defaultOptions;\r\nvar _elm_lang$html$Html_Events$onWithOptions = _elm_lang$virtual_dom$VirtualDom$onWithOptions;\r\nvar _elm_lang$html$Html_Events$on = _elm_lang$virtual_dom$VirtualDom$on;\r\nvar _elm_lang$html$Html_Events$onFocus = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'focus',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onBlur = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'blur',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onSubmitOptions = _elm_lang$core$Native_Utils.update(\r\n\t_elm_lang$html$Html_Events$defaultOptions,\r\n\t{preventDefault: true});\r\nvar _elm_lang$html$Html_Events$onSubmit = function (msg) {\r\n\treturn A3(\r\n\t\t_elm_lang$html$Html_Events$onWithOptions,\r\n\t\t'submit',\r\n\t\t_elm_lang$html$Html_Events$onSubmitOptions,\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onCheck = function (tagger) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'change',\r\n\t\tA2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetChecked));\r\n};\r\nvar _elm_lang$html$Html_Events$onInput = function (tagger) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'input',\r\n\t\tA2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetValue));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseOut = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseout',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseOver = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseover',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseLeave = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseleave',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseEnter = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseenter',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseUp = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseup',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseDown = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mousedown',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onDoubleClick = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'dblclick',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onClick = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'click',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$Options = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {stopPropagation: a, preventDefault: b};\r\n\t});\r\n\r\nvar _elm_lang$svg$Svg$map = _elm_lang$virtual_dom$VirtualDom$map;\r\nvar _elm_lang$svg$Svg$text = _elm_lang$virtual_dom$VirtualDom$text;\r\nvar _elm_lang$svg$Svg$svgNamespace = A2(\r\n\t_elm_lang$virtual_dom$VirtualDom$property,\r\n\t'namespace',\r\n\t_elm_lang$core$Json_Encode$string('http://www.w3.org/2000/svg'));\r\nvar _elm_lang$svg$Svg$node = F3(\r\n\tfunction (name, attributes, children) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$virtual_dom$VirtualDom$node,\r\n\t\t\tname,\r\n\t\t\t{ctor: '::', _0: _elm_lang$svg$Svg$svgNamespace, _1: attributes},\r\n\t\t\tchildren);\r\n\t});\r\nvar _elm_lang$svg$Svg$svg = _elm_lang$svg$Svg$node('svg');\r\nvar _elm_lang$svg$Svg$foreignObject = _elm_lang$svg$Svg$node('foreignObject');\r\nvar _elm_lang$svg$Svg$animate = _elm_lang$svg$Svg$node('animate');\r\nvar _elm_lang$svg$Svg$animateColor = _elm_lang$svg$Svg$node('animateColor');\r\nvar _elm_lang$svg$Svg$animateMotion = _elm_lang$svg$Svg$node('animateMotion');\r\nvar _elm_lang$svg$Svg$animateTransform = _elm_lang$svg$Svg$node('animateTransform');\r\nvar _elm_lang$svg$Svg$mpath = _elm_lang$svg$Svg$node('mpath');\r\nvar _elm_lang$svg$Svg$set = _elm_lang$svg$Svg$node('set');\r\nvar _elm_lang$svg$Svg$a = _elm_lang$svg$Svg$node('a');\r\nvar _elm_lang$svg$Svg$defs = _elm_lang$svg$Svg$node('defs');\r\nvar _elm_lang$svg$Svg$g = _elm_lang$svg$Svg$node('g');\r\nvar _elm_lang$svg$Svg$marker = _elm_lang$svg$Svg$node('marker');\r\nvar _elm_lang$svg$Svg$mask = _elm_lang$svg$Svg$node('mask');\r\nvar _elm_lang$svg$Svg$pattern = _elm_lang$svg$Svg$node('pattern');\r\nvar _elm_lang$svg$Svg$switch = _elm_lang$svg$Svg$node('switch');\r\nvar _elm_lang$svg$Svg$symbol = _elm_lang$svg$Svg$node('symbol');\r\nvar _elm_lang$svg$Svg$desc = _elm_lang$svg$Svg$node('desc');\r\nvar _elm_lang$svg$Svg$metadata = _elm_lang$svg$Svg$node('metadata');\r\nvar _elm_lang$svg$Svg$title = _elm_lang$svg$Svg$node('title');\r\nvar _elm_lang$svg$Svg$feBlend = _elm_lang$svg$Svg$node('feBlend');\r\nvar _elm_lang$svg$Svg$feColorMatrix = _elm_lang$svg$Svg$node('feColorMatrix');\r\nvar _elm_lang$svg$Svg$feComponentTransfer = _elm_lang$svg$Svg$node('feComponentTransfer');\r\nvar _elm_lang$svg$Svg$feComposite = _elm_lang$svg$Svg$node('feComposite');\r\nvar _elm_lang$svg$Svg$feConvolveMatrix = _elm_lang$svg$Svg$node('feConvolveMatrix');\r\nvar _elm_lang$svg$Svg$feDiffuseLighting = _elm_lang$svg$Svg$node('feDiffuseLighting');\r\nvar _elm_lang$svg$Svg$feDisplacementMap = _elm_lang$svg$Svg$node('feDisplacementMap');\r\nvar _elm_lang$svg$Svg$feFlood = _elm_lang$svg$Svg$node('feFlood');\r\nvar _elm_lang$svg$Svg$feFuncA = _elm_lang$svg$Svg$node('feFuncA');\r\nvar _elm_lang$svg$Svg$feFuncB = _elm_lang$svg$Svg$node('feFuncB');\r\nvar _elm_lang$svg$Svg$feFuncG = _elm_lang$svg$Svg$node('feFuncG');\r\nvar _elm_lang$svg$Svg$feFuncR = _elm_lang$svg$Svg$node('feFuncR');\r\nvar _elm_lang$svg$Svg$feGaussianBlur = _elm_lang$svg$Svg$node('feGaussianBlur');\r\nvar _elm_lang$svg$Svg$feImage = _elm_lang$svg$Svg$node('feImage');\r\nvar _elm_lang$svg$Svg$feMerge = _elm_lang$svg$Svg$node('feMerge');\r\nvar _elm_lang$svg$Svg$feMergeNode = _elm_lang$svg$Svg$node('feMergeNode');\r\nvar _elm_lang$svg$Svg$feMorphology = _elm_lang$svg$Svg$node('feMorphology');\r\nvar _elm_lang$svg$Svg$feOffset = _elm_lang$svg$Svg$node('feOffset');\r\nvar _elm_lang$svg$Svg$feSpecularLighting = _elm_lang$svg$Svg$node('feSpecularLighting');\r\nvar _elm_lang$svg$Svg$feTile = _elm_lang$svg$Svg$node('feTile');\r\nvar _elm_lang$svg$Svg$feTurbulence = _elm_lang$svg$Svg$node('feTurbulence');\r\nvar _elm_lang$svg$Svg$font = _elm_lang$svg$Svg$node('font');\r\nvar _elm_lang$svg$Svg$linearGradient = _elm_lang$svg$Svg$node('linearGradient');\r\nvar _elm_lang$svg$Svg$radialGradient = _elm_lang$svg$Svg$node('radialGradient');\r\nvar _elm_lang$svg$Svg$stop = _elm_lang$svg$Svg$node('stop');\r\nvar _elm_lang$svg$Svg$circle = _elm_lang$svg$Svg$node('circle');\r\nvar _elm_lang$svg$Svg$ellipse = _elm_lang$svg$Svg$node('ellipse');\r\nvar _elm_lang$svg$Svg$image = _elm_lang$svg$Svg$node('image');\r\nvar _elm_lang$svg$Svg$line = _elm_lang$svg$Svg$node('line');\r\nvar _elm_lang$svg$Svg$path = _elm_lang$svg$Svg$node('path');\r\nvar _elm_lang$svg$Svg$polygon = _elm_lang$svg$Svg$node('polygon');\r\nvar _elm_lang$svg$Svg$polyline = _elm_lang$svg$Svg$node('polyline');\r\nvar _elm_lang$svg$Svg$rect = _elm_lang$svg$Svg$node('rect');\r\nvar _elm_lang$svg$Svg$use = _elm_lang$svg$Svg$node('use');\r\nvar _elm_lang$svg$Svg$feDistantLight = _elm_lang$svg$Svg$node('feDistantLight');\r\nvar _elm_lang$svg$Svg$fePointLight = _elm_lang$svg$Svg$node('fePointLight');\r\nvar _elm_lang$svg$Svg$feSpotLight = _elm_lang$svg$Svg$node('feSpotLight');\r\nvar _elm_lang$svg$Svg$altGlyph = _elm_lang$svg$Svg$node('altGlyph');\r\nvar _elm_lang$svg$Svg$altGlyphDef = _elm_lang$svg$Svg$node('altGlyphDef');\r\nvar _elm_lang$svg$Svg$altGlyphItem = _elm_lang$svg$Svg$node('altGlyphItem');\r\nvar _elm_lang$svg$Svg$glyph = _elm_lang$svg$Svg$node('glyph');\r\nvar _elm_lang$svg$Svg$glyphRef = _elm_lang$svg$Svg$node('glyphRef');\r\nvar _elm_lang$svg$Svg$textPath = _elm_lang$svg$Svg$node('textPath');\r\nvar _elm_lang$svg$Svg$text_ = _elm_lang$svg$Svg$node('text');\r\nvar _elm_lang$svg$Svg$tref = _elm_lang$svg$Svg$node('tref');\r\nvar _elm_lang$svg$Svg$tspan = _elm_lang$svg$Svg$node('tspan');\r\nvar _elm_lang$svg$Svg$clipPath = _elm_lang$svg$Svg$node('clipPath');\r\nvar _elm_lang$svg$Svg$colorProfile = _elm_lang$svg$Svg$node('colorProfile');\r\nvar _elm_lang$svg$Svg$cursor = _elm_lang$svg$Svg$node('cursor');\r\nvar _elm_lang$svg$Svg$filter = _elm_lang$svg$Svg$node('filter');\r\nvar _elm_lang$svg$Svg$script = _elm_lang$svg$Svg$node('script');\r\nvar _elm_lang$svg$Svg$style = _elm_lang$svg$Svg$node('style');\r\nvar _elm_lang$svg$Svg$view = _elm_lang$svg$Svg$node('view');\r\n\r\nvar _elm_lang$svg$Svg_Attributes$writingMode = _elm_lang$virtual_dom$VirtualDom$attribute('writing-mode');\r\nvar _elm_lang$svg$Svg_Attributes$wordSpacing = _elm_lang$virtual_dom$VirtualDom$attribute('word-spacing');\r\nvar _elm_lang$svg$Svg_Attributes$visibility = _elm_lang$virtual_dom$VirtualDom$attribute('visibility');\r\nvar _elm_lang$svg$Svg_Attributes$unicodeBidi = _elm_lang$virtual_dom$VirtualDom$attribute('unicode-bidi');\r\nvar _elm_lang$svg$Svg_Attributes$textRendering = _elm_lang$virtual_dom$VirtualDom$attribute('text-rendering');\r\nvar _elm_lang$svg$Svg_Attributes$textDecoration = _elm_lang$virtual_dom$VirtualDom$attribute('text-decoration');\r\nvar _elm_lang$svg$Svg_Attributes$textAnchor = _elm_lang$virtual_dom$VirtualDom$attribute('text-anchor');\r\nvar _elm_lang$svg$Svg_Attributes$stroke = _elm_lang$virtual_dom$VirtualDom$attribute('stroke');\r\nvar _elm_lang$svg$Svg_Attributes$strokeWidth = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-width');\r\nvar _elm_lang$svg$Svg_Attributes$strokeOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-opacity');\r\nvar _elm_lang$svg$Svg_Attributes$strokeMiterlimit = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-miterlimit');\r\nvar _elm_lang$svg$Svg_Attributes$strokeLinejoin = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-linejoin');\r\nvar _elm_lang$svg$Svg_Attributes$strokeLinecap = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-linecap');\r\nvar _elm_lang$svg$Svg_Attributes$strokeDashoffset = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-dashoffset');\r\nvar _elm_lang$svg$Svg_Attributes$strokeDasharray = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-dasharray');\r\nvar _elm_lang$svg$Svg_Attributes$stopOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('stop-opacity');\r\nvar _elm_lang$svg$Svg_Attributes$stopColor = _elm_lang$virtual_dom$VirtualDom$attribute('stop-color');\r\nvar _elm_lang$svg$Svg_Attributes$shapeRendering = _elm_lang$virtual_dom$VirtualDom$attribute('shape-rendering');\r\nvar _elm_lang$svg$Svg_Attributes$pointerEvents = _elm_lang$virtual_dom$VirtualDom$attribute('pointer-events');\r\nvar _elm_lang$svg$Svg_Attributes$overflow = _elm_lang$virtual_dom$VirtualDom$attribute('overflow');\r\nvar _elm_lang$svg$Svg_Attributes$opacity = _elm_lang$virtual_dom$VirtualDom$attribute('opacity');\r\nvar _elm_lang$svg$Svg_Attributes$mask = _elm_lang$virtual_dom$VirtualDom$attribute('mask');\r\nvar _elm_lang$svg$Svg_Attributes$markerStart = _elm_lang$virtual_dom$VirtualDom$attribute('marker-start');\r\nvar _elm_lang$svg$Svg_Attributes$markerMid = _elm_lang$virtual_dom$VirtualDom$attribute('marker-mid');\r\nvar _elm_lang$svg$Svg_Attributes$markerEnd = _elm_lang$virtual_dom$VirtualDom$attribute('marker-end');\r\nvar _elm_lang$svg$Svg_Attributes$lightingColor = _elm_lang$virtual_dom$VirtualDom$attribute('lighting-color');\r\nvar _elm_lang$svg$Svg_Attributes$letterSpacing = _elm_lang$virtual_dom$VirtualDom$attribute('letter-spacing');\r\nvar _elm_lang$svg$Svg_Attributes$kerning = _elm_lang$virtual_dom$VirtualDom$attribute('kerning');\r\nvar _elm_lang$svg$Svg_Attributes$imageRendering = _elm_lang$virtual_dom$VirtualDom$attribute('image-rendering');\r\nvar _elm_lang$svg$Svg_Attributes$glyphOrientationVertical = _elm_lang$virtual_dom$VirtualDom$attribute('glyph-orientation-vertical');\r\nvar _elm_lang$svg$Svg_Attributes$glyphOrientationHorizontal = _elm_lang$virtual_dom$VirtualDom$attribute('glyph-orientation-horizontal');\r\nvar _elm_lang$svg$Svg_Attributes$fontWeight = _elm_lang$virtual_dom$VirtualDom$attribute('font-weight');\r\nvar _elm_lang$svg$Svg_Attributes$fontVariant = _elm_lang$virtual_dom$VirtualDom$attribute('font-variant');\r\nvar _elm_lang$svg$Svg_Attributes$fontStyle = _elm_lang$virtual_dom$VirtualDom$attribute('font-style');\r\nvar _elm_lang$svg$Svg_Attributes$fontStretch = _elm_lang$virtual_dom$VirtualDom$attribute('font-stretch');\r\nvar _elm_lang$svg$Svg_Attributes$fontSize = _elm_lang$virtual_dom$VirtualDom$attribute('font-size');\r\nvar _elm_lang$svg$Svg_Attributes$fontSizeAdjust = _elm_lang$virtual_dom$VirtualDom$attribute('font-size-adjust');\r\nvar _elm_lang$svg$Svg_Attributes$fontFamily = _elm_lang$virtual_dom$VirtualDom$attribute('font-family');\r\nvar _elm_lang$svg$Svg_Attributes$floodOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('flood-opacity');\r\nvar _elm_lang$svg$Svg_Attributes$floodColor = _elm_lang$virtual_dom$VirtualDom$attribute('flood-color');\r\nvar _elm_lang$svg$Svg_Attributes$filter = _elm_lang$virtual_dom$VirtualDom$attribute('filter');\r\nvar _elm_lang$svg$Svg_Attributes$fill = _elm_lang$virtual_dom$VirtualDom$attribute('fill');\r\nvar _elm_lang$svg$Svg_Attributes$fillRule = _elm_lang$virtual_dom$VirtualDom$attribute('fill-rule');\r\nvar _elm_lang$svg$Svg_Attributes$fillOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('fill-opacity');\r\nvar _elm_lang$svg$Svg_Attributes$enableBackground = _elm_lang$virtual_dom$VirtualDom$attribute('enable-background');\r\nvar _elm_lang$svg$Svg_Attributes$dominantBaseline = _elm_lang$virtual_dom$VirtualDom$attribute('dominant-baseline');\r\nvar _elm_lang$svg$Svg_Attributes$display = _elm_lang$virtual_dom$VirtualDom$attribute('display');\r\nvar _elm_lang$svg$Svg_Attributes$direction = _elm_lang$virtual_dom$VirtualDom$attribute('direction');\r\nvar _elm_lang$svg$Svg_Attributes$cursor = _elm_lang$virtual_dom$VirtualDom$attribute('cursor');\r\nvar _elm_lang$svg$Svg_Attributes$color = _elm_lang$virtual_dom$VirtualDom$attribute('color');\r\nvar _elm_lang$svg$Svg_Attributes$colorRendering = _elm_lang$virtual_dom$VirtualDom$attribute('color-rendering');\r\nvar _elm_lang$svg$Svg_Attributes$colorProfile = _elm_lang$virtual_dom$VirtualDom$attribute('color-profile');\r\nvar _elm_lang$svg$Svg_Attributes$colorInterpolation = _elm_lang$virtual_dom$VirtualDom$attribute('color-interpolation');\r\nvar _elm_lang$svg$Svg_Attributes$colorInterpolationFilters = _elm_lang$virtual_dom$VirtualDom$attribute('color-interpolation-filters');\r\nvar _elm_lang$svg$Svg_Attributes$clip = _elm_lang$virtual_dom$VirtualDom$attribute('clip');\r\nvar _elm_lang$svg$Svg_Attributes$clipRule = _elm_lang$virtual_dom$VirtualDom$attribute('clip-rule');\r\nvar _elm_lang$svg$Svg_Attributes$clipPath = _elm_lang$virtual_dom$VirtualDom$attribute('clip-path');\r\nvar _elm_lang$svg$Svg_Attributes$baselineShift = _elm_lang$virtual_dom$VirtualDom$attribute('baseline-shift');\r\nvar _elm_lang$svg$Svg_Attributes$alignmentBaseline = _elm_lang$virtual_dom$VirtualDom$attribute('alignment-baseline');\r\nvar _elm_lang$svg$Svg_Attributes$zoomAndPan = _elm_lang$virtual_dom$VirtualDom$attribute('zoomAndPan');\r\nvar _elm_lang$svg$Svg_Attributes$z = _elm_lang$virtual_dom$VirtualDom$attribute('z');\r\nvar _elm_lang$svg$Svg_Attributes$yChannelSelector = _elm_lang$virtual_dom$VirtualDom$attribute('yChannelSelector');\r\nvar _elm_lang$svg$Svg_Attributes$y2 = _elm_lang$virtual_dom$VirtualDom$attribute('y2');\r\nvar _elm_lang$svg$Svg_Attributes$y1 = _elm_lang$virtual_dom$VirtualDom$attribute('y1');\r\nvar _elm_lang$svg$Svg_Attributes$y = _elm_lang$virtual_dom$VirtualDom$attribute('y');\r\nvar _elm_lang$svg$Svg_Attributes$xmlSpace = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/XML/1998/namespace', 'xml:space');\r\nvar _elm_lang$svg$Svg_Attributes$xmlLang = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/XML/1998/namespace', 'xml:lang');\r\nvar _elm_lang$svg$Svg_Attributes$xmlBase = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/XML/1998/namespace', 'xml:base');\r\nvar _elm_lang$svg$Svg_Attributes$xlinkType = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:type');\r\nvar _elm_lang$svg$Svg_Attributes$xlinkTitle = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:title');\r\nvar _elm_lang$svg$Svg_Attributes$xlinkShow = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:show');\r\nvar _elm_lang$svg$Svg_Attributes$xlinkRole = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:role');\r\nvar _elm_lang$svg$Svg_Attributes$xlinkHref = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:href');\r\nvar _elm_lang$svg$Svg_Attributes$xlinkArcrole = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:arcrole');\r\nvar _elm_lang$svg$Svg_Attributes$xlinkActuate = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:actuate');\r\nvar _elm_lang$svg$Svg_Attributes$xChannelSelector = _elm_lang$virtual_dom$VirtualDom$attribute('xChannelSelector');\r\nvar _elm_lang$svg$Svg_Attributes$x2 = _elm_lang$virtual_dom$VirtualDom$attribute('x2');\r\nvar _elm_lang$svg$Svg_Attributes$x1 = _elm_lang$virtual_dom$VirtualDom$attribute('x1');\r\nvar _elm_lang$svg$Svg_Attributes$xHeight = _elm_lang$virtual_dom$VirtualDom$attribute('x-height');\r\nvar _elm_lang$svg$Svg_Attributes$x = _elm_lang$virtual_dom$VirtualDom$attribute('x');\r\nvar _elm_lang$svg$Svg_Attributes$widths = _elm_lang$virtual_dom$VirtualDom$attribute('widths');\r\nvar _elm_lang$svg$Svg_Attributes$width = _elm_lang$virtual_dom$VirtualDom$attribute('width');\r\nvar _elm_lang$svg$Svg_Attributes$viewTarget = _elm_lang$virtual_dom$VirtualDom$attribute('viewTarget');\r\nvar _elm_lang$svg$Svg_Attributes$viewBox = _elm_lang$virtual_dom$VirtualDom$attribute('viewBox');\r\nvar _elm_lang$svg$Svg_Attributes$vertOriginY = _elm_lang$virtual_dom$VirtualDom$attribute('vert-origin-y');\r\nvar _elm_lang$svg$Svg_Attributes$vertOriginX = _elm_lang$virtual_dom$VirtualDom$attribute('vert-origin-x');\r\nvar _elm_lang$svg$Svg_Attributes$vertAdvY = _elm_lang$virtual_dom$VirtualDom$attribute('vert-adv-y');\r\nvar _elm_lang$svg$Svg_Attributes$version = _elm_lang$virtual_dom$VirtualDom$attribute('version');\r\nvar _elm_lang$svg$Svg_Attributes$values = _elm_lang$virtual_dom$VirtualDom$attribute('values');\r\nvar _elm_lang$svg$Svg_Attributes$vMathematical = _elm_lang$virtual_dom$VirtualDom$attribute('v-mathematical');\r\nvar _elm_lang$svg$Svg_Attributes$vIdeographic = _elm_lang$virtual_dom$VirtualDom$attribute('v-ideographic');\r\nvar _elm_lang$svg$Svg_Attributes$vHanging = _elm_lang$virtual_dom$VirtualDom$attribute('v-hanging');\r\nvar _elm_lang$svg$Svg_Attributes$vAlphabetic = _elm_lang$virtual_dom$VirtualDom$attribute('v-alphabetic');\r\nvar _elm_lang$svg$Svg_Attributes$unitsPerEm = _elm_lang$virtual_dom$VirtualDom$attribute('units-per-em');\r\nvar _elm_lang$svg$Svg_Attributes$unicodeRange = _elm_lang$virtual_dom$VirtualDom$attribute('unicode-range');\r\nvar _elm_lang$svg$Svg_Attributes$unicode = _elm_lang$virtual_dom$VirtualDom$attribute('unicode');\r\nvar _elm_lang$svg$Svg_Attributes$underlineThickness = _elm_lang$virtual_dom$VirtualDom$attribute('underline-thickness');\r\nvar _elm_lang$svg$Svg_Attributes$underlinePosition = _elm_lang$virtual_dom$VirtualDom$attribute('underline-position');\r\nvar _elm_lang$svg$Svg_Attributes$u2 = _elm_lang$virtual_dom$VirtualDom$attribute('u2');\r\nvar _elm_lang$svg$Svg_Attributes$u1 = _elm_lang$virtual_dom$VirtualDom$attribute('u1');\r\nvar _elm_lang$svg$Svg_Attributes$type_ = _elm_lang$virtual_dom$VirtualDom$attribute('type');\r\nvar _elm_lang$svg$Svg_Attributes$transform = _elm_lang$virtual_dom$VirtualDom$attribute('transform');\r\nvar _elm_lang$svg$Svg_Attributes$to = _elm_lang$virtual_dom$VirtualDom$attribute('to');\r\nvar _elm_lang$svg$Svg_Attributes$title = _elm_lang$virtual_dom$VirtualDom$attribute('title');\r\nvar _elm_lang$svg$Svg_Attributes$textLength = _elm_lang$virtual_dom$VirtualDom$attribute('textLength');\r\nvar _elm_lang$svg$Svg_Attributes$targetY = _elm_lang$virtual_dom$VirtualDom$attribute('targetY');\r\nvar _elm_lang$svg$Svg_Attributes$targetX = _elm_lang$virtual_dom$VirtualDom$attribute('targetX');\r\nvar _elm_lang$svg$Svg_Attributes$target = _elm_lang$virtual_dom$VirtualDom$attribute('target');\r\nvar _elm_lang$svg$Svg_Attributes$tableValues = _elm_lang$virtual_dom$VirtualDom$attribute('tableValues');\r\nvar _elm_lang$svg$Svg_Attributes$systemLanguage = _elm_lang$virtual_dom$VirtualDom$attribute('systemLanguage');\r\nvar _elm_lang$svg$Svg_Attributes$surfaceScale = _elm_lang$virtual_dom$VirtualDom$attribute('surfaceScale');\r\nvar _elm_lang$svg$Svg_Attributes$style = _elm_lang$virtual_dom$VirtualDom$attribute('style');\r\nvar _elm_lang$svg$Svg_Attributes$string = _elm_lang$virtual_dom$VirtualDom$attribute('string');\r\nvar _elm_lang$svg$Svg_Attributes$strikethroughThickness = _elm_lang$virtual_dom$VirtualDom$attribute('strikethrough-thickness');\r\nvar _elm_lang$svg$Svg_Attributes$strikethroughPosition = _elm_lang$virtual_dom$VirtualDom$attribute('strikethrough-position');\r\nvar _elm_lang$svg$Svg_Attributes$stitchTiles = _elm_lang$virtual_dom$VirtualDom$attribute('stitchTiles');\r\nvar _elm_lang$svg$Svg_Attributes$stemv = _elm_lang$virtual_dom$VirtualDom$attribute('stemv');\r\nvar _elm_lang$svg$Svg_Attributes$stemh = _elm_lang$virtual_dom$VirtualDom$attribute('stemh');\r\nvar _elm_lang$svg$Svg_Attributes$stdDeviation = _elm_lang$virtual_dom$VirtualDom$attribute('stdDeviation');\r\nvar _elm_lang$svg$Svg_Attributes$startOffset = _elm_lang$virtual_dom$VirtualDom$attribute('startOffset');\r\nvar _elm_lang$svg$Svg_Attributes$spreadMethod = _elm_lang$virtual_dom$VirtualDom$attribute('spreadMethod');\r\nvar _elm_lang$svg$Svg_Attributes$speed = _elm_lang$virtual_dom$VirtualDom$attribute('speed');\r\nvar _elm_lang$svg$Svg_Attributes$specularExponent = _elm_lang$virtual_dom$VirtualDom$attribute('specularExponent');\r\nvar _elm_lang$svg$Svg_Attributes$specularConstant = _elm_lang$virtual_dom$VirtualDom$attribute('specularConstant');\r\nvar _elm_lang$svg$Svg_Attributes$spacing = _elm_lang$virtual_dom$VirtualDom$attribute('spacing');\r\nvar _elm_lang$svg$Svg_Attributes$slope = _elm_lang$virtual_dom$VirtualDom$attribute('slope');\r\nvar _elm_lang$svg$Svg_Attributes$seed = _elm_lang$virtual_dom$VirtualDom$attribute('seed');\r\nvar _elm_lang$svg$Svg_Attributes$scale = _elm_lang$virtual_dom$VirtualDom$attribute('scale');\r\nvar _elm_lang$svg$Svg_Attributes$ry = _elm_lang$virtual_dom$VirtualDom$attribute('ry');\r\nvar _elm_lang$svg$Svg_Attributes$rx = _elm_lang$virtual_dom$VirtualDom$attribute('rx');\r\nvar _elm_lang$svg$Svg_Attributes$rotate = _elm_lang$virtual_dom$VirtualDom$attribute('rotate');\r\nvar _elm_lang$svg$Svg_Attributes$result = _elm_lang$virtual_dom$VirtualDom$attribute('result');\r\nvar _elm_lang$svg$Svg_Attributes$restart = _elm_lang$virtual_dom$VirtualDom$attribute('restart');\r\nvar _elm_lang$svg$Svg_Attributes$requiredFeatures = _elm_lang$virtual_dom$VirtualDom$attribute('requiredFeatures');\r\nvar _elm_lang$svg$Svg_Attributes$requiredExtensions = _elm_lang$virtual_dom$VirtualDom$attribute('requiredExtensions');\r\nvar _elm_lang$svg$Svg_Attributes$repeatDur = _elm_lang$virtual_dom$VirtualDom$attribute('repeatDur');\r\nvar _elm_lang$svg$Svg_Attributes$repeatCount = _elm_lang$virtual_dom$VirtualDom$attribute('repeatCount');\r\nvar _elm_lang$svg$Svg_Attributes$renderingIntent = _elm_lang$virtual_dom$VirtualDom$attribute('rendering-intent');\r\nvar _elm_lang$svg$Svg_Attributes$refY = _elm_lang$virtual_dom$VirtualDom$attribute('refY');\r\nvar _elm_lang$svg$Svg_Attributes$refX = _elm_lang$virtual_dom$VirtualDom$attribute('refX');\r\nvar _elm_lang$svg$Svg_Attributes$radius = _elm_lang$virtual_dom$VirtualDom$attribute('radius');\r\nvar _elm_lang$svg$Svg_Attributes$r = _elm_lang$virtual_dom$VirtualDom$attribute('r');\r\nvar _elm_lang$svg$Svg_Attributes$primitiveUnits = _elm_lang$virtual_dom$VirtualDom$attribute('primitiveUnits');\r\nvar _elm_lang$svg$Svg_Attributes$preserveAspectRatio = _elm_lang$virtual_dom$VirtualDom$attribute('preserveAspectRatio');\r\nvar _elm_lang$svg$Svg_Attributes$preserveAlpha = _elm_lang$virtual_dom$VirtualDom$attribute('preserveAlpha');\r\nvar _elm_lang$svg$Svg_Attributes$pointsAtZ = _elm_lang$virtual_dom$VirtualDom$attribute('pointsAtZ');\r\nvar _elm_lang$svg$Svg_Attributes$pointsAtY = _elm_lang$virtual_dom$VirtualDom$attribute('pointsAtY');\r\nvar _elm_lang$svg$Svg_Attributes$pointsAtX = _elm_lang$virtual_dom$VirtualDom$attribute('pointsAtX');\r\nvar _elm_lang$svg$Svg_Attributes$points = _elm_lang$virtual_dom$VirtualDom$attribute('points');\r\nvar _elm_lang$svg$Svg_Attributes$pointOrder = _elm_lang$virtual_dom$VirtualDom$attribute('point-order');\r\nvar _elm_lang$svg$Svg_Attributes$patternUnits = _elm_lang$virtual_dom$VirtualDom$attribute('patternUnits');\r\nvar _elm_lang$svg$Svg_Attributes$patternTransform = _elm_lang$virtual_dom$VirtualDom$attribute('patternTransform');\r\nvar _elm_lang$svg$Svg_Attributes$patternContentUnits = _elm_lang$virtual_dom$VirtualDom$attribute('patternContentUnits');\r\nvar _elm_lang$svg$Svg_Attributes$pathLength = _elm_lang$virtual_dom$VirtualDom$attribute('pathLength');\r\nvar _elm_lang$svg$Svg_Attributes$path = _elm_lang$virtual_dom$VirtualDom$attribute('path');\r\nvar _elm_lang$svg$Svg_Attributes$panose1 = _elm_lang$virtual_dom$VirtualDom$attribute('panose-1');\r\nvar _elm_lang$svg$Svg_Attributes$overlineThickness = _elm_lang$virtual_dom$VirtualDom$attribute('overline-thickness');\r\nvar _elm_lang$svg$Svg_Attributes$overlinePosition = _elm_lang$virtual_dom$VirtualDom$attribute('overline-position');\r\nvar _elm_lang$svg$Svg_Attributes$origin = _elm_lang$virtual_dom$VirtualDom$attribute('origin');\r\nvar _elm_lang$svg$Svg_Attributes$orientation = _elm_lang$virtual_dom$VirtualDom$attribute('orientation');\r\nvar _elm_lang$svg$Svg_Attributes$orient = _elm_lang$virtual_dom$VirtualDom$attribute('orient');\r\nvar _elm_lang$svg$Svg_Attributes$order = _elm_lang$virtual_dom$VirtualDom$attribute('order');\r\nvar _elm_lang$svg$Svg_Attributes$operator = _elm_lang$virtual_dom$VirtualDom$attribute('operator');\r\nvar _elm_lang$svg$Svg_Attributes$offset = _elm_lang$virtual_dom$VirtualDom$attribute('offset');\r\nvar _elm_lang$svg$Svg_Attributes$numOctaves = _elm_lang$virtual_dom$VirtualDom$attribute('numOctaves');\r\nvar _elm_lang$svg$Svg_Attributes$name = _elm_lang$virtual_dom$VirtualDom$attribute('name');\r\nvar _elm_lang$svg$Svg_Attributes$mode = _elm_lang$virtual_dom$VirtualDom$attribute('mode');\r\nvar _elm_lang$svg$Svg_Attributes$min = _elm_lang$virtual_dom$VirtualDom$attribute('min');\r\nvar _elm_lang$svg$Svg_Attributes$method = _elm_lang$virtual_dom$VirtualDom$attribute('method');\r\nvar _elm_lang$svg$Svg_Attributes$media = _elm_lang$virtual_dom$VirtualDom$attribute('media');\r\nvar _elm_lang$svg$Svg_Attributes$max = _elm_lang$virtual_dom$VirtualDom$attribute('max');\r\nvar _elm_lang$svg$Svg_Attributes$mathematical = _elm_lang$virtual_dom$VirtualDom$attribute('mathematical');\r\nvar _elm_lang$svg$Svg_Attributes$maskUnits = _elm_lang$virtual_dom$VirtualDom$attribute('maskUnits');\r\nvar _elm_lang$svg$Svg_Attributes$maskContentUnits = _elm_lang$virtual_dom$VirtualDom$attribute('maskContentUnits');\r\nvar _elm_lang$svg$Svg_Attributes$markerWidth = _elm_lang$virtual_dom$VirtualDom$attribute('markerWidth');\r\nvar _elm_lang$svg$Svg_Attributes$markerUnits = _elm_lang$virtual_dom$VirtualDom$attribute('markerUnits');\r\nvar _elm_lang$svg$Svg_Attributes$markerHeight = _elm_lang$virtual_dom$VirtualDom$attribute('markerHeight');\r\nvar _elm_lang$svg$Svg_Attributes$local = _elm_lang$virtual_dom$VirtualDom$attribute('local');\r\nvar _elm_lang$svg$Svg_Attributes$limitingConeAngle = _elm_lang$virtual_dom$VirtualDom$attribute('limitingConeAngle');\r\nvar _elm_lang$svg$Svg_Attributes$lengthAdjust = _elm_lang$virtual_dom$VirtualDom$attribute('lengthAdjust');\r\nvar _elm_lang$svg$Svg_Attributes$lang = _elm_lang$virtual_dom$VirtualDom$attribute('lang');\r\nvar _elm_lang$svg$Svg_Attributes$keyTimes = _elm_lang$virtual_dom$VirtualDom$attribute('keyTimes');\r\nvar _elm_lang$svg$Svg_Attributes$keySplines = _elm_lang$virtual_dom$VirtualDom$attribute('keySplines');\r\nvar _elm_lang$svg$Svg_Attributes$keyPoints = _elm_lang$virtual_dom$VirtualDom$attribute('keyPoints');\r\nvar _elm_lang$svg$Svg_Attributes$kernelUnitLength = _elm_lang$virtual_dom$VirtualDom$attribute('kernelUnitLength');\r\nvar _elm_lang$svg$Svg_Attributes$kernelMatrix = _elm_lang$virtual_dom$VirtualDom$attribute('kernelMatrix');\r\nvar _elm_lang$svg$Svg_Attributes$k4 = _elm_lang$virtual_dom$VirtualDom$attribute('k4');\r\nvar _elm_lang$svg$Svg_Attributes$k3 = _elm_lang$virtual_dom$VirtualDom$attribute('k3');\r\nvar _elm_lang$svg$Svg_Attributes$k2 = _elm_lang$virtual_dom$VirtualDom$attribute('k2');\r\nvar _elm_lang$svg$Svg_Attributes$k1 = _elm_lang$virtual_dom$VirtualDom$attribute('k1');\r\nvar _elm_lang$svg$Svg_Attributes$k = _elm_lang$virtual_dom$VirtualDom$attribute('k');\r\nvar _elm_lang$svg$Svg_Attributes$intercept = _elm_lang$virtual_dom$VirtualDom$attribute('intercept');\r\nvar _elm_lang$svg$Svg_Attributes$in2 = _elm_lang$virtual_dom$VirtualDom$attribute('in2');\r\nvar _elm_lang$svg$Svg_Attributes$in_ = _elm_lang$virtual_dom$VirtualDom$attribute('in');\r\nvar _elm_lang$svg$Svg_Attributes$ideographic = _elm_lang$virtual_dom$VirtualDom$attribute('ideographic');\r\nvar _elm_lang$svg$Svg_Attributes$id = _elm_lang$virtual_dom$VirtualDom$attribute('id');\r\nvar _elm_lang$svg$Svg_Attributes$horizOriginY = _elm_lang$virtual_dom$VirtualDom$attribute('horiz-origin-y');\r\nvar _elm_lang$svg$Svg_Attributes$horizOriginX = _elm_lang$virtual_dom$VirtualDom$attribute('horiz-origin-x');\r\nvar _elm_lang$svg$Svg_Attributes$horizAdvX = _elm_lang$virtual_dom$VirtualDom$attribute('horiz-adv-x');\r\nvar _elm_lang$svg$Svg_Attributes$height = _elm_lang$virtual_dom$VirtualDom$attribute('height');\r\nvar _elm_lang$svg$Svg_Attributes$hanging = _elm_lang$virtual_dom$VirtualDom$attribute('hanging');\r\nvar _elm_lang$svg$Svg_Attributes$gradientUnits = _elm_lang$virtual_dom$VirtualDom$attribute('gradientUnits');\r\nvar _elm_lang$svg$Svg_Attributes$gradientTransform = _elm_lang$virtual_dom$VirtualDom$attribute('gradientTransform');\r\nvar _elm_lang$svg$Svg_Attributes$glyphRef = _elm_lang$virtual_dom$VirtualDom$attribute('glyphRef');\r\nvar _elm_lang$svg$Svg_Attributes$glyphName = _elm_lang$virtual_dom$VirtualDom$attribute('glyph-name');\r\nvar _elm_lang$svg$Svg_Attributes$g2 = _elm_lang$virtual_dom$VirtualDom$attribute('g2');\r\nvar _elm_lang$svg$Svg_Attributes$g1 = _elm_lang$virtual_dom$VirtualDom$attribute('g1');\r\nvar _elm_lang$svg$Svg_Attributes$fy = _elm_lang$virtual_dom$VirtualDom$attribute('fy');\r\nvar _elm_lang$svg$Svg_Attributes$fx = _elm_lang$virtual_dom$VirtualDom$attribute('fx');\r\nvar _elm_lang$svg$Svg_Attributes$from = _elm_lang$virtual_dom$VirtualDom$attribute('from');\r\nvar _elm_lang$svg$Svg_Attributes$format = _elm_lang$virtual_dom$VirtualDom$attribute('format');\r\nvar _elm_lang$svg$Svg_Attributes$filterUnits = _elm_lang$virtual_dom$VirtualDom$attribute('filterUnits');\r\nvar _elm_lang$svg$Svg_Attributes$filterRes = _elm_lang$virtual_dom$VirtualDom$attribute('filterRes');\r\nvar _elm_lang$svg$Svg_Attributes$externalResourcesRequired = _elm_lang$virtual_dom$VirtualDom$attribute('externalResourcesRequired');\r\nvar _elm_lang$svg$Svg_Attributes$exponent = _elm_lang$virtual_dom$VirtualDom$attribute('exponent');\r\nvar _elm_lang$svg$Svg_Attributes$end = _elm_lang$virtual_dom$VirtualDom$attribute('end');\r\nvar _elm_lang$svg$Svg_Attributes$elevation = _elm_lang$virtual_dom$VirtualDom$attribute('elevation');\r\nvar _elm_lang$svg$Svg_Attributes$edgeMode = _elm_lang$virtual_dom$VirtualDom$attribute('edgeMode');\r\nvar _elm_lang$svg$Svg_Attributes$dy = _elm_lang$virtual_dom$VirtualDom$attribute('dy');\r\nvar _elm_lang$svg$Svg_Attributes$dx = _elm_lang$virtual_dom$VirtualDom$attribute('dx');\r\nvar _elm_lang$svg$Svg_Attributes$dur = _elm_lang$virtual_dom$VirtualDom$attribute('dur');\r\nvar _elm_lang$svg$Svg_Attributes$divisor = _elm_lang$virtual_dom$VirtualDom$attribute('divisor');\r\nvar _elm_lang$svg$Svg_Attributes$diffuseConstant = _elm_lang$virtual_dom$VirtualDom$attribute('diffuseConstant');\r\nvar _elm_lang$svg$Svg_Attributes$descent = _elm_lang$virtual_dom$VirtualDom$attribute('descent');\r\nvar _elm_lang$svg$Svg_Attributes$decelerate = _elm_lang$virtual_dom$VirtualDom$attribute('decelerate');\r\nvar _elm_lang$svg$Svg_Attributes$d = _elm_lang$virtual_dom$VirtualDom$attribute('d');\r\nvar _elm_lang$svg$Svg_Attributes$cy = _elm_lang$virtual_dom$VirtualDom$attribute('cy');\r\nvar _elm_lang$svg$Svg_Attributes$cx = _elm_lang$virtual_dom$VirtualDom$attribute('cx');\r\nvar _elm_lang$svg$Svg_Attributes$contentStyleType = _elm_lang$virtual_dom$VirtualDom$attribute('contentStyleType');\r\nvar _elm_lang$svg$Svg_Attributes$contentScriptType = _elm_lang$virtual_dom$VirtualDom$attribute('contentScriptType');\r\nvar _elm_lang$svg$Svg_Attributes$clipPathUnits = _elm_lang$virtual_dom$VirtualDom$attribute('clipPathUnits');\r\nvar _elm_lang$svg$Svg_Attributes$class = _elm_lang$virtual_dom$VirtualDom$attribute('class');\r\nvar _elm_lang$svg$Svg_Attributes$capHeight = _elm_lang$virtual_dom$VirtualDom$attribute('cap-height');\r\nvar _elm_lang$svg$Svg_Attributes$calcMode = _elm_lang$virtual_dom$VirtualDom$attribute('calcMode');\r\nvar _elm_lang$svg$Svg_Attributes$by = _elm_lang$virtual_dom$VirtualDom$attribute('by');\r\nvar _elm_lang$svg$Svg_Attributes$bias = _elm_lang$virtual_dom$VirtualDom$attribute('bias');\r\nvar _elm_lang$svg$Svg_Attributes$begin = _elm_lang$virtual_dom$VirtualDom$attribute('begin');\r\nvar _elm_lang$svg$Svg_Attributes$bbox = _elm_lang$virtual_dom$VirtualDom$attribute('bbox');\r\nvar _elm_lang$svg$Svg_Attributes$baseProfile = _elm_lang$virtual_dom$VirtualDom$attribute('baseProfile');\r\nvar _elm_lang$svg$Svg_Attributes$baseFrequency = _elm_lang$virtual_dom$VirtualDom$attribute('baseFrequency');\r\nvar _elm_lang$svg$Svg_Attributes$azimuth = _elm_lang$virtual_dom$VirtualDom$attribute('azimuth');\r\nvar _elm_lang$svg$Svg_Attributes$autoReverse = _elm_lang$virtual_dom$VirtualDom$attribute('autoReverse');\r\nvar _elm_lang$svg$Svg_Attributes$attributeType = _elm_lang$virtual_dom$VirtualDom$attribute('attributeType');\r\nvar _elm_lang$svg$Svg_Attributes$attributeName = _elm_lang$virtual_dom$VirtualDom$attribute('attributeName');\r\nvar _elm_lang$svg$Svg_Attributes$ascent = _elm_lang$virtual_dom$VirtualDom$attribute('ascent');\r\nvar _elm_lang$svg$Svg_Attributes$arabicForm = _elm_lang$virtual_dom$VirtualDom$attribute('arabic-form');\r\nvar _elm_lang$svg$Svg_Attributes$amplitude = _elm_lang$virtual_dom$VirtualDom$attribute('amplitude');\r\nvar _elm_lang$svg$Svg_Attributes$allowReorder = _elm_lang$virtual_dom$VirtualDom$attribute('allowReorder');\r\nvar _elm_lang$svg$Svg_Attributes$alphabetic = _elm_lang$virtual_dom$VirtualDom$attribute('alphabetic');\r\nvar _elm_lang$svg$Svg_Attributes$additive = _elm_lang$virtual_dom$VirtualDom$attribute('additive');\r\nvar _elm_lang$svg$Svg_Attributes$accumulate = _elm_lang$virtual_dom$VirtualDom$attribute('accumulate');\r\nvar _elm_lang$svg$Svg_Attributes$accelerate = _elm_lang$virtual_dom$VirtualDom$attribute('accelerate');\r\nvar _elm_lang$svg$Svg_Attributes$accentHeight = _elm_lang$virtual_dom$VirtualDom$attribute('accent-height');\r\n\r\nvar _elm_lang$websocket$Native_WebSocket = function() {\r\n\r\nfunction open(url, settings)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar socket = new WebSocket(url);\r\n\t\t\tsocket.elm_web_socket = true;\r\n\t\t}\r\n\t\tcatch(err)\r\n\t\t{\r\n\t\t\treturn callback(_elm_lang$core$Native_Scheduler.fail({\r\n\t\t\t\tctor: err.name === 'SecurityError' ? 'BadSecurity' : 'BadArgs',\r\n\t\t\t\t_0: err.message\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tsocket.addEventListener(\"open\", function(event) {\r\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(socket));\r\n\t\t});\r\n\r\n\t\tsocket.addEventListener(\"message\", function(event) {\r\n\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(A2(settings.onMessage, socket, event.data));\r\n\t\t});\r\n\r\n\t\tsocket.addEventListener(\"close\", function(event) {\r\n\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(settings.onClose({\r\n\t\t\t\tcode: event.code,\r\n\t\t\t\treason: event.reason,\r\n\t\t\t\twasClean: event.wasClean\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\treturn function()\r\n\t\t{\r\n\t\t\tif (socket && socket.close)\r\n\t\t\t{\r\n\t\t\t\tsocket.close();\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n}\r\n\r\nfunction send(socket, string)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\tvar result =\r\n\t\t\tsocket.readyState === WebSocket.OPEN\r\n\t\t\t\t? _elm_lang$core$Maybe$Nothing\r\n\t\t\t\t: _elm_lang$core$Maybe$Just({ ctor: 'NotOpen' });\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tsocket.send(string);\r\n\t\t}\r\n\t\tcatch(err)\r\n\t\t{\r\n\t\t\tresult = _elm_lang$core$Maybe$Just({ ctor: 'BadString' });\r\n\t\t}\r\n\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(result));\r\n\t});\r\n}\r\n\r\nfunction close(code, reason, socket)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\r\n\t\ttry\r\n\t\t{\r\n\t\t\tsocket.close(code, reason);\r\n\t\t}\r\n\t\tcatch(err)\r\n\t\t{\r\n\t\t\treturn callback(_elm_lang$core$Native_Scheduler.fail(_elm_lang$core$Maybe$Just({\r\n\t\t\t\tctor: err.name === 'SyntaxError' ? 'BadReason' : 'BadCode'\r\n\t\t\t})));\r\n\t\t}\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Maybe$Nothing));\r\n\t});\r\n}\r\n\r\nfunction bytesQueued(socket)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(socket.bufferedAmount));\r\n\t});\r\n}\r\n\r\nreturn {\r\n\topen: F2(open),\r\n\tsend: F2(send),\r\n\tclose: F3(close),\r\n\tbytesQueued: bytesQueued\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$websocket$WebSocket_LowLevel$bytesQueued = _elm_lang$websocket$Native_WebSocket.bytesQueued;\r\nvar _elm_lang$websocket$WebSocket_LowLevel$send = _elm_lang$websocket$Native_WebSocket.send;\r\nvar _elm_lang$websocket$WebSocket_LowLevel$closeWith = _elm_lang$websocket$Native_WebSocket.close;\r\nvar _elm_lang$websocket$WebSocket_LowLevel$close = function (socket) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Task$map,\r\n\t\t_elm_lang$core$Basics$always(\r\n\t\t\t{ctor: '_Tuple0'}),\r\n\t\tA3(_elm_lang$websocket$WebSocket_LowLevel$closeWith, 1000, '', socket));\r\n};\r\nvar _elm_lang$websocket$WebSocket_LowLevel$open = _elm_lang$websocket$Native_WebSocket.open;\r\nvar _elm_lang$websocket$WebSocket_LowLevel$Settings = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {onMessage: a, onClose: b};\r\n\t});\r\nvar _elm_lang$websocket$WebSocket_LowLevel$WebSocket = {ctor: 'WebSocket'};\r\nvar _elm_lang$websocket$WebSocket_LowLevel$BadArgs = {ctor: 'BadArgs'};\r\nvar _elm_lang$websocket$WebSocket_LowLevel$BadSecurity = {ctor: 'BadSecurity'};\r\nvar _elm_lang$websocket$WebSocket_LowLevel$BadReason = {ctor: 'BadReason'};\r\nvar _elm_lang$websocket$WebSocket_LowLevel$BadCode = {ctor: 'BadCode'};\r\nvar _elm_lang$websocket$WebSocket_LowLevel$BadString = {ctor: 'BadString'};\r\nvar _elm_lang$websocket$WebSocket_LowLevel$NotOpen = {ctor: 'NotOpen'};\r\n\r\nvar _elm_lang$websocket$WebSocket$closeConnection = function (connection) {\r\n\tvar _p0 = connection;\r\n\tif (_p0.ctor === 'Opening') {\r\n\t\treturn _elm_lang$core$Process$kill(_p0._1);\r\n\t} else {\r\n\t\treturn _elm_lang$websocket$WebSocket_LowLevel$close(_p0._0);\r\n\t}\r\n};\r\nvar _elm_lang$websocket$WebSocket$after = function (backoff) {\r\n\treturn (_elm_lang$core$Native_Utils.cmp(backoff, 1) < 0) ? _elm_lang$core$Task$succeed(\r\n\t\t{ctor: '_Tuple0'}) : _elm_lang$core$Process$sleep(\r\n\t\t_elm_lang$core$Basics$toFloat(\r\n\t\t\t10 * Math.pow(2, backoff)));\r\n};\r\nvar _elm_lang$websocket$WebSocket$removeQueue = F2(\r\n\tfunction (name, state) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tstate,\r\n\t\t\t{\r\n\t\t\t\tqueues: A2(_elm_lang$core$Dict$remove, name, state.queues)\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$updateSocket = F3(\r\n\tfunction (name, connection, state) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tstate,\r\n\t\t\t{\r\n\t\t\t\tsockets: A3(_elm_lang$core$Dict$insert, name, connection, state.sockets)\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$add = F2(\r\n\tfunction (value, maybeList) {\r\n\t\tvar _p1 = maybeList;\r\n\t\tif (_p1.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: value,\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\t{ctor: '::', _0: value, _1: _p1._0});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$buildSubDict = F2(\r\n\tfunction (subs, dict) {\r\n\t\tbuildSubDict:\r\n\t\twhile (true) {\r\n\t\t\tvar _p2 = subs;\r\n\t\t\tif (_p2.ctor === '[]') {\r\n\t\t\t\treturn dict;\r\n\t\t\t} else {\r\n\t\t\t\tif (_p2._0.ctor === 'Listen') {\r\n\t\t\t\t\tvar _v3 = _p2._1,\r\n\t\t\t\t\t\t_v4 = A3(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\t\t\t\t_p2._0._0,\r\n\t\t\t\t\t\t_elm_lang$websocket$WebSocket$add(_p2._0._1),\r\n\t\t\t\t\t\tdict);\r\n\t\t\t\t\tsubs = _v3;\r\n\t\t\t\t\tdict = _v4;\r\n\t\t\t\t\tcontinue buildSubDict;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _v5 = _p2._1,\r\n\t\t\t\t\t\t_v6 = A3(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\t\t\t\t_p2._0._0,\r\n\t\t\t\t\t\tfunction (_p3) {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$withDefault,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t_p3));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdict);\r\n\t\t\t\t\tsubs = _v5;\r\n\t\t\t\t\tdict = _v6;\r\n\t\t\t\t\tcontinue buildSubDict;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$websocket$WebSocket_ops = _elm_lang$websocket$WebSocket_ops || {};\r\n_elm_lang$websocket$WebSocket_ops['&>'] = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tfunction (_p4) {\r\n\t\t\t\treturn t2;\r\n\t\t\t},\r\n\t\t\tt1);\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$sendMessagesHelp = F3(\r\n\tfunction (cmds, socketsDict, queuesDict) {\r\n\t\tsendMessagesHelp:\r\n\t\twhile (true) {\r\n\t\t\tvar _p5 = cmds;\r\n\t\t\tif (_p5.ctor === '[]') {\r\n\t\t\t\treturn _elm_lang$core$Task$succeed(queuesDict);\r\n\t\t\t} else {\r\n\t\t\t\tvar _p9 = _p5._1;\r\n\t\t\t\tvar _p8 = _p5._0._0;\r\n\t\t\t\tvar _p7 = _p5._0._1;\r\n\t\t\t\tvar _p6 = A2(_elm_lang$core$Dict$get, _p8, socketsDict);\r\n\t\t\t\tif ((_p6.ctor === 'Just') && (_p6._0.ctor === 'Connected')) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$websocket$WebSocket_ops['&>'],\r\n\t\t\t\t\t\tA2(_elm_lang$websocket$WebSocket_LowLevel$send, _p6._0._0, _p7),\r\n\t\t\t\t\t\tA3(_elm_lang$websocket$WebSocket$sendMessagesHelp, _p9, socketsDict, queuesDict));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _v9 = _p9,\r\n\t\t\t\t\t\t_v10 = socketsDict,\r\n\t\t\t\t\t\t_v11 = A3(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\t\t\t\t_p8,\r\n\t\t\t\t\t\t_elm_lang$websocket$WebSocket$add(_p7),\r\n\t\t\t\t\t\tqueuesDict);\r\n\t\t\t\t\tcmds = _v9;\r\n\t\t\t\t\tsocketsDict = _v10;\r\n\t\t\t\t\tqueuesDict = _v11;\r\n\t\t\t\t\tcontinue sendMessagesHelp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$subscription = _elm_lang$core$Native_Platform.leaf('WebSocket');\r\nvar _elm_lang$websocket$WebSocket$command = _elm_lang$core$Native_Platform.leaf('WebSocket');\r\nvar _elm_lang$websocket$WebSocket$State = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {sockets: a, queues: b, subs: c};\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$init = _elm_lang$core$Task$succeed(\r\n\tA3(_elm_lang$websocket$WebSocket$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));\r\nvar _elm_lang$websocket$WebSocket$Send = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Send', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$send = F2(\r\n\tfunction (url, message) {\r\n\t\treturn _elm_lang$websocket$WebSocket$command(\r\n\t\t\tA2(_elm_lang$websocket$WebSocket$Send, url, message));\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$cmdMap = F2(\r\n\tfunction (_p11, _p10) {\r\n\t\tvar _p12 = _p10;\r\n\t\treturn A2(_elm_lang$websocket$WebSocket$Send, _p12._0, _p12._1);\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$KeepAlive = function (a) {\r\n\treturn {ctor: 'KeepAlive', _0: a};\r\n};\r\nvar _elm_lang$websocket$WebSocket$keepAlive = function (url) {\r\n\treturn _elm_lang$websocket$WebSocket$subscription(\r\n\t\t_elm_lang$websocket$WebSocket$KeepAlive(url));\r\n};\r\nvar _elm_lang$websocket$WebSocket$Listen = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Listen', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$listen = F2(\r\n\tfunction (url, tagger) {\r\n\t\treturn _elm_lang$websocket$WebSocket$subscription(\r\n\t\t\tA2(_elm_lang$websocket$WebSocket$Listen, url, tagger));\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$subMap = F2(\r\n\tfunction (func, sub) {\r\n\t\tvar _p13 = sub;\r\n\t\tif (_p13.ctor === 'Listen') {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$websocket$WebSocket$Listen,\r\n\t\t\t\t_p13._0,\r\n\t\t\t\tfunction (_p14) {\r\n\t\t\t\t\treturn func(\r\n\t\t\t\t\t\t_p13._1(_p14));\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$websocket$WebSocket$KeepAlive(_p13._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$Connected = function (a) {\r\n\treturn {ctor: 'Connected', _0: a};\r\n};\r\nvar _elm_lang$websocket$WebSocket$Opening = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Opening', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$BadOpen = function (a) {\r\n\treturn {ctor: 'BadOpen', _0: a};\r\n};\r\nvar _elm_lang$websocket$WebSocket$GoodOpen = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'GoodOpen', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$Die = function (a) {\r\n\treturn {ctor: 'Die', _0: a};\r\n};\r\nvar _elm_lang$websocket$WebSocket$Receive = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Receive', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$open = F2(\r\n\tfunction (name, router) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$websocket$WebSocket_LowLevel$open,\r\n\t\t\tname,\r\n\t\t\t{\r\n\t\t\t\tonMessage: F2(\r\n\t\t\t\t\tfunction (_p15, msg) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf,\r\n\t\t\t\t\t\t\trouter,\r\n\t\t\t\t\t\t\tA2(_elm_lang$websocket$WebSocket$Receive, name, msg));\r\n\t\t\t\t\t}),\r\n\t\t\t\tonClose: function (details) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf,\r\n\t\t\t\t\t\trouter,\r\n\t\t\t\t\t\t_elm_lang$websocket$WebSocket$Die(name));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$attemptOpen = F3(\r\n\tfunction (router, backoff, name) {\r\n\t\tvar badOpen = function (_p16) {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform$sendToSelf,\r\n\t\t\t\trouter,\r\n\t\t\t\t_elm_lang$websocket$WebSocket$BadOpen(name));\r\n\t\t};\r\n\t\tvar goodOpen = function (ws) {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform$sendToSelf,\r\n\t\t\t\trouter,\r\n\t\t\t\tA2(_elm_lang$websocket$WebSocket$GoodOpen, name, ws));\r\n\t\t};\r\n\t\tvar actuallyAttemptOpen = A2(\r\n\t\t\t_elm_lang$core$Task$onError,\r\n\t\t\tbadOpen,\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\tgoodOpen,\r\n\t\t\t\tA2(_elm_lang$websocket$WebSocket$open, name, router)));\r\n\t\treturn _elm_lang$core$Process$spawn(\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$websocket$WebSocket_ops['&>'],\r\n\t\t\t\t_elm_lang$websocket$WebSocket$after(backoff),\r\n\t\t\t\tactuallyAttemptOpen));\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$onEffects = F4(\r\n\tfunction (router, cmds, subs, state) {\r\n\t\tvar newSubs = A2(_elm_lang$websocket$WebSocket$buildSubDict, subs, _elm_lang$core$Dict$empty);\r\n\t\tvar cleanup = function (newQueues) {\r\n\t\t\tvar rightStep = F3(\r\n\t\t\t\tfunction (name, connection, getNewSockets) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$websocket$WebSocket_ops['&>'],\r\n\t\t\t\t\t\t_elm_lang$websocket$WebSocket$closeConnection(connection),\r\n\t\t\t\t\t\tgetNewSockets);\r\n\t\t\t\t});\r\n\t\t\tvar bothStep = F4(\r\n\t\t\t\tfunction (name, _p17, connection, getNewSockets) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Task$map,\r\n\t\t\t\t\t\tA2(_elm_lang$core$Dict$insert, name, connection),\r\n\t\t\t\t\t\tgetNewSockets);\r\n\t\t\t\t});\r\n\t\t\tvar leftStep = F3(\r\n\t\t\t\tfunction (name, _p18, getNewSockets) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\tfunction (newSockets) {\r\n\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\tfunction (pid) {\r\n\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\t\t\t\tA2(_elm_lang$websocket$WebSocket$Opening, 0, pid),\r\n\t\t\t\t\t\t\t\t\t\t\tnewSockets));\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tA3(_elm_lang$websocket$WebSocket$attemptOpen, router, 0, name));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetNewSockets);\r\n\t\t\t\t});\r\n\t\t\tvar newEntries = A2(\r\n\t\t\t\t_elm_lang$core$Dict$union,\r\n\t\t\t\tnewQueues,\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Dict$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (k, v) {\r\n\t\t\t\t\t\t\treturn {ctor: '[]'};\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\tnewSubs));\r\n\t\t\tvar collectNewSockets = A6(\r\n\t\t\t\t_elm_lang$core$Dict$merge,\r\n\t\t\t\tleftStep,\r\n\t\t\t\tbothStep,\r\n\t\t\t\trightStep,\r\n\t\t\t\tnewEntries,\r\n\t\t\t\tstate.sockets,\r\n\t\t\t\t_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\tfunction (newSockets) {\r\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\tA3(_elm_lang$websocket$WebSocket$State, newSockets, newQueues, newSubs));\r\n\t\t\t\t},\r\n\t\t\t\tcollectNewSockets);\r\n\t\t};\r\n\t\tvar sendMessagesGetNewQueues = A3(_elm_lang$websocket$WebSocket$sendMessagesHelp, cmds, state.sockets, state.queues);\r\n\t\treturn A2(_elm_lang$core$Task$andThen, cleanup, sendMessagesGetNewQueues);\r\n\t});\r\nvar _elm_lang$websocket$WebSocket$onSelfMsg = F3(\r\n\tfunction (router, selfMsg, state) {\r\n\t\tvar _p19 = selfMsg;\r\n\t\tswitch (_p19.ctor) {\r\n\t\t\tcase 'Receive':\r\n\t\t\t\tvar sends = A2(\r\n\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\tfunction (tagger) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\r\n\t\t\t\t\t\t\trouter,\r\n\t\t\t\t\t\t\ttagger(_p19._1));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$withDefault,\r\n\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\tA2(_elm_lang$core$Dict$get, _p19._0, state.subs)));\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$websocket$WebSocket_ops['&>'],\r\n\t\t\t\t\t_elm_lang$core$Task$sequence(sends),\r\n\t\t\t\t\t_elm_lang$core$Task$succeed(state));\r\n\t\t\tcase 'Die':\r\n\t\t\t\tvar _p21 = _p19._0;\r\n\t\t\t\tvar _p20 = A2(_elm_lang$core$Dict$get, _p21, state.sockets);\r\n\t\t\t\tif (_p20.ctor === 'Nothing') {\r\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\tfunction (pid) {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket$updateSocket,\r\n\t\t\t\t\t\t\t\t\t_p21,\r\n\t\t\t\t\t\t\t\t\tA2(_elm_lang$websocket$WebSocket$Opening, 0, pid),\r\n\t\t\t\t\t\t\t\t\tstate));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tA3(_elm_lang$websocket$WebSocket$attemptOpen, router, 0, _p21));\r\n\t\t\t\t}\r\n\t\t\tcase 'GoodOpen':\r\n\t\t\t\tvar _p24 = _p19._1;\r\n\t\t\t\tvar _p23 = _p19._0;\r\n\t\t\t\tvar _p22 = A2(_elm_lang$core$Dict$get, _p23, state.queues);\r\n\t\t\t\tif (_p22.ctor === 'Nothing') {\r\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket$updateSocket,\r\n\t\t\t\t\t\t\t_p23,\r\n\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket$Connected(_p24),\r\n\t\t\t\t\t\t\tstate));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t_elm_lang$core$List$foldl,\r\n\t\t\t\t\t\tF2(\r\n\t\t\t\t\t\t\tfunction (msg, task) {\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket_ops['&>'],\r\n\t\t\t\t\t\t\t\t\tA2(_elm_lang$websocket$WebSocket_LowLevel$send, _p24, msg),\r\n\t\t\t\t\t\t\t\t\ttask);\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t_elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket$removeQueue,\r\n\t\t\t\t\t\t\t\t_p23,\r\n\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket$updateSocket,\r\n\t\t\t\t\t\t\t\t\t_p23,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket$Connected(_p24),\r\n\t\t\t\t\t\t\t\t\tstate))),\r\n\t\t\t\t\t\t_p22._0);\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tvar _p27 = _p19._0;\r\n\t\t\t\tvar _p25 = A2(_elm_lang$core$Dict$get, _p27, state.sockets);\r\n\t\t\t\tif (_p25.ctor === 'Nothing') {\r\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (_p25._0.ctor === 'Opening') {\r\n\t\t\t\t\t\tvar _p26 = _p25._0._0;\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\tfunction (pid) {\r\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$websocket$WebSocket$updateSocket,\r\n\t\t\t\t\t\t\t\t\t\t_p27,\r\n\t\t\t\t\t\t\t\t\t\tA2(_elm_lang$websocket$WebSocket$Opening, _p26 + 1, pid),\r\n\t\t\t\t\t\t\t\t\t\tstate));\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tA3(_elm_lang$websocket$WebSocket$attemptOpen, router, _p26 + 1, _p27));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['WebSocket'] = {pkg: 'elm-lang/websocket', init: _elm_lang$websocket$WebSocket$init, onEffects: _elm_lang$websocket$WebSocket$onEffects, onSelfMsg: _elm_lang$websocket$WebSocket$onSelfMsg, tag: 'fx', cmdMap: _elm_lang$websocket$WebSocket$cmdMap, subMap: _elm_lang$websocket$WebSocket$subMap};\r\n\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Helpers$emptyPayload = _elm_lang$core$Json_Encode$object(\r\n\t{ctor: '[]'});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Helpers$maybeInt = function (maybe) {\r\n\tvar _p0 = maybe;\r\n\tif (_p0.ctor === 'Just') {\r\n\t\treturn _elm_lang$core$Json_Encode$int(_p0._0);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Json_Encode$null;\r\n\t}\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Helpers$messageEncoder = function (_p1) {\r\n\tvar _p2 = _p1;\r\n\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: 'event',\r\n\t\t\t\t_1: _elm_lang$core$Json_Encode$string(_p2.event)\r\n\t\t\t},\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'topic',\r\n\t\t\t\t\t_1: _elm_lang$core$Json_Encode$string(_p2.topic)\r\n\t\t\t\t},\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'payload', _1: _p2.payload},\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: {\r\n\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t_0: 'ref',\r\n\t\t\t\t\t\t\t_1: _fbonetti$elm_phoenix_socket$Phoenix_Helpers$maybeInt(_p2.ref)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Helpers$encodeMessage = function (_p3) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Json_Encode$encode,\r\n\t\t0,\r\n\t\t_fbonetti$elm_phoenix_socket$Phoenix_Helpers$messageEncoder(_p3));\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Helpers$nullOrInt = _elm_lang$core$Json_Decode$oneOf(\r\n\t{\r\n\t\tctor: '::',\r\n\t\t_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),\r\n\t\t_1: {\r\n\t\t\tctor: '::',\r\n\t\t\t_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$int),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Helpers$Message = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {event: a, topic: b, payload: c, ref: d};\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Helpers$messageDecoder = A5(\r\n\t_elm_lang$core$Json_Decode$map4,\r\n\t_fbonetti$elm_phoenix_socket$Phoenix_Helpers$Message,\r\n\tA2(_elm_lang$core$Json_Decode$field, 'event', _elm_lang$core$Json_Decode$string),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'topic', _elm_lang$core$Json_Decode$string),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'payload', _elm_lang$core$Json_Decode$value),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'ref', _fbonetti$elm_phoenix_socket$Phoenix_Helpers$nullOrInt));\r\n\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$setState = F2(\r\n\tfunction (state, channel) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{state: state});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$map = F2(\r\n\tfunction (fn, channel) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{\r\n\t\t\t\tonClose: A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\t\treturn function (_p0) {\r\n\t\t\t\t\t\t\t\treturn x(\r\n\t\t\t\t\t\t\t\t\ty(_p0));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})(fn),\r\n\t\t\t\t\tchannel.onClose),\r\n\t\t\t\tonError: A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\t\treturn function (_p1) {\r\n\t\t\t\t\t\t\t\treturn x(\r\n\t\t\t\t\t\t\t\t\ty(_p1));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})(fn),\r\n\t\t\t\t\tchannel.onError),\r\n\t\t\t\tonJoin: A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\t\treturn function (_p2) {\r\n\t\t\t\t\t\t\t\treturn x(\r\n\t\t\t\t\t\t\t\t\ty(_p2));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})(fn),\r\n\t\t\t\t\tchannel.onJoin),\r\n\t\t\t\tonJoinError: A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\t\treturn function (_p3) {\r\n\t\t\t\t\t\t\t\treturn x(\r\n\t\t\t\t\t\t\t\t\ty(_p3));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})(fn),\r\n\t\t\t\t\tchannel.onJoinError)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$onJoinError = F2(\r\n\tfunction (valueToMsg, channel) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{\r\n\t\t\t\tonJoinError: _elm_lang$core$Maybe$Just(valueToMsg)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$onJoin = F2(\r\n\tfunction (valueToMsg, channel) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{\r\n\t\t\t\tonJoin: _elm_lang$core$Maybe$Just(valueToMsg)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$onClose = F2(\r\n\tfunction (valueToMsg, channel) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{\r\n\t\t\t\tonClose: _elm_lang$core$Maybe$Just(valueToMsg)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$onError = F2(\r\n\tfunction (valueToMsg, channel) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{\r\n\t\t\t\tonError: _elm_lang$core$Maybe$Just(valueToMsg)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$withPayload = F2(\r\n\tfunction (payload, channel) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{payload: payload});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$Channel = F9(\r\n\tfunction (a, b, c, d, e, f, g, h, i) {\r\n\t\treturn {name: a, payload: b, state: c, onClose: d, onError: e, onJoin: f, onJoinError: g, joinRef: h, leaveRef: i};\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$Leaving = {ctor: 'Leaving'};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joining = {ctor: 'Joining'};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joined = {ctor: 'Joined'};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$Errored = {ctor: 'Errored'};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$Closed = {ctor: 'Closed'};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Channel$init = function (name) {\r\n\treturn {name: name, payload: _fbonetti$elm_phoenix_socket$Phoenix_Helpers$emptyPayload, state: _fbonetti$elm_phoenix_socket$Phoenix_Channel$Closed, onClose: _elm_lang$core$Maybe$Nothing, onError: _elm_lang$core$Maybe$Nothing, onJoin: _elm_lang$core$Maybe$Nothing, onJoinError: _elm_lang$core$Maybe$Nothing, joinRef: -1, leaveRef: -1};\r\n};\r\n\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Push$map = F2(\r\n\tfunction (fn, push) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tpush,\r\n\t\t\t{\r\n\t\t\t\tonOk: A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\t\treturn function (_p0) {\r\n\t\t\t\t\t\t\t\treturn x(\r\n\t\t\t\t\t\t\t\t\ty(_p0));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})(fn),\r\n\t\t\t\t\tpush.onOk),\r\n\t\t\t\tonError: A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\t\treturn function (_p1) {\r\n\t\t\t\t\t\t\t\treturn x(\r\n\t\t\t\t\t\t\t\t\ty(_p1));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})(fn),\r\n\t\t\t\t\tpush.onError)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Push$onError = F2(\r\n\tfunction (valueToMsg, push) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tpush,\r\n\t\t\t{\r\n\t\t\t\tonError: _elm_lang$core$Maybe$Just(valueToMsg)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Push$onOk = F2(\r\n\tfunction (valueToMsg, push) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tpush,\r\n\t\t\t{\r\n\t\t\t\tonOk: _elm_lang$core$Maybe$Just(valueToMsg)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Push$withPayload = F2(\r\n\tfunction (payload, push) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tpush,\r\n\t\t\t{payload: payload});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Push$Push = F5(\r\n\tfunction (a, b, c, d, e) {\r\n\t\treturn {event: a, channel: b, payload: c, onOk: d, onError: e};\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Push$init = F2(\r\n\tfunction (event, channel) {\r\n\t\treturn A5(_fbonetti$elm_phoenix_socket$Phoenix_Push$Push, event, channel, _fbonetti$elm_phoenix_socket$Phoenix_Helpers$emptyPayload, _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing);\r\n\t});\r\n\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$map = F2(\r\n\tfunction (fn, socket) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tsocket,\r\n\t\t\t{\r\n\t\t\t\tchannels: A2(\r\n\t\t\t\t\t_elm_lang$core$Dict$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (_p0, channel) {\r\n\t\t\t\t\t\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Channel$map, fn, channel);\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\tsocket.channels),\r\n\t\t\t\tevents: A2(\r\n\t\t\t\t\t_elm_lang$core$Dict$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (_p1, event) {\r\n\t\t\t\t\t\t\treturn function (_p2) {\r\n\t\t\t\t\t\t\t\treturn fn(\r\n\t\t\t\t\t\t\t\t\tevent(_p2));\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\tsocket.events),\r\n\t\t\t\tpushes: A2(\r\n\t\t\t\t\t_elm_lang$core$Dict$map,\r\n\t\t\t\t\tF2(\r\n\t\t\t\t\t\tfunction (_p3, push) {\r\n\t\t\t\t\t\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Push$map, fn, push);\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\tsocket.pushes)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$replyDecoder = A3(\r\n\t_elm_lang$core$Json_Decode$map2,\r\n\tF2(\r\n\t\tfunction (v0, v1) {\r\n\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\r\n\t\t}),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'status', _elm_lang$core$Json_Decode$string),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'response', _elm_lang$core$Json_Decode$value));\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$decodeMessage = function (_p4) {\r\n\treturn _elm_lang$core$Result$toMaybe(\r\n\t\tA2(_elm_lang$core$Json_Decode$decodeString, _fbonetti$elm_phoenix_socket$Phoenix_Helpers$messageDecoder, _p4));\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$debugIfEnabled = function (socket) {\r\n\treturn socket.debug ? _elm_lang$core$Debug$log('phx_message') : _elm_lang$core$Basics$identity;\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$phoenixMessages = function (socket) {\r\n\treturn A2(_elm_lang$websocket$WebSocket$listen, socket.path, _fbonetti$elm_phoenix_socket$Phoenix_Socket$decodeMessage);\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$mapAll = F2(\r\n\tfunction (fn, internalMsg) {\r\n\t\tvar _p5 = internalMsg;\r\n\t\tif (_p5.ctor === 'ExternalMsg') {\r\n\t\t\treturn _p5._0;\r\n\t\t} else {\r\n\t\t\treturn fn(internalMsg);\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$sendMessage = F2(\r\n\tfunction (path, message) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$websocket$WebSocket$send,\r\n\t\t\tpath,\r\n\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Helpers$encodeMessage(message));\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$send = F4(\r\n\tfunction (_p6, event, channel, payload) {\r\n\t\tvar _p7 = _p6;\r\n\t\treturn A2(\r\n\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$sendMessage,\r\n\t\t\t_p7.path,\r\n\t\t\tA4(\r\n\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Helpers$Message,\r\n\t\t\t\tevent,\r\n\t\t\t\tchannel,\r\n\t\t\t\tpayload,\r\n\t\t\t\t_elm_lang$core$Maybe$Just(_p7.ref)));\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$off = F3(\r\n\tfunction (eventName, channelName, socket) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tsocket,\r\n\t\t\t{\r\n\t\t\t\tevents: A2(\r\n\t\t\t\t\t_elm_lang$core$Dict$remove,\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: eventName, _1: channelName},\r\n\t\t\t\t\tsocket.events)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$on = F4(\r\n\tfunction (eventName, channelName, onReceive, socket) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tsocket,\r\n\t\t\t{\r\n\t\t\t\tevents: A3(\r\n\t\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: eventName, _1: channelName},\r\n\t\t\t\t\tonReceive,\r\n\t\t\t\t\tsocket.events)\r\n\t\t\t});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$push = F2(\r\n\tfunction (push_, socket) {\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\tsocket,\r\n\t\t\t\t{\r\n\t\t\t\t\tpushes: A3(_elm_lang$core$Dict$insert, socket.ref, push_, socket.pushes),\r\n\t\t\t\t\tref: socket.ref + 1\r\n\t\t\t\t}),\r\n\t\t\t_1: A4(_fbonetti$elm_phoenix_socket$Phoenix_Socket$send, socket, push_.event, push_.channel, push_.payload)\r\n\t\t};\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$heartbeat = function (socket) {\r\n\tvar push_ = A2(_fbonetti$elm_phoenix_socket$Phoenix_Push$init, 'heartbeat', 'phoenix');\r\n\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$push, push_, socket);\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$leave = F2(\r\n\tfunction (channelName, socket) {\r\n\t\tvar _p8 = A2(_elm_lang$core$Dict$get, channelName, socket.channels);\r\n\t\tif (_p8.ctor === 'Just') {\r\n\t\t\tvar _p9 = _p8._0;\r\n\t\t\tif (_elm_lang$core$Native_Utils.eq(_p9.state, _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joining) || _elm_lang$core$Native_Utils.eq(_p9.state, _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joined)) {\r\n\t\t\t\tvar channel_ = _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p9,\r\n\t\t\t\t\t{state: _fbonetti$elm_phoenix_socket$Phoenix_Channel$Leaving, leaveRef: socket.ref});\r\n\t\t\t\tvar socket_ = _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\tsocket,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchannels: A3(_elm_lang$core$Dict$insert, channelName, channel_, socket.channels)\r\n\t\t\t\t\t});\r\n\t\t\t\tvar push_ = A2(_fbonetti$elm_phoenix_socket$Phoenix_Push$init, 'phx_leave', _p9.name);\r\n\t\t\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$push, push_, socket_);\r\n\t\t\t} else {\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: socket, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {ctor: '_Tuple2', _0: socket, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$joinChannel = F2(\r\n\tfunction (channel, socket) {\r\n\t\tvar channel_ = _elm_lang$core$Native_Utils.update(\r\n\t\t\tchannel,\r\n\t\t\t{state: _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joining, joinRef: socket.ref});\r\n\t\tvar socket_ = _elm_lang$core$Native_Utils.update(\r\n\t\t\tsocket,\r\n\t\t\t{\r\n\t\t\t\tchannels: A3(_elm_lang$core$Dict$insert, channel.name, channel_, socket.channels)\r\n\t\t\t});\r\n\t\tvar push_ = A5(_fbonetti$elm_phoenix_socket$Phoenix_Push$Push, 'phx_join', channel.name, channel.payload, channel.onJoin, channel.onJoinError);\r\n\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$push, push_, socket_);\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$join = F2(\r\n\tfunction (channel, socket) {\r\n\t\tvar _p10 = A2(_elm_lang$core$Dict$get, channel.name, socket.channels);\r\n\t\tif (_p10.ctor === 'Just') {\r\n\t\t\tvar _p11 = _p10._0.state;\r\n\t\t\treturn (_elm_lang$core$Native_Utils.eq(_p11, _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joined) || _elm_lang$core$Native_Utils.eq(_p11, _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joining)) ? {ctor: '_Tuple2', _0: socket, _1: _elm_lang$core$Platform_Cmd$none} : A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$joinChannel, channel, socket);\r\n\t\t} else {\r\n\t\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$joinChannel, channel, socket);\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$withoutHeartbeat = function (socket) {\r\n\treturn _elm_lang$core$Native_Utils.update(\r\n\t\tsocket,\r\n\t\t{withoutHeartbeat: true});\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$withHeartbeatInterval = F2(\r\n\tfunction (intervalSeconds, socket) {\r\n\t\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t\tsocket,\r\n\t\t\t{heartbeatIntervalSeconds: intervalSeconds});\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$withDebug = function (socket) {\r\n\treturn _elm_lang$core$Native_Utils.update(\r\n\t\tsocket,\r\n\t\t{debug: true});\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$update = F2(\r\n\tfunction (msg, socket) {\r\n\t\tvar _p12 = msg;\r\n\t\tswitch (_p12.ctor) {\r\n\t\t\tcase 'ChannelErrored':\r\n\t\t\t\tvar channels = A3(\r\n\t\t\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\t\t\t_p12._0,\r\n\t\t\t\t\t_elm_lang$core$Maybe$map(\r\n\t\t\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Channel$setState(_fbonetti$elm_phoenix_socket$Phoenix_Channel$Errored)),\r\n\t\t\t\t\tsocket.channels);\r\n\t\t\t\tvar socket_ = _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\tsocket,\r\n\t\t\t\t\t{channels: channels});\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: socket_, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\tcase 'ChannelClosed':\r\n\t\t\t\tvar _p15 = _p12._0;\r\n\t\t\t\tvar _p13 = A2(_elm_lang$core$Dict$get, _p15, socket.channels);\r\n\t\t\t\tif (_p13.ctor === 'Just') {\r\n\t\t\t\t\tvar _p14 = _p13._0;\r\n\t\t\t\t\tvar pushes = A2(_elm_lang$core$Dict$remove, _p14.joinRef, socket.pushes);\r\n\t\t\t\t\tvar channels = A3(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t\t\t_p15,\r\n\t\t\t\t\t\tA2(_fbonetti$elm_phoenix_socket$Phoenix_Channel$setState, _fbonetti$elm_phoenix_socket$Phoenix_Channel$Closed, _p14),\r\n\t\t\t\t\t\tsocket.channels);\r\n\t\t\t\t\tvar socket_ = _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tsocket,\r\n\t\t\t\t\t\t{channels: channels, pushes: pushes});\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: socket_, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: socket, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t}\r\n\t\t\tcase 'ChannelJoined':\r\n\t\t\t\tvar _p18 = _p12._0;\r\n\t\t\t\tvar _p16 = A2(_elm_lang$core$Dict$get, _p18, socket.channels);\r\n\t\t\t\tif (_p16.ctor === 'Just') {\r\n\t\t\t\t\tvar _p17 = _p16._0;\r\n\t\t\t\t\tvar pushes = A2(_elm_lang$core$Dict$remove, _p17.joinRef, socket.pushes);\r\n\t\t\t\t\tvar channels = A3(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t\t\t_p18,\r\n\t\t\t\t\t\tA2(_fbonetti$elm_phoenix_socket$Phoenix_Channel$setState, _fbonetti$elm_phoenix_socket$Phoenix_Channel$Joined, _p17),\r\n\t\t\t\t\t\tsocket.channels);\r\n\t\t\t\t\tvar socket_ = _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tsocket,\r\n\t\t\t\t\t\t{channels: channels, pushes: pushes});\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: socket_, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: socket, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t}\r\n\t\t\tcase 'Heartbeat':\r\n\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$heartbeat(socket);\r\n\t\t\tdefault:\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: socket, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$init = function (path) {\r\n\treturn {\r\n\t\tpath: path,\r\n\t\tdebug: false,\r\n\t\tchannels: _elm_lang$core$Dict$fromList(\r\n\t\t\t{ctor: '[]'}),\r\n\t\tevents: _elm_lang$core$Dict$fromList(\r\n\t\t\t{ctor: '[]'}),\r\n\t\tpushes: _elm_lang$core$Dict$fromList(\r\n\t\t\t{ctor: '[]'}),\r\n\t\tref: 0,\r\n\t\theartbeatIntervalSeconds: 30,\r\n\t\twithoutHeartbeat: false\r\n\t};\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$Socket = F8(\r\n\tfunction (a, b, c, d, e, f, g, h) {\r\n\t\treturn {path: a, debug: b, channels: c, events: d, pushes: e, ref: f, heartbeatIntervalSeconds: g, withoutHeartbeat: h};\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$Heartbeat = function (a) {\r\n\treturn {ctor: 'Heartbeat', _0: a};\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$heartbeatSubscription = function (socket) {\r\n\treturn socket.withoutHeartbeat ? _elm_lang$core$Platform_Sub$none : A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second * socket.heartbeatIntervalSeconds, _fbonetti$elm_phoenix_socket$Phoenix_Socket$Heartbeat);\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$ReceiveReply = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'ReceiveReply', _0: a, _1: b};\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$ChannelJoined = function (a) {\r\n\treturn {ctor: 'ChannelJoined', _0: a};\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$ChannelClosed = function (a) {\r\n\treturn {ctor: 'ChannelClosed', _0: a};\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$ChannelErrored = function (a) {\r\n\treturn {ctor: 'ChannelErrored', _0: a};\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$ExternalMsg = function (a) {\r\n\treturn {ctor: 'ExternalMsg', _0: a};\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp = {ctor: 'NoOp'};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$handleInternalPhxReply = F2(\r\n\tfunction (socket, message) {\r\n\t\tvar msg = A2(\r\n\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\tfunction (_p19) {\r\n\t\t\t\tvar _p20 = _p19;\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\t\t\tfunction (ref) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\t\t\t\t\tfunction (channel) {\r\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Native_Utils.eq(_p20._0, 'ok') ? (_elm_lang$core$Native_Utils.eq(ref, channel.joinRef) ? _elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$ChannelJoined(message.topic)) : (_elm_lang$core$Native_Utils.eq(ref, channel.leaveRef) ? _elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$ChannelClosed(message.topic)) : _elm_lang$core$Maybe$Nothing)) : _elm_lang$core$Maybe$Nothing;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tA2(_elm_lang$core$Dict$get, message.topic, socket.channels));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmessage.ref);\r\n\t\t\t},\r\n\t\t\t_elm_lang$core$Result$toMaybe(\r\n\t\t\t\tA2(_elm_lang$core$Json_Decode$decodeValue, _fbonetti$elm_phoenix_socket$Phoenix_Socket$replyDecoder, message.payload)));\r\n\t\treturn A2(_elm_lang$core$Maybe$withDefault, _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp, msg);\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$mapInternalMsgs = F2(\r\n\tfunction (socket, maybeMessage) {\r\n\t\tvar _p21 = maybeMessage;\r\n\t\tif (_p21.ctor === 'Just') {\r\n\t\t\tvar _p23 = _p21._0;\r\n\t\t\tvar message = socket.debug ? A2(_elm_lang$core$Debug$log, 'Phoenix message', _p23) : _p23;\r\n\t\t\tvar _p22 = message.event;\r\n\t\t\tswitch (_p22) {\r\n\t\t\t\tcase 'phx_reply':\r\n\t\t\t\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$handleInternalPhxReply, socket, message);\r\n\t\t\t\tcase 'phx_error':\r\n\t\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$ChannelErrored(message.topic);\r\n\t\t\t\tcase 'phx_close':\r\n\t\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$ChannelClosed(message.topic);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp;\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$internalMsgs = function (socket) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Platform_Sub$map,\r\n\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$mapInternalMsgs(socket),\r\n\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$phoenixMessages(socket));\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$handlePhxReply = F2(\r\n\tfunction (socket, message) {\r\n\t\tvar msg = A2(\r\n\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\tfunction (_p24) {\r\n\t\t\t\tvar _p25 = _p24;\r\n\t\t\t\tvar _p29 = _p25._1;\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\t\t\tfunction (ref) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\t\t\t\t\tfunction (push) {\r\n\t\t\t\t\t\t\t\tvar _p26 = _p25._0;\r\n\t\t\t\t\t\t\t\tswitch (_p26) {\r\n\t\t\t\t\t\t\t\t\tcase 'ok':\r\n\t\t\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\t\t\t\t\t\t\tfunction (f) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn function (_p27) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$ExternalMsg(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tf(_p27));\r\n\t\t\t\t\t\t\t\t\t\t\t\t}(_p29);\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tpush.onOk);\r\n\t\t\t\t\t\t\t\t\tcase 'error':\r\n\t\t\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\t\t\t\t\t\t\tfunction (f) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn function (_p28) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$ExternalMsg(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tf(_p28));\r\n\t\t\t\t\t\t\t\t\t\t\t\t}(_p29);\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tpush.onError);\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tA2(_elm_lang$core$Dict$get, ref, socket.pushes));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmessage.ref);\r\n\t\t\t},\r\n\t\t\t_elm_lang$core$Result$toMaybe(\r\n\t\t\t\tA2(_elm_lang$core$Json_Decode$decodeValue, _fbonetti$elm_phoenix_socket$Phoenix_Socket$replyDecoder, message.payload)));\r\n\t\treturn A2(_elm_lang$core$Maybe$withDefault, _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp, msg);\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$handleEvent = F2(\r\n\tfunction (socket, message) {\r\n\t\tvar _p30 = A2(\r\n\t\t\t_elm_lang$core$Dict$get,\r\n\t\t\t{ctor: '_Tuple2', _0: message.event, _1: message.topic},\r\n\t\t\tsocket.events);\r\n\t\tif (_p30.ctor === 'Just') {\r\n\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$ExternalMsg(\r\n\t\t\t\t_p30._0(message.payload));\r\n\t\t} else {\r\n\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp;\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$mapExternalMsgs = F2(\r\n\tfunction (socket, maybeMessage) {\r\n\t\tvar _p31 = maybeMessage;\r\n\t\tif (_p31.ctor === 'Just') {\r\n\t\t\tvar _p35 = _p31._0;\r\n\t\t\tvar _p32 = _p35.event;\r\n\t\t\tswitch (_p32) {\r\n\t\t\t\tcase 'phx_reply':\r\n\t\t\t\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$handlePhxReply, socket, _p35);\r\n\t\t\t\tcase 'phx_error':\r\n\t\t\t\t\tvar channel = A2(_elm_lang$core$Dict$get, _p35.topic, socket.channels);\r\n\t\t\t\t\tvar onError = A2(\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\t\t\t\tfunction (_) {\r\n\t\t\t\t\t\t\treturn _.onError;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchannel);\r\n\t\t\t\t\tvar msg = A2(\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\t\tfunction (f) {\r\n\t\t\t\t\t\t\treturn function (_p33) {\r\n\t\t\t\t\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$ExternalMsg(\r\n\t\t\t\t\t\t\t\t\tf(_p33));\r\n\t\t\t\t\t\t\t}(_p35.payload);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonError);\r\n\t\t\t\t\treturn A2(_elm_lang$core$Maybe$withDefault, _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp, msg);\r\n\t\t\t\tcase 'phx_close':\r\n\t\t\t\t\tvar channel = A2(_elm_lang$core$Dict$get, _p35.topic, socket.channels);\r\n\t\t\t\t\tvar onClose = A2(\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$andThen,\r\n\t\t\t\t\t\tfunction (_) {\r\n\t\t\t\t\t\t\treturn _.onClose;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchannel);\r\n\t\t\t\t\tvar msg = A2(\r\n\t\t\t\t\t\t_elm_lang$core$Maybe$map,\r\n\t\t\t\t\t\tfunction (f) {\r\n\t\t\t\t\t\t\treturn function (_p34) {\r\n\t\t\t\t\t\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$ExternalMsg(\r\n\t\t\t\t\t\t\t\t\tf(_p34));\r\n\t\t\t\t\t\t\t}(_p35.payload);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonClose);\r\n\t\t\t\t\treturn A2(_elm_lang$core$Maybe$withDefault, _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp, msg);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$handleEvent, socket, _p35);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _fbonetti$elm_phoenix_socket$Phoenix_Socket$NoOp;\r\n\t\t}\r\n\t});\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$externalMsgs = function (socket) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Platform_Sub$map,\r\n\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$mapExternalMsgs(socket),\r\n\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$phoenixMessages(socket));\r\n};\r\nvar _fbonetti$elm_phoenix_socket$Phoenix_Socket$listen = F2(\r\n\tfunction (socket, fn) {\r\n\t\treturn function (_p36) {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Platform_Sub$map,\r\n\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$mapAll(fn),\r\n\t\t\t\t_elm_lang$core$Platform_Sub$batch(_p36));\r\n\t\t}(\r\n\t\t\t{\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _fbonetti$elm_phoenix_socket$Phoenix_Socket$internalMsgs(socket),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _fbonetti$elm_phoenix_socket$Phoenix_Socket$externalMsgs(socket),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _fbonetti$elm_phoenix_socket$Phoenix_Socket$heartbeatSubscription(socket),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n\r\nvar _user$project$Msgs$Token = function (a) {\r\n\treturn {ctor: 'Token', _0: a};\r\n};\r\nvar _user$project$Msgs$GetToken = {ctor: 'GetToken'};\r\nvar _user$project$Msgs$ReceiveChatMessage = function (a) {\r\n\treturn {ctor: 'ReceiveChatMessage', _0: a};\r\n};\r\nvar _user$project$Msgs$SendMessage = {ctor: 'SendMessage'};\r\nvar _user$project$Msgs$ShowLeftMessage = function (a) {\r\n\treturn {ctor: 'ShowLeftMessage', _0: a};\r\n};\r\nvar _user$project$Msgs$ShowJoinedMessage = function (a) {\r\n\treturn {ctor: 'ShowJoinedMessage', _0: a};\r\n};\r\nvar _user$project$Msgs$JoinChannel = {ctor: 'JoinChannel'};\r\nvar _user$project$Msgs$PhoenixMsg = function (a) {\r\n\treturn {ctor: 'PhoenixMsg', _0: a};\r\n};\r\nvar _user$project$Msgs$Delete = {ctor: 'Delete'};\r\nvar _user$project$Msgs$Keypress = function (a) {\r\n\treturn {ctor: 'Keypress', _0: a};\r\n};\r\nvar _user$project$Msgs$SubmitText = {ctor: 'SubmitText'};\r\nvar _user$project$Msgs$NoOp = {ctor: 'NoOp'};\r\n\r\nvar _user$project$Model$socket = _fbonetti$elm_phoenix_socket$Phoenix_Socket$withDebug(\r\n\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$init('ws://localhost:4000/socket/websocket'));\r\nvar _user$project$Model$model = {\r\n\tmessages: {\r\n\t\tctor: '::',\r\n\t\t_0: 'Hello World',\r\n\t\t_1: {ctor: '[]'}\r\n\t},\r\n\tinput: '',\r\n\tpre: '|> ',\r\n\tphxSocket: _user$project$Model$socket,\r\n\ttoken: ''\r\n};\r\nvar _user$project$Model$Model = F5(\r\n\tfunction (a, b, c, d, e) {\r\n\t\treturn {messages: a, input: b, pre: c, phxSocket: d, token: e};\r\n\t});\r\n\r\nvar _user$project$Ports$getToken = _elm_lang$core$Native_Platform.outgoingPort(\r\n\t'getToken',\r\n\tfunction (v) {\r\n\t\treturn null;\r\n\t});\r\nvar _user$project$Ports$token = _elm_lang$core$Native_Platform.incomingPort('token', _elm_lang$core$Json_Decode$string);\r\n\r\nvar _user$project$Update$userParams = function (model) {\r\n\treturn _elm_lang$core$Json_Encode$object(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: 'id',\r\n\t\t\t\t_1: _elm_lang$core$Json_Encode$string(model.token)\r\n\t\t\t},\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t});\r\n};\r\nvar _user$project$Update$joinChannel = function (model) {\r\n\tvar channel = A2(\r\n\t\t_fbonetti$elm_phoenix_socket$Phoenix_Channel$onClose,\r\n\t\t_elm_lang$core$Basics$always(\r\n\t\t\t_user$project$Msgs$ShowLeftMessage(\r\n\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], 'room:', model.token))),\r\n\t\tA2(\r\n\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Channel$onJoin,\r\n\t\t\t_elm_lang$core$Basics$always(\r\n\t\t\t\t_user$project$Msgs$ShowJoinedMessage(\r\n\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], 'room:', model.token))),\r\n\t\t\tA2(\r\n\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Channel$withPayload,\r\n\t\t\t\t_user$project$Update$userParams(model),\r\n\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Channel$init(\r\n\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], 'room:', model.token)))));\r\n\tvar _p0 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$join, channel, model.phxSocket);\r\n\tvar phxSocket = _p0._0;\r\n\tvar phxCmd = _p0._1;\r\n\treturn {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\tmodel,\r\n\t\t\t{\r\n\t\t\t\tphxSocket: A4(\r\n\t\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Socket$on,\r\n\t\t\t\t\t'new:msg',\r\n\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], 'room:', model.token),\r\n\t\t\t\t\t_user$project$Msgs$ReceiveChatMessage,\r\n\t\t\t\t\tphxSocket)\r\n\t\t\t}),\r\n\t\t_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Msgs$PhoenixMsg, phxCmd)\r\n\t};\r\n};\r\nvar _user$project$Update$ChatMessage = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {id: a, body: b};\r\n\t});\r\nvar _user$project$Update$chatMessageDecoder = A3(\r\n\t_elm_lang$core$Json_Decode$map2,\r\n\t_user$project$Update$ChatMessage,\r\n\tA2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string),\r\n\tA2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));\r\nvar _user$project$Update$update = F2(\r\n\tfunction (msg, model) {\r\n\t\tvar _p1 = msg;\r\n\t\tswitch (_p1.ctor) {\r\n\t\t\tcase 'NoOp':\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\tcase 'SubmitText':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmessages: {ctor: '::', _0: model.input, _1: model.messages},\r\n\t\t\t\t\t\t\tinput: ''\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tcase 'Keypress':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinput: A2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\tmodel.input,\r\n\t\t\t\t\t\t\t\t_elm_lang$core$String$fromChar(_p1._0))\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tcase 'Delete':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinput: A3(_elm_lang$core$String$slice, 0, -1, model.input)\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tcase 'PhoenixMsg':\r\n\t\t\t\tvar _p2 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$update, _p1._0, model.phxSocket);\r\n\t\t\t\tvar phxSocket = _p2._0;\r\n\t\t\t\tvar phxCmd = _p2._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{phxSocket: phxSocket}),\r\n\t\t\t\t\t_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Msgs$PhoenixMsg, phxCmd)\r\n\t\t\t\t};\r\n\t\t\tcase 'JoinChannel':\r\n\t\t\t\treturn _user$project$Update$joinChannel(model);\r\n\t\t\tcase 'ShowJoinedMessage':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(_elm_lang$core$Basics_ops['++'], 'Joined channel ', _p1._0),\r\n\t\t\t\t\t\t\t\t_1: model.messages\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tcase 'ShowLeftMessage':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(_elm_lang$core$Basics_ops['++'], 'Left channel ', _p1._0),\r\n\t\t\t\t\t\t\t\t_1: model.messages\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tcase 'SendMessage':\r\n\t\t\t\tvar payload = _elm_lang$core$Json_Encode$object(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: {\r\n\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t_0: 'id',\r\n\t\t\t\t\t\t\t_1: _elm_lang$core$Json_Encode$string(model.token)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t_0: {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: 'body',\r\n\t\t\t\t\t\t\t\t_1: _elm_lang$core$Json_Encode$string(model.input)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tvar push_ = A2(\r\n\t\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Push$withPayload,\r\n\t\t\t\t\tpayload,\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_fbonetti$elm_phoenix_socket$Phoenix_Push$init,\r\n\t\t\t\t\t\t'new:msg',\r\n\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], 'room:', model.token)));\r\n\t\t\t\tvar _p3 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$push, push_, model.phxSocket);\r\n\t\t\t\tvar phxSocket = _p3._0;\r\n\t\t\t\tvar phxCmd = _p3._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{input: '', phxSocket: phxSocket}),\r\n\t\t\t\t\t_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Msgs$PhoenixMsg, phxCmd)\r\n\t\t\t\t};\r\n\t\t\tcase 'ReceiveChatMessage':\r\n\t\t\t\tvar _p4 = A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$Update$chatMessageDecoder, _p1._0);\r\n\t\t\t\tif (_p4.ctor === 'Ok') {\r\n\t\t\t\t\tvar _p5 = _p4._0;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t\t\t_p5.id,\r\n\t\t\t\t\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], ': ', _p5.body)),\r\n\t\t\t\t\t\t\t\t\t_1: model.messages\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t}\r\n\t\t\tcase 'GetToken':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: model,\r\n\t\t\t\t\t_1: _user$project$Ports$getToken(\r\n\t\t\t\t\t\t{ctor: '_Tuple0'})\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\tvar _p6 = _p1._0;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttoken: _p6,\r\n\t\t\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(_elm_lang$core$Basics_ops['++'], 'Token: ', _p6),\r\n\t\t\t\t\t\t\t\t_1: model.messages\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\nvar _user$project$View$displayMessages = function (string) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html$div,\r\n\t\t{ctor: '[]'},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$html$Html$text(string),\r\n\t\t\t_1: {ctor: '[]'}\r\n\t\t});\r\n};\r\nvar _user$project$View$handleKeys = function (number) {\r\n\tvar _p0 = number;\r\n\tswitch (_p0) {\r\n\t\tcase 13:\r\n\t\t\treturn _user$project$Msgs$SendMessage;\r\n\t\tcase 8:\r\n\t\t\treturn _user$project$Msgs$Delete;\r\n\t\tdefault:\r\n\t\t\treturn _user$project$Msgs$Keypress(\r\n\t\t\t\t_elm_lang$core$Char$fromCode(number));\r\n\t}\r\n};\r\nvar _user$project$View$keycode = A2(_elm_lang$core$Json_Decode$field, 'key', _elm_lang$core$Json_Decode$int);\r\nvar _user$project$View$which = A2(_elm_lang$core$Json_Decode$field, 'which', _elm_lang$core$Json_Decode$int);\r\nvar _user$project$View$options = {stopPropagation: true, preventDefault: true};\r\nvar _user$project$View$onKeypress = function (tagger) {\r\n\treturn A3(\r\n\t\t_elm_lang$html$Html_Events$onWithOptions,\r\n\t\t'keypress',\r\n\t\t_user$project$View$options,\r\n\t\tA2(_elm_lang$core$Json_Decode$map, tagger, _user$project$View$which));\r\n};\r\nvar _user$project$View$view = function (model) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html$div,\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: _elm_lang$html$Html_Attributes$id('application'),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _elm_lang$html$Html_Attributes$class('application'),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$html$Html_Attributes$tabindex(1),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _user$project$View$onKeypress(_user$project$View$handleKeys),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: A2(\r\n\t\t\t\t_elm_lang$html$Html$button,\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$GetToken),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: _elm_lang$html$Html$text('Get Token'),\r\n\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t}),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: A2(\r\n\t\t\t\t\t_elm_lang$html$Html$button,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$JoinChannel),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: _elm_lang$html$Html$text('Join Channel'),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}),\r\n\t\t\t\t_1: {\r\n\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t\t\t_user$project$View$displayMessages,\r\n\t\t\t\t\t\t\t_elm_lang$core$List$reverse(model.messages))),\r\n\t\t\t\t\t_1: {\r\n\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$html$Html_Attributes$class('flex'),\r\n\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$html$Html$span,\r\n\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$html$Html$text(\r\n\t\t\t\t\t\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], model.pre, model.input)),\r\n\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$html$Html$span,\r\n\t\t\t\t\t\t\t\t\t\t{ctor: '[]'},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$svg$Svg$svg,\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$width('16'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$height('16'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 16 16'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$svg$Svg$line,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$x1('0'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$y1('15'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$x2('0'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$y2('1'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$stroke('white'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$strokeWidth('2'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: A2(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$svg$Svg$animate,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$attributeName('opacity'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$attributeType('XML'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$from('1'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$to('0.2'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$dur('0.9'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _elm_lang$svg$Svg_Attributes$repeatCount('indefinite'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ctor: '[]'}),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _user$project$View$onKeyup = function (tagger) {\r\n\treturn A3(\r\n\t\t_elm_lang$html$Html_Events$onWithOptions,\r\n\t\t'keyup',\r\n\t\t_user$project$View$options,\r\n\t\tA2(_elm_lang$core$Json_Decode$map, tagger, _user$project$View$keycode));\r\n};\r\n\r\nvar _user$project$Subscriptions$subscriptions = function (model) {\r\n\treturn _elm_lang$core$Platform_Sub$batch(\r\n\t\t{\r\n\t\t\tctor: '::',\r\n\t\t\t_0: A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$listen, model.phxSocket, _user$project$Msgs$PhoenixMsg),\r\n\t\t\t_1: {\r\n\t\t\t\tctor: '::',\r\n\t\t\t\t_0: _user$project$Ports$token(_user$project$Msgs$Token),\r\n\t\t\t\t_1: {ctor: '[]'}\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nvar _user$project$Main$main = _elm_lang$html$Html$program(\r\n\t{\r\n\t\tinit: {ctor: '_Tuple2', _0: _user$project$Model$model, _1: _elm_lang$core$Platform_Cmd$none},\r\n\t\tupdate: _user$project$Update$update,\r\n\t\tview: _user$project$View$view,\r\n\t\tsubscriptions: _user$project$Subscriptions$subscriptions\r\n\t})();\r\n\r\nvar Elm = {};\r\nElm['Main'] = Elm['Main'] || {};\r\nif (typeof _user$project$Main$main !== 'undefined') {\r\n    _user$project$Main$main(Elm['Main'], 'Main', {\"types\":{\"message\":\"Msgs.Msg\",\"aliases\":{\"Time.Time\":{\"type\":\"Float\",\"args\":[]}},\"unions\":{\"Msgs.Msg\":{\"tags\":{\"PhoenixMsg\":[\"Phoenix.Socket.Msg Msgs.Msg\"],\"GetToken\":[],\"Keypress\":[\"Char\"],\"ShowJoinedMessage\":[\"String\"],\"NoOp\":[],\"Delete\":[],\"SubmitText\":[],\"SendMessage\":[],\"ShowLeftMessage\":[\"String\"],\"Token\":[\"String\"],\"ReceiveChatMessage\":[\"Json.Encode.Value\"],\"JoinChannel\":[]},\"args\":[]},\"Phoenix.Socket.Msg\":{\"tags\":{\"ExternalMsg\":[\"msg\"],\"Heartbeat\":[\"Time.Time\"],\"ChannelJoined\":[\"String\"],\"NoOp\":[],\"ReceiveReply\":[\"String\",\"Int\"],\"ChannelErrored\":[\"String\"],\"ChannelClosed\":[\"String\"]},\"args\":[\"msg\"]},\"Json.Encode.Value\":{\"tags\":{\"Value\":[]},\"args\":[]}}},\"versions\":{\"elm\":\"0.18.0\"}});\r\n}\r\n\r\nif (typeof define === \"function\" && define['amd'])\r\n{\r\n  define([], function() { return Elm; });\r\n  return;\r\n}\r\n\r\nif (typeof module === \"object\")\r\n{\r\n  module['exports'] = Elm;\r\n  return;\r\n}\r\n\r\nvar globalElm = this['Elm'];\r\nif (typeof globalElm === \"undefined\")\r\n{\r\n  this['Elm'] = Elm;\r\n  return;\r\n}\r\n\r\nfor (var publicModule in Elm)\r\n{\r\n  if (publicModule in globalElm)\r\n  {\r\n    throw new Error('There are two Elm modules called `' + publicModule + '` on this page! Rename one of them.');\r\n  }\r\n  globalElm[publicModule] = Elm[publicModule];\r\n}\r\n\r\n}).call(this);\r\n\r\n"]}